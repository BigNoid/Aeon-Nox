<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="ListItemAudioCodecPlusFilenameFlags">
		<value condition="SubString(ListItem.Filenameandpath,.atmos.)">atmos</value>
		<value condition="SubString(ListItem.Filenameandpath,.atmos-)">atmos</value>
		<value condition="SubString(ListItem.Filenameandpath,.dts-x.)">dts-x</value>
		<value condition="SubString(ListItem.Filenameandpath,.dts.x.)">dts-x</value>
		<value condition="SubString(ListItem.Filenameandpath,.dtsx.)">dts-x</value>
		<value condition="SubString(ListItem.Filenameandpath,.dts-x-)">dts-x</value>
		<value condition="SubString(ListItem.Filenameandpath,.dts.x-)">dts-x</value>
		<value condition="SubString(ListItem.Filenameandpath,.dtsx-)">dts-x</value>
		<value>$INFO[ListItem.AudioCodec]</value>
	</variable>
	<variable name="VideoPlayerAudioCodecPlusFilenameFlags">
		<value condition="SubString(Player.Filename,.atmos.)">atmos</value>
		<value condition="SubString(Player.Filename,.atmos-)">atmos</value>
		<value condition="SubString(Player.Filename,.dts-x.)">dts-x</value>
		<value condition="SubString(Player.Filename,.dts.x.)">dts-x</value>
		<value condition="SubString(Player.Filename,.dtsx.)">dts-x</value>
		<value condition="SubString(Player.Filename,.dts-x-)">dts-x</value>
		<value condition="SubString(Player.Filename,.dts.x-)">dts-x</value>
		<value condition="SubString(Player.Filename,.dtsx-)">dts-x</value>
		<value>$INFO[VideoPlayer.AudioCodec]</value>
	</variable>
	<variable name="GlobalBackgroundVar">
		<value condition="!String.IsEmpty(ListItem.Art(extrafanart1)) + !Skin.HasSetting(Disable.Extrafanart) + !Skin.HasSetting(Disable.Fanart)">$INFO[Control.GetLabel(4410)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart)) + !Skin.HasSetting(Disable.Fanart)">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(set.fanart))">$INFO[Container.Art(set.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="Window.IsActive(1133) + !String.IsEmpty(Container(51).ListItem.Art(fanart)) + Control.HasFocus(51)">$INFO[Container(51).ListItem.Art(fanart)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Thumb,1)">$INFO[Window(Home).Property(script.grab.fanart.Movie.FanArt)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Thumb,2)">$INFO[Window(Home).Property(script.grab.fanart.TV.FanArt)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Thumb,3)">$INFO[Window(Home).Property(script.grab.fanart.Video.FanArt)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Thumb,4)">$INFO[Window(Home).Property(script.grab.fanart.Music.FanArt)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Thumb,5)">$INFO[Window(Home).Property(script.grab.fanart.Global.FanArt)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Thumb,6)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherBackgroundTypeVar]</value>
		<value condition="!String.IsEmpty(Container(9033).ListItem.Thumb)">$INFO[Container(9033).ListItem.Thumb]</value>
		<value>$INFO[Window(home).Property(fakelabel)]</value>
	</variable>
	<variable name="HomeBackgroundVar">
		<value condition="String.IsEqual(Container(9000).ListItem.Thumb,1)">$INFO[Window(Home).Property(script.grab.fanart.Movie.FanArt)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Thumb,2)">$INFO[Window(Home).Property(script.grab.fanart.TV.FanArt)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Thumb,3)">$INFO[Window(Home).Property(script.grab.fanart.Video.FanArt)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Thumb,4)">$INFO[Window(Home).Property(script.grab.fanart.Music.FanArt)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Thumb,5)">$INFO[Window(Home).Property(script.grab.fanart.Global.FanArt)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Thumb,6)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherBackgroundTypeVar]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(BGType),7)">$INFO[Container(9034).ListItem.Art(fanart)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(BGType),4) | String.IsEqual(Container(9000).ListItem.Property(BGType),5)">special://skin/backgrounds/default_livecases.jpg</value>
		<value condition="String.IsEmpty(Container(9000).ListItem.Thumb)">$INFO[Window(home).Property(fakelabel)]</value>
		<value>$INFO[Container(9000).ListItem.Thumb]</value>
	</variable>
	<variable name="WidgetFanartVar">
		<value condition="!String.IsEmpty(Container(8000).ListItem.Art(fanart)) + Control.HasFocus(8000)">$INFO[Container(8000).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8001).ListItem.Art(fanart)) + Control.HasFocus(8001)">$INFO[Container(8001).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8002).ListItem.Art(fanart)) + Control.HasFocus(8002)">$INFO[Container(8002).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8003).ListItem.Art(fanart)) + Control.HasFocus(8003)">$INFO[Container(8003).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8004).ListItem.Art(fanart)) + Control.HasFocus(8004)">$INFO[Container(8004).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8005).ListItem.Art(fanart)) + Control.HasFocus(8005)">$INFO[Container(8005).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8006).ListItem.Art(fanart)) + Control.HasFocus(8006)">$INFO[Container(8006).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8007).ListItem.Art(fanart)) + Control.HasFocus(8007)">$INFO[Container(8007).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8008).ListItem.Art(fanart)) + Control.HasFocus(8008)">$INFO[Container(8008).ListItem.Art(fanart)]</value>
	</variable>
	<variable name="VizBackgroundLabelVar">
		<value condition="String.IsEqual(Skin.String(Viz.Background),1)">$LOCALIZE[31068]</value>
		<value condition="String.IsEqual(Skin.String(Viz.Background),2)">$LOCALIZE[31065]</value>
		<value condition="String.IsEqual(Skin.String(Viz.Background),3)">$INFO[System.AddonTitle(script.artistslideshow)]</value>
		<value condition="String.IsEqual(Skin.String(Viz.Background),4)">$LOCALIZE[31002]</value>
		<value>$LOCALIZE[20445]</value>
	</variable>
	<variable name="VizBackgroundVar">
		<value condition="String.IsEqual(Skin.String(Viz.Background),2)">$INFO[Window(Home).Property(script.grab.fanart.Music.FanArt)]</value>
		<value condition="String.IsEqual(Skin.String(Viz.Background),3)">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</value>
		<value condition="String.IsEqual(Skin.String(Viz.Background),4) + !String.IsEmpty(Window(home).Property(ImageFilter))">$INFO[Window(home).Property(ImageFilter)]</value>
		<value condition="!String.IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
		<value>$INFO[Window(Home).Property(script.grab.fanart.Music.FanArt)]</value>
	</variable>
	<variable name="FallbackBackgroundOnClickVar">
		<value condition="Container.Content(movies)">SetProperty(Nox.Temp,Movies.Fallback,home)</value>
		<value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">SetProperty(Nox.Temp,TVShows.Fallback,home)</value>
		<value condition="Container.Content(musicvideos)">SetProperty(Nox.Temp,MusicVideos.Fallback,home)</value>
		<value condition="Window.IsActive(videos) | Window.IsActive(videoplaylist)">SetProperty(Nox.Temp,Videos.Fallback,home)</value>
		<value condition="Window.IsActive(music) | Window.IsActive(musicplaylist)">SetProperty(Nox.Temp,Music.Fallback,home)</value>
		<value condition="Window.IsActive(pvr)">SetProperty(Nox.Temp,LiveTV.Fallback,home)</value>
		<value condition="Window.IsActive(SettingsCategory.xml) | Window.IsActive(systeminfo) | Window.IsActive(skinsettings) | Window.IsActive(settings) | Window.IsActive(addonbrowser) | Window.IsActive(filemanager) | Window.IsActive(eventlog) | Window.IsActive(profiles)">SetProperty(Nox.Temp,System.Fallback,home)</value>
		<value condition="Window.IsActive(programs) | Window.IsActive(1133)">SetProperty(Nox.Temp,Apps.Fallback,home)</value>
		<value condition="Window.IsActive(pictures)">SetProperty(Nox.Temp,Pictures.Fallback,home)</value>
		<value condition="Window.IsActive(games)">SetProperty(Nox.Temp,Games.Fallback,home)</value>
	</variable>
	<variable name="OverlayVar">
		<value condition="Container.ListItem.IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value condition="String.IsEqual(Window(Home).Property(Overlay.Path),overlays/showcase/3/)">$INFO[ListItem.Overlay,overlays/showcase/3/]</value>
		<value condition="String.IsEqual(Window(Home).Property(Overlay.Path),overlays/showcase/2/)">$INFO[ListItem.Overlay,overlays/showcase/2/]</value>
		<value condition="String.IsEqual(Window(Home).Property(Overlay.Path),overlays/showcase/1/)">$INFO[ListItem.Overlay,overlays/showcase/1/]</value>
		<value>$INFO[ListItem.Overlay,overlays/showcase/]</value>
	</variable>
	<variable name="ListItem.Overlay">
		<value condition="ListItem.IsResumable">overlays/list/resumable.png</value>
		<value>$INFO[ListItem.Overlay,overlays/list/]</value>
	</variable>
	<variable name="ListOverlayEpisodesVar">
		<value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),99)">   99 +</value>
		<value>$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
	</variable>
	<variable name="BreadcrumbsFillerVar">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">$LOCALIZE[20343]: </value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://recentlyadded)">$INFO[Window(home).Property(fakelabel)]</value>
		<value condition="Container.Content(episodes) + !String.IsEqual(Container.FolderName,Container.ShowTitle)">$INFO[Container.ShowTitle]: </value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://tvshows/)">$LOCALIZE[20343]: </value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://movies/)">$LOCALIZE[20342]: </value>
		<value condition="Window.IsActive(textviewer)">$INFO[Control.GetLabel(1)]</value>
		<value condition="Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)">$INFO[System.AddonTitle(script.tv.show.next.aired)]</value>
		<value condition="Window.IsActive(skinsettings)">$LOCALIZE[20077]</value>
		<value condition="Window.IsActive(music) + !String.IsEmpty(Container.FolderName)">$LOCALIZE[2]: </value>
		<value condition="Window.IsActive(music)">$LOCALIZE[2]</value>
		<value condition="Window.IsActive(tvchannels) | Window.IsActive(TVGuide) | Window.IsActive(TVRecordings) | Window.IsActive(TVTimers) | Window.IsActive(TVSearch)">$LOCALIZE[19020]: </value>
		<value condition="Window.IsActive(RadioChannels) | Window.IsActive(RadioGuide) | Window.IsActive(RadioRecordings) | Window.IsActive(RadioSearch)">$LOCALIZE[19183]: </value>
		<value condition="Window.IsActive(Games) + [Container.Content(games) | Container.Content(addons)]">$LOCALIZE[15016]: </value>
		<value condition="Window.IsActive(Games)">$LOCALIZE[15016]</value>
		<value condition="!String.IsEmpty(Container.FolderName)">$INFO[System.CurrentWindow]: </value>
		<value>$INFO[System.CurrentWindow]</value>
	</variable>
	<variable name="BreadcrumbsVar">
		<value condition="Window.IsActive(videos) + Container.Filtered">$VAR[BreadcrumbsFillerVar]$INFO[Container.FolderName]$INFO[Control.GetLabel(10),[COLOR grey3] | ,: $LOCALIZE[587][/COLOR]]</value>
		<value condition="Window.IsActive(videos) + !String.IsEqual(Control.GetLabel(10),$LOCALIZE[16100])">$VAR[BreadcrumbsFillerVar]$INFO[Container.FolderName]$INFO[Control.GetLabel(10),[COLOR grey3] | ,[/COLOR]]</value>
		<value condition="Window.IsActive(videos)">$VAR[BreadcrumbsFillerVar]$INFO[Container.FolderName]</value>
		<value condition="Window.IsActive(addoninformation) + !Window.IsActive(textviewer)">$VAR[BreadcrumbsFillerVar]$INFO[ListItem.AddonName]</value>
		<value condition="Window.IsActive(textviewer)">$VAR[BreadcrumbsFillerVar]</value>
		<value condition="Window.IsActive(script-globalsearch-main.xml)">$INFO[System.AddonTitle(script.globalsearch)]$INFO[Control.GetLabel(190),: ]$INFO[Control.GetLabel(191), ]</value>
		<value condition="Window.IsActive(TVGuide) | Window.IsActive(RadioGuide)">$VAR[BreadcrumbsFillerVar,, $LOCALIZE[19069]]</value>
		<value condition="Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings)">$VAR[BreadcrumbsFillerVar,, $LOCALIZE[19163]]</value>
		<value condition="Window.IsActive(TVTimers) | Window.IsActive(RadioTimers)">$VAR[BreadcrumbsFillerVar,, $LOCALIZE[19040]]</value>
		<value condition="Window.IsActive(TVSearch) | Window.IsActive(RadioSearch)">$VAR[BreadcrumbsFillerVar,, $LOCALIZE[137]]</value>
		<value condition="Window.IsActive(eventlog)">$LOCALIZE[14111]$INFO[Control.GetLabel(21),[COLOR grey3] | , [/COLOR]]</value>
		<value condition="Window.IsActive(SettingsCategory.xml)">$INFO[Control.GetLabel(2),$LOCALIZE[5]: ]$INFO[Control.GetLabel(20),[COLOR grey3] | , [/COLOR]]</value>
		<value>$VAR[BreadcrumbsFillerVar]$INFO[Container.FolderName]</value>
	</variable>
	<variable name="LibraryStatsVar">
		<value condition="ControlGroup(9004).HasFocus()">$VAR[WidgetLabelVar]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),1)">$INFO[Window(Home).Property(Movies.Count),[COLOR grey]$LOCALIZE[20342]:[/COLOR] ]$INFO[Window(Home).Property(Movies.Watched),[COLOR grey]  |  $LOCALIZE[16102]:[/COLOR] ]$INFO[Window(Home).Property(Movies.UnWatched),[COLOR grey]  |  $LOCALIZE[16101]:[/COLOR] ]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),2)">$INFO[Window(Home).Property(TVShows.Count),[COLOR grey]$LOCALIZE[20343]:[/COLOR] ]$INFO[Window(Home).Property(Episodes.Count),[COLOR grey]  |  $LOCALIZE[20360]:[/COLOR] ]$INFO[Window(Home).Property(Episodes.UnWatched),[COLOR grey]  |  $LOCALIZE[16101]:[/COLOR] ]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),3)">$INFO[Window(Home).Property(Music.ArtistsCount),[COLOR grey]$LOCALIZE[133]:[/COLOR] ]$INFO[Window(Home).Property(Music.AlbumsCount),[COLOR grey]  |  $LOCALIZE[132]:[/COLOR] ]$INFO[Window(Home).Property(Music.SongsCount),[COLOR grey]  |  $LOCALIZE[134]:[/COLOR] ]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),4) + PVR.IsRecording">$LOCALIZE[19158] $INFO[PVR.NowRecordingDateTime,[COLOR=white],]  |  [/COLOR][COLOR=FF48D1CC]$INFO[PVR.NowRecordingTitle][/COLOR][COLOR=white]$INFO[PVR.NowRecordingChannel, (,)][/COLOR]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),4) + PVR.HasNonRecordingTimer">$LOCALIZE[19157] $INFO[PVR.NextRecordingDateTime,[COLOR=white],]  |  [/COLOR]$INFO[PVR.NextRecordingTitle,[COLOR=white],[/COLOR]]$INFO[PVR.NextRecordingChannel,[COLOR=white] - ,[/COLOR]]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),4)">$INFO[Pvr.BackendChannels,[COLOR grey]$LOCALIZE[19019]:[/COLOR] ]$INFO[Pvr.BackendRecordings,[COLOR grey]  |  $LOCALIZE[19163]:[/COLOR] ]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),5)">$INFO[Weather.Location,[COLOR grey],:[/COLOR] ]$INFO[Weather.Conditions]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),6)">$INFO[Window(Home).Property(RandomAddon.Count),[COLOR grey]$LOCALIZE[20161] $LOCALIZE[24001]: [/COLOR],[COLOR grey]  |  [/COLOR]]$INFO[Window(home).Property(favourite.count), [COLOR grey]$LOCALIZE[1036]:[/COLOR] ]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),7)">$INFO[Window(Home).Property(MusicVideos.Count),[COLOR grey]$LOCALIZE[20389]:[/COLOR] ]$INFO[Window(Home).Property(MusicVideos.Watched),[COLOR grey]  |  $LOCALIZE[16102]:[/COLOR] ]$INFO[Window(Home).Property(MusicVideos.UnWatched),[COLOR grey]  |  $LOCALIZE[16101]:[/COLOR] ]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),8)">$INFO[System.memory(used.percent),[COLOR grey]$LOCALIZE[31309][/COLOR] ]$INFO[System.CPUUsage,[COLOR grey]  |  $LOCALIZE[13271][/COLOR] ]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),9)">$INFO[Window(Home).Property(PlaylistCount),[COLOR grey]$LOCALIZE[20342]:[/COLOR] ]$INFO[Window(Home).Property(PlaylistWatched),[COLOR grey]  |  $LOCALIZE[16102]:[/COLOR] ]$INFO[Window(Home).Property(PlaylistUnWatched),[COLOR grey]  |  $LOCALIZE[16101]:[/COLOR] ]$INFO[Window(Home).Property(PlaylistInProgress),[COLOR grey]  |  $LOCALIZE[575]:[/COLOR] ]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),10)">$INFO[Window(Home).Property(PlaylistTVShowCount),[COLOR grey]$LOCALIZE[20343]:[/COLOR] ]$INFO[Window(Home).Property(PlaylistEpisodes),[COLOR grey]  |  $LOCALIZE[20360]:[/COLOR] ]$INFO[Window(Home).Property(PlaylistEpisodesUnWatched),[COLOR grey]  |  $LOCALIZE[16101]:[/COLOR] ]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),11)">$INFO[Window(Home).Property(PlaylistCount),[COLOR grey]$LOCALIZE[20389]:[/COLOR] ]$INFO[Window(Home).Property(PlaylistWatched),[COLOR grey]  |  $LOCALIZE[16102]:[/COLOR] ]$INFO[Window(Home).Property(PlaylistUnWatched),[COLOR grey]  |  $LOCALIZE[16101]:[/COLOR] ]$INFO[Window(Home).Property(PlaylistInProgress),[COLOR grey]  |  $LOCALIZE[575]:[/COLOR] ]</value>
	</variable>
	<variable name="MusicOSDRepeatButtonVar">
		<value condition="[!Playlist.IsRepeat + !Playlist.IsRepeatOne] + !Control.HasFocus(707)">osd/buttons/OSDRepeatNF.png</value>
		<value condition="Playlist.IsRepeatOne+!Control.HasFocus(707)">osd/buttons/OSDRepeatOneNF.png</value>
		<value condition="Playlist.IsRepeat+!Control.HasFocus(707)">osd/buttons/OSDRepeatAllNF.png</value>
		<value condition="[!Playlist.IsRepeat + !Playlist.IsRepeatOne] + Control.HasFocus(707)">osd/buttons/OSDRepeatFO.png</value>
		<value condition="Playlist.IsRepeatOne+ Control.HasFocus(707)">osd/buttons/OSDRepeatOneFO.png</value>
		<value condition="Playlist.IsRepeat+ Control.HasFocus(707)">osd/buttons/OSDRepeatAllFO.png</value>
	</variable>
	<!-- List Label Vars -->
	<variable name="VideoListLabelVar">
		<value condition="Skin.HasSetting(Enable.HideRatings) + String.IsEqual(ListItem.Label2,ListItem.Rating) + !String.IsEqual(Container.SortMethod,$LOCALIZE[563])">$INFO[ListItem.Year]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>
	<variable name="EpisodeTitleVar">
		<value condition="String.EndsWith(Container.FolderName,$LOCALIZE[20387]) + !ListItem.IsParentFolder">$INFO[ListItem.TvShowTitle]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="VideoListLabel2Var">
		<value condition="String.EndsWith(Container.FolderName,$LOCALIZE[20387])">$VAR[EpisodeCountVar,, - ]$INFO[ListItem.Title]</value>
		<value condition="Container.Content(episodes) + !Skin.HasSetting(Enable.HideRatings)">$INFO[ListItem.Premiered]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.TvShowTitle]</value>
		<value>$INFO[ListItem.Genre]</value>
	</variable>
	<variable name="MusicListLabel3Var">
		<value condition="Container.Content(songs) + !ListItem.IsParentFolder">$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="MusicListLabel4Var">
		<value condition="Container.Content(albums)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Duration]</value>
		<value>$VAR[DurationMinutesVar]</value>
	</variable>
	<variable name="PosterVar">
		<value condition="[Container.Content(episodes) | Container.Content(seasons)] + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="[Container.Content(episodes) | Container.Content(seasons)] + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="RatingAndVotesVar">
		<value condition="String.IsEqual(ListItem.Votes,0) + !String.IsEmpty(ListItem.Rating(imdb))">$LOCALIZE[368]</value>
		<value condition="String.IsEqual(ListItem.Votes,0) + !String.IsEmpty(ListItem.Rating(tmdb))">$LOCALIZE[31120]</value>
		<value condition="String.IsEmpty(ListItem.Votes)">$LOCALIZE[563]</value>
		<value>$INFO[ListItem.Votes,, $LOCALIZE[205]]</value>
	</variable>
	<variable name="DurationVar">
		<value condition="Container.Content(tvshows) + !String.IsEmpty(Window(Home).Property(NextAired.Runtime))">$INFO[Window(Home).Property(NextAired.Runtime)]</value>
		<value condition="!String.IsEmpty(ListItem.Duration)">$VAR[DurationMinutesVar]</value>
		<value>?</value>
	</variable>
	<variable name="OneOrMoreSeasonsVar">
		<value condition="String.IsEqual(ListItem.Property(TotalSeasons),1)">$LOCALIZE[20373]</value>
		<value>$LOCALIZE[33054]</value>
	</variable>
	<variable name="OneOrMoreEpisodesVar">
		<value condition="String.IsEqual(ListItem.Property(TotalEpisodes),1)">$LOCALIZE[20359]</value>
		<value>$LOCALIZE[20360]</value>
	</variable>
	<variable name="VideoPlotVar">
		<value condition="Container.Content(seasons)">$INFO[Container.ShowPlot]</value>
		<value condition="!String.IsEmpty(Window(home).Property(Set.Movies.ExtendedPlot))">$INFO[Window(home).Property(Set.Movies.ExtendedPlot)]</value>
		<value condition="!String.IsEmpty(ListItem.PlotOutline) + !Skin.HasSetting(VideoInfoPlotToggle)">$INFO[ListItem.Tagline,[COLOR labelheader],[/COLOR] - ]$INFO[ListItem.PlotOutline]</value>
		<value condition="System.GetBool(videolibrary.showunwatchedplots)">$INFO[ListItem.Tagline,[COLOR labelheader],[/COLOR] - ]$INFO[ListItem.Plot]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="OtherPlotVar">
		<value condition="Container.Content(albums) + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="Container.Content(albums)">$LOCALIZE[414]</value>
		<value condition="Container.Content(artists) + !String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="Container.Content(artists)">$LOCALIZE[547]</value>
	</variable>
	<variable name="MusicPlotVar">
		<value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]$INFO[ListItem.AddonDisclaimer, -- [COLOR labelheader],[/COLOR]]</value>
		<value condition="!String.IsEmpty(ListItem.Comment)">$INFO[ListItem.Comment]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="VideoPlotLocalizeVar">
		<value condition="Skin.HasSetting(VideoInfoPlotToggle)">$LOCALIZE[31045]</value>
		<value>$LOCALIZE[31044]</value>
	</variable>
	<variable name="SourceFlagVar">
		<value condition="[String.Contains(ListItem.filename,PDTV) | String.Contains(ListItem.filename,sdtv) | String.Contains(ListItem.filename,sd tv)]">sdtv</value>
		<value condition="[String.Contains(ListItem.Filename,hdtv) | String.Contains(ListItem.Filename,hd tv)]">hdtv</value>
		<value condition="[String.Contains(ListItem.Filename,hddvd) | String.Contains(ListItem.Filename,hd-dvd)]">hddvd</value>
		<value condition="ListItem.IsStereoscopic">bluray3d</value>
		<value condition="[String.Contains(ListItem.Filename,bluray) | String.Contains(ListItem.Filename,blu-ray) | String.Contains(ListItem.Filename,bdrip) | String.Contains(ListItem.Filename,brrip)]">bluray</value>
		<value condition="String.Contains(ListItem.Filename,dvb)">dvb</value>
		<value condition="String.Contains(ListItem.Filename,web-dl)">web-dl</value>
		<value condition="String.Contains(ListItem.Filename,dvd) | String.IsEqual(ListItem.FileExtension,iso) | String.IsEqual(ListItem.FileExtension,ifo)">dvd</value>
		<value>$INFO[ListItem.VideoCodec]</value>
	</variable>
	<variable name="VideoSourceFlagVar">
		<value condition="[String.Contains(Player.Filenameandpath,PDTV) | String.Contains(Player.Filenameandpath,sdtv)]">sdtv</value>
		<value condition="String.Contains(Player.Filenameandpath,hdtv)">hdtv</value>
		<value condition="[String.Contains(Player.Filenameandpath,hddvd) | String.Contains(Player.Filenameandpath,hd-dvd)]">hddvd</value>
		<value condition="VideoPlayer.IsStereoscopic">bluray3d</value>
		<value condition="[String.Contains(Player.Filenameandpath,bluray) | String.Contains(Player.Filenameandpath,blu-ray) | String.Contains(Player.Filenameandpath,bdrip) | String.Contains(Player.Filenameandpath,brrip)]">bluray</value>
		<value condition="String.Contains(Player.Filenameandpath,dvb)">dvb</value>
		<value condition="String.Contains(Player.Filenameandpath,web-dl)">web-dl</value>
		<value condition="String.Contains(Player.Filenameandpath,dvd) | String.EndsWith(Player.Filenameandpath,.iso) | String.EndsWith(Player.Filenameandpath,.ifo)">dvd</value>
		<value>$INFO[VideoPlayer.VideoCodec]</value>
	</variable>
	<!-- InfoPanel -->
	<variable name="VideoInfoPanelVar">
		<value condition="Control.IsVisible(53) + Container.Content(movies)">$INFO[Skin.String(53.Movies.InfoPanel)]</value>
		<value condition="Control.IsVisible(53) + Container.Content(tvshows)">$INFO[Skin.String(53.TVShows.InfoPanel)]</value>
		<value condition="Control.IsVisible(53) + Container.Content(seasons)">$INFO[Skin.String(53.Seasons.InfoPanel)]</value>
		<value condition="Control.IsVisible(53) + Container.Content(sets)">$INFO[Skin.String(53.Sets.InfoPanel)]</value>
		<value condition="Control.IsVisible(52) + Container.Content(movies)">$INFO[Skin.String(52.Movies.InfoPanel)]</value>
		<value condition="Control.IsVisible(52) + Container.Content(tvshows)">$INFO[Skin.String(52.TVShows.InfoPanel)]</value>
		<value condition="Control.IsVisible(52) + Container.Content(seasons)">$INFO[Skin.String(52.Seasons.InfoPanel)]</value>
		<value condition="Control.IsVisible(52) + Container.Content(episodes)">$INFO[Skin.String(52.Episodes.InfoPanel)]</value>
		<value condition="Control.IsVisible(52) + Container.Content(sets)">$INFO[Skin.String(52.Sets.InfoPanel)]</value>
	</variable>
	<variable name="MusicInfoPanelVar">
		<value condition="Control.IsVisible(54) + Container.Content(albums)">$INFO[Skin.String(54.Albums.InfoPanel)]</value>
		<value condition="Control.IsVisible(54) + Container.Content(artists)">$INFO[Skin.String(54.Artists.InfoPanel)]</value>
		<value condition="Control.IsVisible(52) + Container.Content(artists)">$INFO[Skin.String(52.Artists.InfoPanel)]</value>
	</variable>
	<variable name="52VideoInfoPanelVar">
		<value condition="Container.Content(movies) + String.IsEmpty(Skin.String(52.Movies.InfoPanel))">Skin.SetString(52.Movies.InfoPanel,1)</value>
		<value condition="Container.Content(movies) + String.IsEqual(Skin.String(52.Movies.InfoPanel),1)">Skin.SetString(52.Movies.InfoPanel,2)</value>
		<value condition="Container.Content(movies) + String.IsEqual(Skin.String(52.Movies.InfoPanel),2)">Skin.Reset(52.Movies.InfoPanel)</value>
		<value condition="Container.Content(tvshows) + String.IsEmpty(Skin.String(52.TVShows.InfoPanel))">Skin.SetString(52.TVShows.InfoPanel,1)</value>
		<value condition="Container.Content(tvshows) + String.IsEqual(Skin.String(52.TVShows.InfoPanel),1)">Skin.SetString(52.TVShows.InfoPanel,2)</value>
		<value condition="Container.Content(tvshows) + String.IsEqual(Skin.String(52.TVShows.InfoPanel),2)">Skin.Reset(52.TVShows.InfoPanel)</value>
		<value condition="Container.Content(seasons) + String.IsEmpty(Skin.String(52.Seasons.InfoPanel))">Skin.SetString(52.Seasons.InfoPanel,1)</value>
		<value condition="Container.Content(seasons) + String.IsEqual(Skin.String(52.Seasons.InfoPanel),1)">Skin.SetString(52.Seasons.InfoPanel,2)</value>
		<value condition="Container.Content(seasons) + String.IsEqual(Skin.String(52.Seasons.InfoPanel),2)">Skin.Reset(52.Seasons.InfoPanel)</value>
		<value condition="Container.Content(episodes) + String.IsEmpty(Skin.String(52.Episodes.InfoPanel))">Skin.SetString(52.Episodes.InfoPanel,1)</value>
		<value condition="Container.Content(episodes) + String.IsEqual(Skin.String(52.Episodes.InfoPanel),1)">Skin.SetString(52.Episodes.InfoPanel,2)</value>
		<value condition="Container.Content(episodes) + String.IsEqual(Skin.String(52.Episodes.InfoPanel),2)">Skin.Reset(52.Episodes.InfoPanel)</value>
		<value condition="Container.Content(sets) + String.IsEmpty(Skin.String(52.Sets.InfoPanel))">Skin.SetString(52.Sets.InfoPanel,1)</value>
		<value condition="Container.Content(sets) + String.IsEqual(Skin.String(52.Sets.InfoPanel),1)">Skin.SetString(52.Sets.InfoPanel,2)</value>
		<value condition="Container.Content(sets) + String.IsEqual(Skin.String(52.Sets.InfoPanel),2)">Skin.Reset(52.Sets.InfoPanel)</value>
	</variable>
	<variable name="53VideoInfoPanelVar">
		<value condition="Container.Content(movies) + String.IsEmpty(Skin.String(53.Movies.InfoPanel))">Skin.SetString(53.Movies.InfoPanel,1)</value>
		<value condition="Container.Content(movies) + String.IsEqual(Skin.String(53.Movies.InfoPanel),1)">Skin.SetString(53.Movies.InfoPanel,2)</value>
		<value condition="Container.Content(movies) + String.IsEqual(Skin.String(53.Movies.InfoPanel),2)">Skin.Reset(53.Movies.InfoPanel)</value>
		<value condition="Container.Content(tvshows) + String.IsEmpty(Skin.String(53.TVShows.InfoPanel))">Skin.SetString(53.TVShows.InfoPanel,1)</value>
		<value condition="Container.Content(tvshows) + String.IsEqual(Skin.String(53.TVShows.InfoPanel),1)">Skin.SetString(53.TVShows.InfoPanel,2)</value>
		<value condition="Container.Content(tvshows) + String.IsEqual(Skin.String(53.TVShows.InfoPanel),2)">Skin.Reset(53.TVShows.InfoPanel)</value>
		<value condition="Container.Content(seasons) + String.IsEmpty(Skin.String(53.Seasons.InfoPanel))">Skin.SetString(53.Seasons.InfoPanel,1)</value>
		<value condition="Container.Content(seasons) + String.IsEqual(Skin.String(53.Seasons.InfoPanel),1)">Skin.SetString(53.Seasons.InfoPanel,2)</value>
		<value condition="Container.Content(seasons) + String.IsEqual(Skin.String(53.Seasons.InfoPanel),2)">Skin.Reset(53.Seasons.InfoPanel)</value>
		<value condition="Container.Content(sets) + String.IsEmpty(Skin.String(53.Sets.InfoPanel))">Skin.SetString(53.Sets.InfoPanel,1)</value>
		<value condition="Container.Content(sets) + String.IsEqual(Skin.String(53.Sets.InfoPanel),1)">Skin.SetString(53.Sets.InfoPanel,2)</value>
		<value condition="Container.Content(sets) + String.IsEqual(Skin.String(53.Sets.InfoPanel),2)">Skin.Reset(53.Sets.InfoPanel)</value>
	</variable>
	<variable name="52MusicInfoPanelVar">
		<value condition="Container.Content(artists) + String.IsEmpty(Skin.String(52.Artists.InfoPanel))">Skin.SetString(52.Artists.InfoPanel,2)</value>
		<!-- <value condition="Container.Content(artists) + String.IsEqual(Skin.String(52.Artists.InfoPanel),1)">Skin.SetString(52.Artists.InfoPanel,2)</value> -->
		<value condition="Container.Content(artists) + String.IsEqual(Skin.String(52.Artists.InfoPanel),2)">Skin.Reset(52.Artists.InfoPanel)</value>
	</variable>
	<variable name="54MusicInfoPanelVar">
		<value condition="Container.Content(albums) + String.IsEmpty(Skin.String(54.Albums.InfoPanel))">Skin.SetString(54.Albums.InfoPanel,1)</value>
		<value condition="Container.Content(albums) + String.IsEqual(Skin.String(54.Albums.InfoPanel),1)">Skin.Reset(54.Albums.InfoPanel)</value>
		<value condition="Container.Content(artists) + String.IsEmpty(Skin.String(54.Artists.InfoPanel))">Skin.SetString(54.Artists.InfoPanel,1)</value>
		<value condition="Container.Content(artists) + String.IsEqual(Skin.String(54.Artists.InfoPanel),1)">Skin.Reset(54.Artists.InfoPanel)</value>
		<!-- <value condition="Container.Content(albums) + String.IsEqual(Skin.String(54.Albums.InfoPanel),2)">Skin.Reset(54.Albums.InfoPanel)</value> -->
	</variable>
	<variable name="InfoPanelLabelVar">
		<value condition="String.IsEqual(Control.GetLabel(4420),1)">$LOCALIZE[20445]</value>
		<value condition="String.IsEqual(Control.GetLabel(4420),2)">$LOCALIZE[31086]</value>
		<value condition="Control.IsVisible(503) + Skin.HasSetting(503.InfoPanel)">$LOCALIZE[16041]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="InfoPanelDelayOnClickVar">
		<value condition="String.IsEmpty(Skin.String(InfoPanel.Delay))">Skin.SetString(InfoPanel.Delay,2)</value>
		<value condition="String.IsEqual(Skin.String(InfoPanel.Delay),2)">Skin.SetString(InfoPanel.Delay,3)</value>
		<value condition="String.IsEqual(Skin.String(InfoPanel.Delay),3)">Skin.SetString(InfoPanel.Delay,4)</value>
		<value condition="String.IsEqual(Skin.String(InfoPanel.Delay),4)">Skin.SetString(InfoPanel.Delay,5)</value>
		<value condition="String.IsEqual(Skin.String(InfoPanel.Delay),5)">Skin.Reset(InfoPanel.Delay)</value>
	</variable>
	<variable name="InfoPanelDelayLocalizeVar">
		<value condition="!String.IsEmpty(Skin.String(InfoPanel.Delay))">$INFO[Skin.String(InfoPanel.Delay),, $LOCALIZE[31090]]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="InfoPanelLabel1Var">
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)] + !String.IsEmpty(Window(home).Property(Set.Movies.Director))">[COLOR labelheader]$LOCALIZE[31000]:[/COLOR][CR]$INFO[Window(home).Property(Set.Movies.Director)]</value>
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)]">[COLOR labelheader]$LOCALIZE[31000]:[/COLOR][CR]$INFO[ListItem.Director]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + !String.IsEmpty(Window(Home).Property(NextAired.Status))">[COLOR labelheader]$LOCALIZE[126]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.Status)]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)]">[COLOR labelheader]$LOCALIZE[515]:[/COLOR][CR]$INFO[ListItem.Genre]</value>
	</variable>
	<variable name="InfoPanelLabel2Var">
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)] + !String.IsEmpty(Window(home).Property(Set.Movies.Writer))">[COLOR labelheader]$LOCALIZE[31001]:[/COLOR][CR]$INFO[Window(home).Property(Set.Movies.Writer)]</value>
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)]">[COLOR labelheader]$LOCALIZE[31001]:[/COLOR][CR]$INFO[ListItem.Writer]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + !String.IsEmpty(Window(Home).Property(NextAired.NextDate))">[COLOR labelheader]$LOCALIZE[31010]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.NextDate),,: ]$INFO[Window(Home).Property(NextAired.NextTitle)]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + !String.IsEmpty(Window(Home).Property(NextAired.LatestDate))">[COLOR labelheader]$LOCALIZE[31011]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.LatestNumber),, - ]$INFO[Window(Home).Property(NextAired.LatestTitle)]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)]">[COLOR labelheader]$LOCALIZE[31019]:[/COLOR][CR]$INFO[ListItem.Studio]</value>
	</variable>
	<variable name="InfoPanelLabel3Var">
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)]">[COLOR labelheader]$LOCALIZE[563]:[/COLOR][CR]$INFO[ListItem.RatingAndVotes]$INFO[ListItem.Top250, / $LOCALIZE[13409] #]</value>
		<value condition="Container.Content(tvshows) + !String.IsEmpty(Window(Home).Property(NextAired.Status))">[COLOR labelheader]$INFO[ListItem.Property(TotalSeasons)]$VAR[OneOrMoreSeasonsVar, , / ]$INFO[ListItem.Property(TotalEpisodes),, ]$VAR[OneOrMoreEpisodesVar]:[/COLOR][CR]$INFO[ListItem.Property(UnWatchedEpisodes),, $LOCALIZE[16101]]</value>
		<value condition="Container.Content(tvshows)">[COLOR labelheader]$LOCALIZE[20360]:[/COLOR][CR]$INFO[ListItem.Property(TotalEpisodes)]$INFO[ListItem.Property(UnWatchedEpisodes), (,[LOWERCASE] $LOCALIZE[16101][/LOWERCASE])]</value>
		<value condition="Container.Content(seasons)">[COLOR labelheader]$LOCALIZE[20360]:[/COLOR][CR]$INFO[ListItem.Property(TotalEpisodes)]</value>
	</variable>
	<variable name="InfoPanelLabel4Var">
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)] + !String.IsEmpty(Window(home).Property(Set.Movies.Runtime))">[COLOR labelheader]$LOCALIZE[2050]:[/COLOR][CR]$INFO[Window(home).Property(Set.Movies.Runtime),, $LOCALIZE[12391]]</value>
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)]">[COLOR labelheader]$LOCALIZE[2050]:[/COLOR][CR]$VAR[DurationMinutesVar,, $LOCALIZE[12391]]</value>
		<value condition="Container.Content(tvshows) + !String.IsEmpty(Window(Home).Property(NextAired.Runtime))">[COLOR labelheader]$LOCALIZE[2050]:[/COLOR][CR]$VAR[DurationVar,, $LOCALIZE[12391]]</value>
		<value condition="Container.Content(tvshows)">[COLOR labelheader]$LOCALIZE[33054]:[/COLOR][CR]$INFO[ListItem.Property(TotalSeasons)]</value>
		<value condition="Container.Content(seasons)">[COLOR labelheader]$LOCALIZE[16101]:[/COLOR][CR]$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
	</variable>
	<variable name="InfoPanelLabel5Var">
		<value condition="[Container.Content(movies) | Container.Content(sets)] + !String.IsEmpty(Window(home).Property(Set.Movies.Years))">[COLOR labelheader]$LOCALIZE[345]:[/COLOR][CR]$INFO[Window(home).Property(Set.Movies.Years)]</value>
		<value condition="[Container.Content(movies) | Container.Content(sets)]">[COLOR labelheader]$LOCALIZE[345]:[/COLOR][CR]$INFO[ListItem.Year]</value>
		<value condition="Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons)">[COLOR labelheader]$LOCALIZE[20416]:[/COLOR][CR]$INFO[ListItem.Premiered]</value>
	</variable>
	<variable name="PosterThumbVar">
		<value condition="!String.IsEmpty(Container.Art(season.poster))">$INFO[Container.Art(season.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster)) + !Container.COntent(seasons)">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="FloorLabelVar">
		<value condition="Container.Content(episodes) + String.Contains(Container.FolderPath,/recentlyaddedepisodes)">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
		<value condition="Container.Content(movies) + ![Control.IsVisible(52) | Control.IsVisible(53)]">$INFO[ListItem.Label]$INFO[ListItem.Year, [COLOR grey](,)[/COLOR]]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="FloorSubLabelVar">
		<value condition="Container.Content(episodes)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.AddonSummary]</value>
		<value condition="Container.Content(musicvideos)">$INFO[ListItem.Artist]</value>
		<value condition="String.IsEmpty(ListItem.Genre) + Container.Content(sets)">$INFO[Window(Home).Property(Set.Movies.Genre)]</value>
		<value condition="[Control.IsVisible(52) | Control.IsVisible(53)] | [Container.Content(tvshows) | Container.Content(seasons)]">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(files)">$INFO[ListItem.Date]</value>
		<value>$VAR[DurationMinutesVar,, $LOCALIZE[31162] - ]$INFO[ListItem.Genre]</value>
	</variable>
	<variable name="FloorLabel2Var">
		<value condition="Container.Content(artists)">$INFO[ListItem.Property(Artist_Genre)]</value>
		<value condition="Container.Content(songs)">$VAR[DurationMinutesVar,, | ]$INFO[ListItem.Album]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.AddonSummary]</value>
		<value condition="Container.Content()">$INFO[ListItem.Comment]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>
	<variable name="SeekLabelVar">
		<value condition="Player.IsTempo">$INFO[Player.Playspeed,$LOCALIZE[224]:[COLOR=themecolor] ,[/COLOR]]</value>
		<value condition="[Player.Playing | [Player.Paused + !Player.Caching] | Player.ShowTime]+ !Player.Seeking">$INFO[System.Time]$INFO[player.FinishTime, [,]]</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize)">$INFO[Player.SeekStepSize,$LOCALIZE[31046][COLOR=themecolor] ,[/COLOR]]</value>
		<value condition="!String.IsEmpty(Player.SeekOffset)">$INFO[Player.SeekOffset,$LOCALIZE[31046][COLOR=themecolor] ,[/COLOR]]</value>
		<value condition="Player.Caching + !Player.Seeking">$INFO[Player.CacheLevel,$LOCALIZE[15107] ,%]</value>
	</variable>
	<variable name="OSDRightLabelVar">
		<value condition="Player.ShowTime + !VideoPlayer.Content(livetv)">$INFO[Player.Time]$INFO[Player.TimeRemaining, / ]</value>
		<value condition="!VideoPlayer.Content(livetv)">$INFO[Player.Time]$INFO[Player.Duration, / ]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.NextTitle,$LOCALIZE[19031]: ]</value>
	</variable>
	<variable name="VideoPlayerForwardRewindVar">
		<value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
		<value condition="Player.Forwarding8x | Player.Rewinding8x">8x</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
	</variable>
	<variable name="PlayerArtworkVar">
		<value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(Player.Art(tvshow.clearart))">$INFO[Player.Art(tvshow.clearart)]</value>
		<value condition="VideoPlayer.Content(episodes)">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(clearart))">$INFO[Player.Art(clearart)]</value>
		<value>$INFO[Player.Art(clearlogo)]</value>
	</variable>
	<variable name="PlayerTitleLabelVar">
		<value condition="Player.ChapterCount">$INFO[Player.Title]$INFO[player.chapter, • $LOCALIZE[21396] ]$INFO[player.chaptercount, / ,]</value>
		<value>$INFO[Player.Title]</value>
	</variable>
	<variable name="SkinSettingsDescriptionVar">
		<value condition="Control.HasFocus(100)">$LOCALIZE[31912]</value>
		<value condition="Control.HasFocus(101)">$LOCALIZE[31914]</value>
		<value condition="Control.HasFocus(102)">$LOCALIZE[31920]</value>
		<value condition="Control.HasFocus(103)">$LOCALIZE[31921]</value>
		<value condition="Control.HasFocus(104)">$LOCALIZE[31929]</value>
		<value condition="Control.HasFocus(105)">$LOCALIZE[31161]</value>
		<value condition="Control.HasFocus(106)">$LOCALIZE[31937]</value>
		<value condition="Control.HasFocus(200)">$LOCALIZE[31917]</value>
		<value condition="Control.HasFocus(201)">$LOCALIZE[31918]</value>
		<value condition="Control.HasFocus(202)">$LOCALIZE[31919]</value>
		<value condition="Control.HasFocus(203)">$LOCALIZE[31171]</value>
		<value condition="Control.HasFocus(204)">$LOCALIZE[31932]</value>
		<value condition="Control.HasFocus(300)">$LOCALIZE[31922]</value>
		<value condition="Control.HasFocus(301)">$LOCALIZE[31924]</value>
		<value condition="Control.HasFocus(304)">$LOCALIZE[31122]</value>
		<value condition="Control.HasFocus(305) | Control.HasFocus(307)">$LOCALIZE[31938]</value>
		<value condition="Control.HasFocus(306)">$LOCALIZE[31151]</value>
		<value condition="Control.HasFocus(401)">$LOCALIZE[31940]</value>
		<value condition="Control.HasFocus(402)">$LOCALIZE[31942]</value>
		<value condition="Control.HasFocus(403)">$LOCALIZE[31916]</value>
		<value condition="Control.HasFocus(404)">$LOCALIZE[31944]</value>
		<value condition="Control.HasFocus(405)">$LOCALIZE[31945]</value>
		<value condition="Control.HasFocus(406)">$LOCALIZE[31962]</value>
		<value condition="Control.HasFocus(90000) + String.IsEmpty(Container(90000).ListItem.Property(Path))">$LOCALIZE[31923]</value>
		<value condition="Control.HasFocus(90012)">$LOCALIZE[31925]</value>
		<value condition="Control.HasFocus(90013) | Control.HasFocus(90021)">$LOCALIZE[31926]</value>
		<value condition="Control.HasFocus(90014)">$LOCALIZE[31930]</value>
		<value condition="Control.HasFocus(90016)">$LOCALIZE[31933]</value>
		<value condition="Control.HasFocus(90017)">$LOCALIZE[31935]</value>
		<value condition="Control.HasFocus(90020)">$LOCALIZE[31927]</value>
	</variable>
	<variable name="lowermainmenuVar">
		<value condition="Skin.HasSetting(lowermainmenu)">$LOCALIZE[418]</value>
		<value>$LOCALIZE[571]</value>
	</variable>
	<variable name="HorizontalListNavVar">
		<value condition="Skin.HasSetting(HorizontalListNav)">$LOCALIZE[31005]</value>
		<value>$LOCALIZE[571]</value>
	</variable>
	<variable name="SlimListSettingVar">
		<value condition="Skin.HasSetting(Enable.SlimList)">$LOCALIZE[31095]</value>
		<value>$LOCALIZE[571]</value>
	</variable>
	<variable name="WidgetListContent">
		<value condition="String.IsEqual(Container(9000).ListItem.Property(Widget),2)">plugin://service.library.data.provider?type=randommovies&amp;reload=$INFO[Window.Property(randommovies)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(Widget),5)">plugin://service.library.data.provider?type=randomepisodes&amp;reload=$INFO[Window.Property(randomepisodes)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(Widget),6)">plugin://service.library.data.provider?type=recommendedepisodes&amp;reload=$INFO[Window.Property(recommendedepisodes)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(Widget),7)">plugin://service.library.data.provider?type=randomsongs&amp;reload=$INFO[Window.Property(randomsongs)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(Widget),8)">plugin://service.library.data.provider?type=randomalbums&amp;reload=$INFO[Window.Property(randomalbums)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(Widget),9)">plugin://service.library.data.provider?type=recentalbums&amp;reload=$INFO[Window.Property(recentalbums)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(Widget),10)">plugin://service.library.data.provider?type=recommendedalbums&amp;reload=$INFO[Window.Property(recommendedalbums)]</value>
		<value condition="!String.IsEmpty(Container(9000).ListItem.Property(Widget))">$INFO[Container(9000).ListItem.Property(Widget)]</value>
	</variable>
	<variable name="WidgetLabelVar">
		<value condition="String.IsEqual(Window(Home).Property(HomeWidget),1)">$LOCALIZE[31152]</value>
		<value condition="String.IsEqual(Window(Home).Property(HomeWidget),2)">$LOCALIZE[31031]</value>
		<value condition="String.IsEqual(Window(Home).Property(HomeWidget),3)">$LOCALIZE[31153]</value>
		<value condition="String.IsEqual(Window(Home).Property(HomeWidget),4)">$LOCALIZE[31154]</value>
		<value condition="String.IsEqual(Window(Home).Property(HomeWidget),5)">$LOCALIZE[31155]</value>
		<value condition="String.IsEqual(Window(Home).Property(HomeWidget),6)">$LOCALIZE[31156]</value>
		<value condition="String.IsEqual(Window(Home).Property(HomeWidget),7)">$LOCALIZE[31158]</value>
		<value>$LOCALIZE[20386]</value>
	</variable>
	<variable name="InfoLineLabelVar">
		<value condition="String.IsEqual(Container(90000).ListItem.Property(InfoLine),1)">$LOCALIZE[31052]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(InfoLine),2)">$LOCALIZE[31053]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(InfoLine),3)">$LOCALIZE[31054]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(InfoLine),4)">$LOCALIZE[31058]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(InfoLine),5)">$LOCALIZE[20088]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(InfoLine),6)">$LOCALIZE[31061]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(InfoLine),7)">$LOCALIZE[31085]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(InfoLine),8)">$LOCALIZE[130]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(InfoLine),9)">$LOCALIZE[31097]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(InfoLine),10)">$LOCALIZE[31098]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(InfoLine),11)">$LOCALIZE[31099]</value>
	</variable>
	<variable name="BackgroundLabel2Var">
		<value condition="String.IsEqual(Container(90000).ListItem.Thumb,1)">$LOCALIZE[31062]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Thumb,2)">$LOCALIZE[31063]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Thumb,3)">$LOCALIZE[31064]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Thumb,4)">$LOCALIZE[31065]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Thumb,5)">$LOCALIZE[31066]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Thumb,6)">$LOCALIZE[31084]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Thumb,7)">$LOCALIZE[31028]: $LOCALIZE[31029]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Thumb,8)">$LOCALIZE[31028]: $LOCALIZE[31030]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Thumb,9)">$LOCALIZE[31028]: $LOCALIZE[31035]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Thumb,10)">$LOCALIZE[31028]: $LOCALIZE[31036]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(BGType),4) | String.IsEqual(Container(90000).ListItem.Property(BGType),5)">$INFO[Container(90000).ListItem.Thumb,$LOCALIZE[31028]: ]</value>
		<value condition="String.IsEqual(Container(90000).ListItem.Property(BGType),7)">$INFO[Container(90000).ListItem.Thumb,$LOCALIZE[20012]: ]</value>
		<value>$INFO[Container(90000).ListItem.Thumb]</value>
	</variable>
	<variable name="WidgetListIconVar">
		<value condition="!String.IsEmpty(Container(8000).ListItem.Art(tvshow.landscape))">$INFO[Container(8000).ListItem.Art(tvshow.landscape)]</value>
		<value condition="!String.IsEmpty(Container(8000).ListItem.Art(fanart)) + String.IsEqual(Container(9000).ListItem.Property(WidgetType),1)">$INFO[Container(8000).ListItem.Art(fanart)]</value>
		<value>$INFO[Container(8000).ListItem.Icon]</value>
	</variable>
	<variable name="WidgetPosterVar">
		<value condition="!String.IsEmpty(Container(8000).ListItem.Art(poster))">$INFO[Container(8000).ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(Container(8000).ListItem.Art(tvshow.poster))">$INFO[Container(8000).ListItem.Art(tvshow.poster)]</value>
		<value>$INFO[Container(8000).ListItem.Icon]</value>
	</variable>
	<variable name="MainMenuLayoutVar">
		<value condition="Skin.HasSetting(mainmenuicons)">$LOCALIZE[536]</value>
		<value condition="Skin.HasSetting(biggergap)">3 $LOCALIZE[31025]</value>
		<value>5 $LOCALIZE[31025]</value>
	</variable>
	<variable name="RatingFlagVar">
		<value condition="String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G)">flags/mpaa/G.png</value>
		<value condition="String.Contains(ListItem.mpaa,PG-13)">flags/mpaa/PG-13.png</value>
		<value condition="String.Contains(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)">flags/mpaa/PG.png</value>
		<value condition="String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated R) | String.IsEqual(ListItem.mpaa,R)">flags/mpaa/R.png</value>
		<value condition="String.Contains(ListItem.mpaa,US:NC-17)| String.Contains(ListItem.mpaa,USA:NC-17)| String.Contains(ListItem.mpaa,Rated NC-17)">flags/mpaa/NC-17.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:U)">flags/mpaa/BBFC_U_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:PG)">flags/mpaa/BBFC_PG_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:12A)">flags/mpaa/BBFC_12A_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:12)">flags/mpaa/BBFC_12_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:15)">flags/mpaa/BBFC_15_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:18)">flags/mpaa/BBFC_18_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:0) | String.Contains(ListItem.mpaa,ab 0) | String.IsEqual(ListItem.mpaa,0) | String.Contains(ListItem.mpaa,FSK 0) | String.Contains(ListItem.mpaa,Rated 0)">flags/mpaa/FSK-0.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:16) | String.Contains(ListItem.mpaa,ab 16) | String.IsEqual(ListItem.mpaa,16) | String.Contains(ListItem.mpaa,FSK 16) | String.Contains(ListItem.mpaa,Rated 16)">flags/mpaa/FSK-16.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:6)| String.Contains(ListItem.mpaa,ab 6) | String.IsEqual(ListItem.mpaa,6) | String.Contains(ListItem.mpaa,Rated 6)">flags/mpaa/FSK-6.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:12) | String.Contains(ListItem.mpaa,ab 12) | String.IsEqual(ListItem.mpaa,12) | String.Contains(ListItem.mpaa,FSK 12) | String.Contains(ListItem.mpaa,Rated 12)">flags/mpaa/FSK-12.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:18) | String.Contains(ListItem.mpaa,ab 18) | String.IsEqual(ListItem.mpaa,18) | String.Contains(ListItem.mpaa,FSK 18) | String.Contains(ListItem.mpaa,Rated 18)">flags/mpaa/FSK-18.png</value>
		<value condition="String.Contains(ListItem.mpaa,besorolás alatt)">flags/mpaa/HU_BA.png</value>
		<value condition="String.Contains(ListItem.mpaa,korhatárra való tekintett nélkül megtekintetheto)">flags/mpaa/HU_KN.png</value>
		<value condition="String.Contains(ListItem.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">flags/mpaa/HU_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,16 éven aluliak számára nem ajánlott)">flags/mpaa/HU_16.png</value>
		<value condition="String.Contains(ListItem.mpaa,18 éven aluliak számára nem ajánlott)">flags/mpaa/HU_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:U) | String.Contains(ListItem.mpaa,Tout public) | String.Contains(ListItem.mpaa,Tous publics)">flags/mpaa/csaU.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:10) | String.Contains(ListItem.mpaa,Interdit aux moins de 10 ans) | String.Contains(ListItem.mpaa,des propos ou des images peuvent heurter)">flags/mpaa/csa10.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:12) | String.Contains(ListItem.mpaa,Interdit aux moins de 12 ans)">flags/mpaa/csa12.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:16) | String.Contains(ListItem.mpaa,Interdit aux moins de 16 ans)">flags/mpaa/csa16.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:18) | String.Contains(ListItem.mpaa,Interdit aux moins de 18 ans)">flags/mpaa/csa18.png</value>
		<value condition="String.Contains(ListItem.mpaa,전체)">flags/mpaa/KR_Certificate_All.png</value>
		<value condition="String.Contains(ListItem.mpaa,12세)">flags/mpaa/KR_Certificate_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,15세)">flags/mpaa/KR_Certificate_15.png</value>
		<value condition="String.Contains(ListItem.mpaa,불가)">flags/mpaa/KR_Certificate_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,제한)">flags/mpaa/KR_Certificate_R.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:Livre) | String.Contains(ListItem.mpaa,Livre)">flags/mpaa/MPAA_Brazil_Livre.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:10) | String.Contains(ListItem.mpaa,10 anos)">flags/mpaa/MPAA_Brazil_10.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:12) | String.Contains(ListItem.mpaa,12 anos)">flags/mpaa/MPAA_Brazil_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:14) | String.Contains(ListItem.mpaa,14 anos)">flags/mpaa/MPAA_Brazil_14.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:16) | String.Contains(ListItem.mpaa,16 anos)">flags/mpaa/MPAA_Brazil_16.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:18) | String.Contains(ListItem.mpaa,18 anos)">flags/mpaa/MPAA_Brazil_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,Australia:)">$INFO[ListItem.MPAA,flags/mpaa/australia_,.png]</value>
		<value>$INFO[ListItem.MPAA,flags/mpaa/,.png]</value>
	</variable>
	<variable name="VideoRatingFlagVar">
		<value condition="String.Contains(VideoPlayer.mpaa,US:G) | String.Contains(VideoPlayer.mpaa,USA:G) | String.Contains(VideoPlayer.mpaa,Rated G)">flags/mpaa/G.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,PG-13)">flags/mpaa/PG-13.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Rated PG) | String.IsEqual(VideoPlayer.Mpaa,PG)">flags/mpaa/PG.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,US:R) | String.Contains(VideoPlayer.mpaa,USA:R) | String.Contains(VideoPlayer.mpaa,Rated R) | String.IsEqual(VideoPlayer.mpaa,R)">flags/mpaa/R.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,US:NC-17)| String.Contains(VideoPlayer.mpaa,USA:NC-17)| String.Contains(VideoPlayer.mpaa,Rated NC-17)">flags/mpaa/NC-17.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:U)">flags/mpaa/BBFC_U_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:PG)">flags/mpaa/BBFC_PG_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:12A)">flags/mpaa/BBFC_12A_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:12)">flags/mpaa/BBFC_12_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:15)">flags/mpaa/BBFC_15_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:18)">flags/mpaa/BBFC_18_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Germany:16) | String.Contains(VideoPlayer.mpaa,ab 16) | String.IsEqual(VideoPlayer.mpaa,16) | String.Contains(VideoPlayer.mpaa,FSK 16) | String.Contains(VideoPlayer.mpaa,Rated 16)">flags/mpaa/FSK-16.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Germany:6)| String.Contains(VideoPlayer.mpaa,ab 6) | String.IsEqual(VideoPlayer.mpaa,6) | String.Contains(VideoPlayer.mpaa,FSK 16) | String.Contains(VideoPlayer.mpaa,Rated 6)">flags/mpaa/FSK-6.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Germany:12) | String.Contains(VideoPlayer.mpaa,ab 12) | String.IsEqual(VideoPlayer.mpaa,12) | String.Contains(VideoPlayer.mpaa,FSK 12) | String.Contains(VideoPlayer.mpaa,Rated 12)">flags/mpaa/FSK-12.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Germany:18) | String.Contains(VideoPlayer.mpaa,ab 18) | String.IsEqual(VideoPlayer.mpaa,18) | String.Contains(VideoPlayer.mpaa,FSK 18) | String.Contains(VideoPlayer.mpaa,Rated 18)">flags/mpaa/FSK-18.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Germany)|String.Contains(VideoPlayer.mpaa,FSK)| String.Contains(VideoPlayer.mpaa,o.A)| String.Contains(VideoPlayer.mpaa,Rated 0)">flags/mpaa/FSK-0</value>
		<value condition="String.Contains(VideoPlayer.mpaa,besorolás alatt)">flags/mpaa/HU_BA.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,korhatárra való tekintett nélkül megtekintetheto)">flags/mpaa/HU_KN.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">flags/mpaa/HU_12.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,16 éven aluliak számára nem ajánlott)">flags/mpaa/HU_16.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,18 éven aluliak számára nem ajánlott)">flags/mpaa/HU_18.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,France:U) | String.Contains(VideoPlayer.mpaa,Tout public) | String.Contains(VideoPlayer.mpaa,Tous publics)">flags/mpaa/csaU.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,France:10) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 10 ans) | String.Contains(VideoPlayer.mpaa,des propos ou des images peuvent heurter)">flags/mpaa/csa10.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,France:12) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 12 ans)">flags/mpaa/csa12.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,France:16) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 16 ans)">flags/mpaa/csa16.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,France:18) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 18 ans)">flags/mpaa/csa18.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,전체)">flags/mpaa/KR_Certificate_All.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,12세)">flags/mpaa/KR_Certificate_12.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,15세)">flags/mpaa/KR_Certificate_15.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,불가)">flags/mpaa/KR_Certificate_18.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,제한)">flags/mpaa/KR_Certificate_R.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:Livre) | String.Contains(VideoPlayer.mpaa,Livre)">flags/mpaa/MPAA_Brazil_Livre.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:10) | String.Contains(VideoPlayer.mpaa,10 anos)">flags/mpaa/MPAA_Brazil_10.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:12) | String.Contains(VideoPlayer.mpaa,12 anos)">flags/mpaa/MPAA_Brazil_12.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:14) | String.Contains(VideoPlayer.mpaa,14 anos)">flags/mpaa/MPAA_Brazil_14.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:16) | String.Contains(VideoPlayer.mpaa,16 anos)">flags/mpaa/MPAA_Brazil_16.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:18) | String.Contains(VideoPlayer.mpaa,18 anos)">flags/mpaa/MPAA_Brazil_18.png</value>
		<value>$INFO[VideoPlayer.MPAA,flags/mpaa/,.png]</value>
	</variable>
	<variable name="UnFocusHDIndicator">
		<value condition="ListItem.IsStereoscopic">overlays/list/3d.png</value>
		<value>$INFO[ListItem.VideoResolution,overlays/list/,.png]</value>
	</variable>
	<variable name="VizArtistInfoVar">
		<value condition="Skin.HasSetting(Enable.VizInfo)">$LOCALIZE[31106]</value>
		<value condition="Skin.HasSetting(Enable.VizPersistent)">$LOCALIZE[31107]</value>
		<value>$LOCALIZE[1223]</value>
	</variable>
	<variable name="VideoSubLabelVar">
		<value condition="Container.Content(tvshows) + Skin.HasSetting(Disable.NextAired)">$INFO[ListItem.Studio]</value>
		<value condition="Container.Content(tvshows) + !String.IsEmpty(Window(Home).Property(NextAired.NextDate))">[COLOR labelheader]$LOCALIZE[31010]: [/COLOR]$INFO[Window(Home).Property(NextAired.NextDate)]</value>
		<value condition="Container.Content(tvshows) + !String.IsEmpty(Window(Home).Property(NextAired.LatestDate))">$INFO[Window(Home).Property(NextAired.Status),[COLOR labelheader],[/COLOR]]</value>
		<value>$INFO[ListItem.RatingAndVotes,, • ]$VAR[DurationMinutesVar,, $LOCALIZE[31162]]</value>
	</variable>
	<variable name="WidgetListTargetVar">
		<value condition="String.IsEqual(Container(9000).ListItem.Property(WidgetType),1)">videos</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(WidgetType),2)">music</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(WidgetType),4)">programs</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(WidgetType),5)">pictures</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(WidgetType),12)">live tv</value>
	</variable>
	<variable name="PlaylistStatsContentVar">
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),9)">plugin://service.library.data.provider?type=playliststats&amp;id=$INFO[Container(9000).ListItem.Property(Path)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),10)">plugin://service.library.data.provider?type=playliststats&amp;id=$INFO[Container(9000).ListItem.Property(Path)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),11)">plugin://service.library.data.provider?type=playliststats&amp;id=$INFO[Container(9000).ListItem.Property(Path)]</value>
		<value>special://skin/extras/playlists/recentmovies.xsp</value>
	</variable>
	<variable name="AudioChannelVar">
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,7)">7.1</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,6)">6.1</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,5)">5.1</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,4)">5.0</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,3)">4.0</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,2)">2.1</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,1)">2.0</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,0)">1.0</value>
	</variable>
	<!--
	     Studio flags
	 -->
	<variable name="StudioFlagColorVar">
		<value condition="[String.IsEmpty(Skin.String(StudioLogos.path)) | String.IsEqual(Skin.String(StudioLogos.path),resource://resource.images.studios.white/)] + Window.IsActive(fullscreeninfo)">grey2</value>
		<value condition="[String.IsEmpty(Skin.String(StudioLogos.path)) | String.IsEqual(Skin.String(StudioLogos.path),resource://resource.images.studios.white/)]">grey</value>
		<value>white</value>
	</variable>
	<variable name="StudioFlagPathVar">
		<value condition="!String.IsEmpty(Skin.String(StudioLogos.path))">$INFO[Skin.String(StudioLogos.path)]</value>
		<value>resource://resource.images.studios.white/</value>
	</variable>
	<variable name="StudioIconVar">
		<value condition="!String.IsEmpty(ListItem.Studio)">$INFO[ListItem.Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value>$INFO[ListItem.Icon,views/list/]</value>
	</variable>
	<variable name="StarRatingDiffuseVar">
		<value condition="ListItem.IsSelected | ListItem.IsPlaying">selected</value>
		<value condition="!String.IsEmpty(ListItem.UserRating)">themecolor</value>
		<value>white</value>
	</variable>
	<variable name="HomeNowPlayingThumbVar">
		<value condition="[VideoPlayer.Content(movies) | VideoPlayer.Content(musicvideos)] + !String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="VideoPlayer.Content(livetv) + !String.IsEmpty(VideoPlayer.Cover)">$INFO[VideoPlayer.Cover]</value>
		<value>$INFO[Player.Art(thumb)]</value>
	</variable>
	<variable name="BigListPlotVar">
		<value condition="Container.Content(movies) + ![String.IsEmpty(ListItem.PlotOutline) | String.IsEqual(ListItem.PlotOutline,N/A)]">$INFO[ListItem.Tagline,[COLOR labelheader],[/COLOR] - ]$INFO[ListItem.PlotOutline]</value>
		<value condition="Container.Content(movies) + String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.Tagline,[COLOR labelheader],[/COLOR] - ]$INFO[ListItem.Plot]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<!--
	     DialogVideoInfo
	 -->
	<variable name="VideoInfoDetailsLabelVar">
		<value condition="Control.HasFocus(900171)">$LOCALIZE[207] - $LOCALIZE[31175]</value>
		<value condition="ControlGroup(9001).HasFocus(50)">$LOCALIZE[206]$INFO[Container(50).NumItems, [COLOR grey3](,)[/COLOR]]</value>
		<value condition="ControlGroup(9001).HasFocus(90019)">$ADDON[script.extendedinfo 32041]$INFO[Container(90019).NumItems, [COLOR grey3](,)[/COLOR]]</value>
		<value condition="ControlGroup(9001).HasFocus(90020)">$ADDON[script.extendedinfo 32040]$INFO[Container(90020).NumItems, [COLOR grey3](,)[/COLOR]]</value>
		<value condition="ControlGroup(9001).HasFocus(90021)">$ADDON[script.extendedinfo 32038]$INFO[Container(90021).NumItems, [COLOR grey3](,)[/COLOR]]</value>
		<value condition="ControlGroup(9001).HasFocus(90022)">$ADDON[script.extendedinfo 32039]$INFO[Container(90022).NumItems, [COLOR grey3](,)[/COLOR]]</value>
		<value condition="ControlGroup(9001).HasFocus(90011)">$LOCALIZE[31111]$INFO[Container(90011).NumItems, [COLOR grey3](,)[/COLOR]]</value>
		<value condition="ControlGroup(9001).HasFocus(90012)">$INFO[ListItem.Director,$LOCALIZE[31112] ]$INFO[Container(90012).NumItems, [COLOR grey3](,)[/COLOR]]</value>
		<value condition="ControlGroup(9001).HasFocus(90013)">$INFO[ListItem.Writer,$LOCALIZE[31113] ]$INFO[Container(90013).NumItems, [COLOR grey3](,)[/COLOR]]</value>
		<value condition="ControlGroup(9001).HasFocus(90014)">$INFO[ListItem.Studio,$LOCALIZE[31114] ]$INFO[Container(90014).NumItems, [COLOR grey3](,)[/COLOR]]</value>
		<value condition="ControlGroup(9001).HasFocus(90015)">$LOCALIZE[31115]$INFO[Container(90015).NumItems, [COLOR grey3](,)[/COLOR]]</value>
		<value condition="ControlGroup(9001).HasFocus(90016)">$LOCALIZE[33054]$INFO[Container(90016).NumItems, [COLOR grey3](,)[/COLOR]]</value>
		<value condition="ControlGroup(9001).HasFocus(90018)">$INFO[ListItem.Set]$INFO[Container(90018).NumItems, [COLOR grey3](,)[/COLOR]]</value>
	</variable>
	<variable name="EpisodeCountVar">
		<value condition="!Integer.IsGreater(ListItem.Season,9) + !Integer.IsGreater(ListItem.Episode,9)">$INFO[ListItem.Season,S0]$INFO[ListItem.Episode,E0]</value>
		<value condition="!Integer.IsGreater(ListItem.Season,9)">$INFO[ListItem.Season,S0]$INFO[ListItem.Episode,E]</value>
		<value condition="!Integer.IsGreater(ListItem.Episode,9)">$INFO[ListItem.Season,S]$INFO[ListItem.Episode,E0]</value>
		<value>$INFO[ListItem.Season,S]$INFO[ListItem.Episode,E]</value>
	</variable>
	<!--
	     DialogMusicInfo
	 -->
	<variable name="MusicInfoHeader">
		<value condition="Container.Content(Artists)">$LOCALIZE[21891]</value>
		<value condition="Container.Content(Albums)">$LOCALIZE[10523]</value>
		<value condition="Container.Content(Songs)">$LOCALIZE[658]</value>
	</variable>
	<!--
	     Select dialog
	 -->
	<variable name="DialogSelectLabel2Var">
		<value condition="String.IsEqual(Control.GetLabel(1),$LOCALIZE[25006])">$VAR[DurationMinutesVar,, [LOWERCASE]$LOCALIZE[12391][/LOWERCASE]]</value>
		<value>$INFO[ListItem.AddonVersion]</value>
	</variable>
	<!-- Weather -->
	<variable name="WeatherBackgroundTypeVar">
		<value condition="Skin.HasSetting(weatherfanart.multi)">/</value>
		<value>$INFO[Skin.String(weatherfanart.ext)]</value>
	</variable>
	<variable name="WeatherIconsPathVar">
		<value condition="!String.IsEmpty(Skin.String(weathericons.path))">$INFO[Skin.String(weathericons.path)]</value>
		<value>resource://resource.images.weathericons.default/</value>
	</variable>
	<variable name="WeatherIconsExtVar">
		<value condition="!String.IsEmpty(Skin.String(weathericons.ext))">$INFO[Skin.String(weathericons.ext)]</value>
		<value>.png</value>
	</variable>
	<variable name="FanartTitleVar">
		<value condition="String.IsEqual(Container(9000).ListItem.Thumb,1)">$INFO[Window(Home).Property(script.grab.fanart.Movie.Title)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Thumb,2)">$INFO[Window(Home).Property(script.grab.fanart.TV.Title)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Thumb,3)">$INFO[Window(Home).Property(script.grab.fanart.Video.Title)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Thumb,4)">$INFO[Window(Home).Property(script.grab.fanart.Music.Artist)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Thumb,5)">$INFO[Window(Home).Property(script.grab.fanart.Global.Title)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(BGType),7)">$INFO[Container(9034).ListItem.Title]</value>
	</variable>
	<variable name="DSPManagerHelpTextVar">
		<value condition="Control.HasFocus(20)">$INFO[Container(20).ListItem.Property(Description)]</value>
		<value condition="Control.HasFocus(21)">$INFO[Container(21).ListItem.Property(Description)]</value>
		<value condition="Control.HasFocus(9000)">$INFO[Container(9000).ListItem.Label2]</value>
		<value>$LOCALIZE[15020]</value>
	</variable>
	<variable name="503.InfoPanelTextboxVar">
		<value condition="!String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="503.InfoPanelLabel2Var">
		<value condition="Container.Content(movies)">$INFO[ListItem.Director,$LOCALIZE[31000] ]</value>
		<value condition="Container.Content(tvshows)">$INFO[ListItem.Studio]</value>
	</variable>
	<variable name="58.Label2Var">
		<value condition="Skin.HasSetting(Banner.Wall)">$LOCALIZE[31166]</value>
		<value>$LOCALIZE[535]</value>
	</variable>
	<variable name="VideoHWDecoderVar">
		<value condition="Player.Process(videohwdecoder)">$LOCALIZE[19074]</value>
		<value>$LOCALIZE[31172]</value>
	</variable>
	<variable name="SimilarShowsIDVar">
		<value condition="String.IsEqual(ListItem.DBType,episode)">name=$INFO[ListItem.TvShowTitle]</value>
		<value>dbid=$INFO[ListItem.DBID]</value>
	</variable>
	<variable name="ListSortByVar">
		<value condition="Container.Content(tags)">title</value>
		<value condition="String.EndsWith(Container(50).ListItem.FolderPath,.xsp)">-</value>
		<value>year</value>
	</variable>
	<variable name="ListContentVar">
		<value condition="String.IsEmpty(Container.PluginName)">$INFO[Container(50).ListItem.FolderPath]</value>
		<value></value>
	</variable>	
	<variable name="DurationMinutesVar">
		<value condition="String.StartsWith(ListItem.Duration,01:00:)">60</value>
		<value condition="String.StartsWith(ListItem.Duration,01:01:)">61</value>
		<value condition="String.StartsWith(ListItem.Duration,01:02:)">62</value>
		<value condition="String.StartsWith(ListItem.Duration,01:03:)">63</value>
		<value condition="String.StartsWith(ListItem.Duration,01:04:)">64</value>
		<value condition="String.StartsWith(ListItem.Duration,01:05:)">65</value>
		<value condition="String.StartsWith(ListItem.Duration,01:06:)">66</value>
		<value condition="String.StartsWith(ListItem.Duration,01:07:)">67</value>
		<value condition="String.StartsWith(ListItem.Duration,01:08:)">68</value>
		<value condition="String.StartsWith(ListItem.Duration,01:09:)">69</value>
		<value condition="String.StartsWith(ListItem.Duration,01:10:)">70</value>
		<value condition="String.StartsWith(ListItem.Duration,01:11:)">71</value>
		<value condition="String.StartsWith(ListItem.Duration,01:12:)">72</value>
		<value condition="String.StartsWith(ListItem.Duration,01:13:)">73</value>
		<value condition="String.StartsWith(ListItem.Duration,01:14:)">74</value>
		<value condition="String.StartsWith(ListItem.Duration,01:15:)">75</value>
		<value condition="String.StartsWith(ListItem.Duration,01:16:)">76</value>
		<value condition="String.StartsWith(ListItem.Duration,01:17:)">77</value>
		<value condition="String.StartsWith(ListItem.Duration,01:18:)">78</value>
		<value condition="String.StartsWith(ListItem.Duration,01:19:)">79</value>
		<value condition="String.StartsWith(ListItem.Duration,01:20:)">80</value>
		<value condition="String.StartsWith(ListItem.Duration,01:21:)">81</value>
		<value condition="String.StartsWith(ListItem.Duration,01:22:)">82</value>
		<value condition="String.StartsWith(ListItem.Duration,01:23:)">83</value>
		<value condition="String.StartsWith(ListItem.Duration,01:24:)">84</value>
		<value condition="String.StartsWith(ListItem.Duration,01:25:)">85</value>
		<value condition="String.StartsWith(ListItem.Duration,01:26:)">86</value>
		<value condition="String.StartsWith(ListItem.Duration,01:27:)">87</value>
		<value condition="String.StartsWith(ListItem.Duration,01:28:)">88</value>
		<value condition="String.StartsWith(ListItem.Duration,01:29:)">89</value>
		<value condition="String.StartsWith(ListItem.Duration,01:30:)">90</value>
		<value condition="String.StartsWith(ListItem.Duration,01:31:)">91</value>
		<value condition="String.StartsWith(ListItem.Duration,01:32:)">92</value>
		<value condition="String.StartsWith(ListItem.Duration,01:33:)">93</value>
		<value condition="String.StartsWith(ListItem.Duration,01:34:)">94</value>
		<value condition="String.StartsWith(ListItem.Duration,01:35:)">95</value>
		<value condition="String.StartsWith(ListItem.Duration,01:36:)">96</value>
		<value condition="String.StartsWith(ListItem.Duration,01:37:)">97</value>
		<value condition="String.StartsWith(ListItem.Duration,01:38:)">98</value>
		<value condition="String.StartsWith(ListItem.Duration,01:39:)">99</value>
		<value condition="String.StartsWith(ListItem.Duration,01:40:)">100</value>
		<value condition="String.StartsWith(ListItem.Duration,01:41:)">101</value>
		<value condition="String.StartsWith(ListItem.Duration,01:42:)">102</value>
		<value condition="String.StartsWith(ListItem.Duration,01:43:)">103</value>
		<value condition="String.StartsWith(ListItem.Duration,01:44:)">104</value>
		<value condition="String.StartsWith(ListItem.Duration,01:45:)">105</value>
		<value condition="String.StartsWith(ListItem.Duration,01:46:)">106</value>
		<value condition="String.StartsWith(ListItem.Duration,01:47:)">107</value>
		<value condition="String.StartsWith(ListItem.Duration,01:48:)">108</value>
		<value condition="String.StartsWith(ListItem.Duration,01:49:)">109</value>
		<value condition="String.StartsWith(ListItem.Duration,01:50:)">110</value>
		<value condition="String.StartsWith(ListItem.Duration,01:51:)">111</value>
		<value condition="String.StartsWith(ListItem.Duration,01:52:)">112</value>
		<value condition="String.StartsWith(ListItem.Duration,01:53:)">113</value>
		<value condition="String.StartsWith(ListItem.Duration,01:54:)">114</value>
		<value condition="String.StartsWith(ListItem.Duration,01:55:)">115</value>
		<value condition="String.StartsWith(ListItem.Duration,01:56:)">116</value>
		<value condition="String.StartsWith(ListItem.Duration,01:57:)">117</value>
		<value condition="String.StartsWith(ListItem.Duration,01:58:)">118</value>
		<value condition="String.StartsWith(ListItem.Duration,01:59:)">119</value>
		<value condition="String.StartsWith(ListItem.Duration,02:00:)">120</value>
		<value condition="String.StartsWith(ListItem.Duration,02:01:)">121</value>
		<value condition="String.StartsWith(ListItem.Duration,02:02:)">122</value>
		<value condition="String.StartsWith(ListItem.Duration,02:03:)">123</value>
		<value condition="String.StartsWith(ListItem.Duration,02:04:)">124</value>
		<value condition="String.StartsWith(ListItem.Duration,02:05:)">125</value>
		<value condition="String.StartsWith(ListItem.Duration,02:06:)">126</value>
		<value condition="String.StartsWith(ListItem.Duration,02:07:)">127</value>
		<value condition="String.StartsWith(ListItem.Duration,02:08:)">128</value>
		<value condition="String.StartsWith(ListItem.Duration,02:09:)">129</value>
		<value condition="String.StartsWith(ListItem.Duration,02:10:)">130</value>
		<value condition="String.StartsWith(ListItem.Duration,02:11:)">131</value>
		<value condition="String.StartsWith(ListItem.Duration,02:12:)">132</value>
		<value condition="String.StartsWith(ListItem.Duration,02:13:)">133</value>
		<value condition="String.StartsWith(ListItem.Duration,02:14:)">134</value>
		<value condition="String.StartsWith(ListItem.Duration,02:15:)">135</value>
		<value condition="String.StartsWith(ListItem.Duration,02:16:)">136</value>
		<value condition="String.StartsWith(ListItem.Duration,02:17:)">137</value>
		<value condition="String.StartsWith(ListItem.Duration,02:18:)">138</value>
		<value condition="String.StartsWith(ListItem.Duration,02:19:)">139</value>
		<value condition="String.StartsWith(ListItem.Duration,02:20:)">140</value>
		<value condition="String.StartsWith(ListItem.Duration,02:21:)">141</value>
		<value condition="String.StartsWith(ListItem.Duration,02:22:)">142</value>
		<value condition="String.StartsWith(ListItem.Duration,02:23:)">143</value>
		<value condition="String.StartsWith(ListItem.Duration,02:24:)">144</value>
		<value condition="String.StartsWith(ListItem.Duration,02:25:)">145</value>
		<value condition="String.StartsWith(ListItem.Duration,02:26:)">146</value>
		<value condition="String.StartsWith(ListItem.Duration,02:27:)">147</value>
		<value condition="String.StartsWith(ListItem.Duration,02:28:)">148</value>
		<value condition="String.StartsWith(ListItem.Duration,02:29:)">149</value>
		<value condition="String.StartsWith(ListItem.Duration,02:30:)">150</value>
		<value condition="String.StartsWith(ListItem.Duration,02:31:)">151</value>
		<value condition="String.StartsWith(ListItem.Duration,02:32:)">152</value>
		<value condition="String.StartsWith(ListItem.Duration,02:33:)">153</value>
		<value condition="String.StartsWith(ListItem.Duration,02:34:)">154</value>
		<value condition="String.StartsWith(ListItem.Duration,02:35:)">155</value>
		<value condition="String.StartsWith(ListItem.Duration,02:36:)">156</value>
		<value condition="String.StartsWith(ListItem.Duration,02:37:)">157</value>
		<value condition="String.StartsWith(ListItem.Duration,02:38:)">158</value>
		<value condition="String.StartsWith(ListItem.Duration,02:39:)">159</value>
		<value condition="String.StartsWith(ListItem.Duration,02:40:)">160</value>
		<value condition="String.StartsWith(ListItem.Duration,02:41:)">161</value>
		<value condition="String.StartsWith(ListItem.Duration,02:42:)">162</value>
		<value condition="String.StartsWith(ListItem.Duration,02:43:)">163</value>
		<value condition="String.StartsWith(ListItem.Duration,02:44:)">164</value>
		<value condition="String.StartsWith(ListItem.Duration,02:45:)">165</value>
		<value condition="String.StartsWith(ListItem.Duration,02:46:)">166</value>
		<value condition="String.StartsWith(ListItem.Duration,02:47:)">167</value>
		<value condition="String.StartsWith(ListItem.Duration,02:48:)">168</value>
		<value condition="String.StartsWith(ListItem.Duration,02:49:)">169</value>
		<value condition="String.StartsWith(ListItem.Duration,02:50:)">170</value>
		<value condition="String.StartsWith(ListItem.Duration,02:51:)">171</value>
		<value condition="String.StartsWith(ListItem.Duration,02:52:)">172</value>
		<value condition="String.StartsWith(ListItem.Duration,02:53:)">173</value>
		<value condition="String.StartsWith(ListItem.Duration,02:54:)">174</value>
		<value condition="String.StartsWith(ListItem.Duration,02:55:)">175</value>
		<value condition="String.StartsWith(ListItem.Duration,02:56:)">176</value>
		<value condition="String.StartsWith(ListItem.Duration,02:57:)">177</value>
		<value condition="String.StartsWith(ListItem.Duration,02:58:)">178</value>
		<value condition="String.StartsWith(ListItem.Duration,02:59:)">179</value>
		<value condition="String.StartsWith(ListItem.Duration,03:00:)">180</value>
		<value condition="String.StartsWith(ListItem.Duration,03:01:)">181</value>
		<value condition="String.StartsWith(ListItem.Duration,03:02:)">182</value>
		<value condition="String.StartsWith(ListItem.Duration,03:03:)">183</value>
		<value condition="String.StartsWith(ListItem.Duration,03:04:)">184</value>
		<value condition="String.StartsWith(ListItem.Duration,03:05:)">185</value>
		<value condition="String.StartsWith(ListItem.Duration,03:06:)">186</value>
		<value condition="String.StartsWith(ListItem.Duration,03:07:)">187</value>
		<value condition="String.StartsWith(ListItem.Duration,03:08:)">188</value>
		<value condition="String.StartsWith(ListItem.Duration,03:09:)">189</value>
		<value condition="String.StartsWith(ListItem.Duration,03:10:)">190</value>
		<value condition="String.StartsWith(ListItem.Duration,03:11:)">191</value>
		<value condition="String.StartsWith(ListItem.Duration,03:12:)">192</value>
		<value condition="String.StartsWith(ListItem.Duration,03:13:)">193</value>
		<value condition="String.StartsWith(ListItem.Duration,03:14:)">194</value>
		<value condition="String.StartsWith(ListItem.Duration,03:15:)">195</value>
		<value condition="String.StartsWith(ListItem.Duration,03:16:)">196</value>
		<value condition="String.StartsWith(ListItem.Duration,03:17:)">197</value>
		<value condition="String.StartsWith(ListItem.Duration,03:18:)">198</value>
		<value condition="String.StartsWith(ListItem.Duration,03:19:)">199</value>
		<value condition="String.StartsWith(ListItem.Duration,03:20:)">200</value>
		<value condition="String.StartsWith(ListItem.Duration,03:21:)">201</value>
		<value condition="String.StartsWith(ListItem.Duration,03:22:)">202</value>
		<value condition="String.StartsWith(ListItem.Duration,03:23:)">203</value>
		<value condition="String.StartsWith(ListItem.Duration,03:24:)">204</value>
		<value condition="String.StartsWith(ListItem.Duration,03:25:)">205</value>
		<value condition="String.StartsWith(ListItem.Duration,03:26:)">206</value>
		<value condition="String.StartsWith(ListItem.Duration,03:27:)">207</value>
		<value condition="String.StartsWith(ListItem.Duration,03:28:)">208</value>
		<value condition="String.StartsWith(ListItem.Duration,03:29:)">209</value>
		<value condition="String.StartsWith(ListItem.Duration,03:30:)">210</value>
		<value condition="String.StartsWith(ListItem.Duration,03:31:)">211</value>
		<value condition="String.StartsWith(ListItem.Duration,03:32:)">212</value>
		<value condition="String.StartsWith(ListItem.Duration,03:33:)">213</value>
		<value condition="String.StartsWith(ListItem.Duration,03:34:)">214</value>
		<value condition="String.StartsWith(ListItem.Duration,03:35:)">215</value>
		<value condition="String.StartsWith(ListItem.Duration,03:36:)">216</value>
		<value condition="String.StartsWith(ListItem.Duration,03:37:)">217</value>
		<value condition="String.StartsWith(ListItem.Duration,03:38:)">218</value>
		<value condition="String.StartsWith(ListItem.Duration,03:39:)">219</value>
		<value condition="String.StartsWith(ListItem.Duration,03:40:)">220</value>
		<value condition="String.StartsWith(ListItem.Duration,03:41:)">221</value>
		<value condition="String.StartsWith(ListItem.Duration,03:42:)">222</value>
		<value condition="String.StartsWith(ListItem.Duration,03:43:)">223</value>
		<value condition="String.StartsWith(ListItem.Duration,03:44:)">224</value>
		<value condition="String.StartsWith(ListItem.Duration,03:45:)">225</value>
		<value condition="String.StartsWith(ListItem.Duration,03:46:)">226</value>
		<value condition="String.StartsWith(ListItem.Duration,03:47:)">227</value>
		<value condition="String.StartsWith(ListItem.Duration,03:48:)">228</value>
		<value condition="String.StartsWith(ListItem.Duration,03:49:)">229</value>
		<value condition="String.StartsWith(ListItem.Duration,03:50:)">230</value>
		<value condition="String.StartsWith(ListItem.Duration,03:51:)">231</value>
		<value condition="String.StartsWith(ListItem.Duration,03:52:)">232</value>
		<value condition="String.StartsWith(ListItem.Duration,03:53:)">233</value>
		<value condition="String.StartsWith(ListItem.Duration,03:54:)">234</value>
		<value condition="String.StartsWith(ListItem.Duration,03:55:)">235</value>
		<value condition="String.StartsWith(ListItem.Duration,03:56:)">236</value>
		<value condition="String.StartsWith(ListItem.Duration,03:57:)">237</value>
		<value condition="String.StartsWith(ListItem.Duration,03:58:)">238</value>
		<value condition="String.StartsWith(ListItem.Duration,03:59:)">239</value>
		<value condition="String.StartsWith(ListItem.Duration,04:00:)">240</value>
		<value condition="String.StartsWith(ListItem.Duration,04:01:)">241</value>
		<value condition="String.StartsWith(ListItem.Duration,04:02:)">242</value>
		<value condition="String.StartsWith(ListItem.Duration,04:03:)">243</value>
		<value condition="String.StartsWith(ListItem.Duration,04:04:)">244</value>
		<value condition="String.StartsWith(ListItem.Duration,04:05:)">245</value>
		<value condition="String.StartsWith(ListItem.Duration,04:06:)">246</value>
		<value condition="String.StartsWith(ListItem.Duration,04:07:)">247</value>
		<value condition="String.StartsWith(ListItem.Duration,04:08:)">248</value>
		<value condition="String.StartsWith(ListItem.Duration,04:09:)">249</value>
		<value condition="String.StartsWith(ListItem.Duration,04:10:)">250</value>
		<value condition="String.StartsWith(ListItem.Duration,04:11:)">251</value>
		<value condition="String.StartsWith(ListItem.Duration,04:12:)">252</value>
		<value condition="String.StartsWith(ListItem.Duration,04:13:)">253</value>
		<value condition="String.StartsWith(ListItem.Duration,04:14:)">254</value>
		<value condition="String.StartsWith(ListItem.Duration,04:15:)">255</value>
		<value condition="String.StartsWith(ListItem.Duration,04:16:)">256</value>
		<value condition="String.StartsWith(ListItem.Duration,04:17:)">257</value>
		<value condition="String.StartsWith(ListItem.Duration,04:18:)">258</value>
		<value condition="String.StartsWith(ListItem.Duration,04:19:)">259</value>
		<value condition="String.StartsWith(ListItem.Duration,04:20:)">260</value>
		<value condition="String.StartsWith(ListItem.Duration,04:21:)">261</value>
		<value condition="String.StartsWith(ListItem.Duration,04:22:)">262</value>
		<value condition="String.StartsWith(ListItem.Duration,04:23:)">263</value>
		<value condition="String.StartsWith(ListItem.Duration,04:24:)">264</value>
		<value condition="String.StartsWith(ListItem.Duration,04:25:)">265</value>
		<value condition="String.StartsWith(ListItem.Duration,04:26:)">266</value>
		<value condition="String.StartsWith(ListItem.Duration,04:27:)">267</value>
		<value condition="String.StartsWith(ListItem.Duration,04:28:)">268</value>
		<value condition="String.StartsWith(ListItem.Duration,04:29:)">269</value>
		<value condition="String.StartsWith(ListItem.Duration,04:30:)">270</value>
		<value condition="String.StartsWith(ListItem.Duration,04:31:)">271</value>
		<value condition="String.StartsWith(ListItem.Duration,04:32:)">272</value>
		<value condition="String.StartsWith(ListItem.Duration,04:33:)">273</value>
		<value condition="String.StartsWith(ListItem.Duration,04:34:)">274</value>
		<value condition="String.StartsWith(ListItem.Duration,04:35:)">275</value>
		<value condition="String.StartsWith(ListItem.Duration,04:36:)">276</value>
		<value condition="String.StartsWith(ListItem.Duration,04:37:)">277</value>
		<value condition="String.StartsWith(ListItem.Duration,04:38:)">278</value>
		<value condition="String.StartsWith(ListItem.Duration,04:39:)">279</value>
		<value condition="String.StartsWith(ListItem.Duration,04:40:)">280</value>
		<value condition="String.StartsWith(ListItem.Duration,04:41:)">281</value>
		<value condition="String.StartsWith(ListItem.Duration,04:42:)">282</value>
		<value condition="String.StartsWith(ListItem.Duration,04:43:)">283</value>
		<value condition="String.StartsWith(ListItem.Duration,04:44:)">284</value>
		<value condition="String.StartsWith(ListItem.Duration,04:45:)">285</value>
		<value condition="String.StartsWith(ListItem.Duration,04:46:)">286</value>
		<value condition="String.StartsWith(ListItem.Duration,04:47:)">287</value>
		<value condition="String.StartsWith(ListItem.Duration,04:48:)">288</value>
		<value condition="String.StartsWith(ListItem.Duration,04:49:)">289</value>
		<value condition="String.StartsWith(ListItem.Duration,04:50:)">290</value>
		<value condition="String.StartsWith(ListItem.Duration,04:51:)">291</value>
		<value condition="String.StartsWith(ListItem.Duration,04:52:)">292</value>
		<value condition="String.StartsWith(ListItem.Duration,04:53:)">293</value>
		<value condition="String.StartsWith(ListItem.Duration,04:54:)">294</value>
		<value condition="String.StartsWith(ListItem.Duration,04:55:)">295</value>
		<value condition="String.StartsWith(ListItem.Duration,04:56:)">296</value>
		<value condition="String.StartsWith(ListItem.Duration,04:57:)">297</value>
		<value condition="String.StartsWith(ListItem.Duration,04:58:)">298</value>
		<value condition="String.StartsWith(ListItem.Duration,04:59:)">299</value>
		<value condition="String.StartsWith(ListItem.Duration,05:00:)">600</value>
		<value condition="String.StartsWith(ListItem.Duration,05:01:)">601</value>
		<value condition="String.StartsWith(ListItem.Duration,05:02:)">602</value>
		<value condition="String.StartsWith(ListItem.Duration,05:03:)">603</value>
		<value condition="String.StartsWith(ListItem.Duration,05:04:)">604</value>
		<value condition="String.StartsWith(ListItem.Duration,05:05:)">605</value>
		<value condition="String.StartsWith(ListItem.Duration,05:06:)">606</value>
		<value condition="String.StartsWith(ListItem.Duration,05:07:)">607</value>
		<value condition="String.StartsWith(ListItem.Duration,05:08:)">608</value>
		<value condition="String.StartsWith(ListItem.Duration,05:09:)">609</value>
		<value condition="String.StartsWith(ListItem.Duration,05:10:)">610</value>
		<value condition="String.StartsWith(ListItem.Duration,05:11:)">611</value>
		<value condition="String.StartsWith(ListItem.Duration,05:12:)">612</value>
		<value condition="String.StartsWith(ListItem.Duration,05:13:)">613</value>
		<value condition="String.StartsWith(ListItem.Duration,05:14:)">614</value>
		<value condition="String.StartsWith(ListItem.Duration,05:15:)">615</value>
		<value condition="String.StartsWith(ListItem.Duration,05:16:)">616</value>
		<value condition="String.StartsWith(ListItem.Duration,05:17:)">617</value>
		<value condition="String.StartsWith(ListItem.Duration,05:18:)">618</value>
		<value condition="String.StartsWith(ListItem.Duration,05:19:)">619</value>
		<value condition="String.StartsWith(ListItem.Duration,05:20:)">620</value>
		<value condition="String.StartsWith(ListItem.Duration,05:21:)">621</value>
		<value condition="String.StartsWith(ListItem.Duration,05:22:)">622</value>
		<value condition="String.StartsWith(ListItem.Duration,05:23:)">623</value>
		<value condition="String.StartsWith(ListItem.Duration,05:24:)">624</value>
		<value condition="String.StartsWith(ListItem.Duration,05:25:)">625</value>
		<value condition="String.StartsWith(ListItem.Duration,05:26:)">626</value>
		<value condition="String.StartsWith(ListItem.Duration,05:27:)">627</value>
		<value condition="String.StartsWith(ListItem.Duration,05:28:)">628</value>
		<value condition="String.StartsWith(ListItem.Duration,05:29:)">629</value>
		<value condition="String.StartsWith(ListItem.Duration,05:30:)">630</value>
		<value condition="String.StartsWith(ListItem.Duration,05:31:)">631</value>
		<value condition="String.StartsWith(ListItem.Duration,05:32:)">632</value>
		<value condition="String.StartsWith(ListItem.Duration,05:33:)">633</value>
		<value condition="String.StartsWith(ListItem.Duration,05:34:)">634</value>
		<value condition="String.StartsWith(ListItem.Duration,05:35:)">635</value>
		<value condition="String.StartsWith(ListItem.Duration,05:36:)">636</value>
		<value condition="String.StartsWith(ListItem.Duration,05:37:)">637</value>
		<value condition="String.StartsWith(ListItem.Duration,05:38:)">638</value>
		<value condition="String.StartsWith(ListItem.Duration,05:39:)">639</value>
		<value condition="String.StartsWith(ListItem.Duration,05:40:)">640</value>
		<value condition="String.StartsWith(ListItem.Duration,05:41:)">641</value>
		<value condition="String.StartsWith(ListItem.Duration,05:42:)">642</value>
		<value condition="String.StartsWith(ListItem.Duration,05:43:)">643</value>
		<value condition="String.StartsWith(ListItem.Duration,05:44:)">644</value>
		<value condition="String.StartsWith(ListItem.Duration,05:45:)">645</value>
		<value condition="String.StartsWith(ListItem.Duration,05:46:)">646</value>
		<value condition="String.StartsWith(ListItem.Duration,05:47:)">647</value>
		<value condition="String.StartsWith(ListItem.Duration,05:48:)">648</value>
		<value condition="String.StartsWith(ListItem.Duration,05:49:)">649</value>
		<value condition="String.StartsWith(ListItem.Duration,05:50:)">650</value>
		<value condition="String.StartsWith(ListItem.Duration,05:51:)">651</value>
		<value condition="String.StartsWith(ListItem.Duration,05:52:)">652</value>
		<value condition="String.StartsWith(ListItem.Duration,05:53:)">653</value>
		<value condition="String.StartsWith(ListItem.Duration,05:54:)">654</value>
		<value condition="String.StartsWith(ListItem.Duration,05:55:)">655</value>
		<value condition="String.StartsWith(ListItem.Duration,05:56:)">656</value>
		<value condition="String.StartsWith(ListItem.Duration,05:57:)">657</value>
		<value condition="String.StartsWith(ListItem.Duration,05:58:)">658</value>
		<value condition="String.StartsWith(ListItem.Duration,05:59:)">659</value>
		<value condition="String.StartsWith(ListItem.Duration,00:)">1</value>
		<value condition="String.StartsWith(ListItem.Duration,01:)">1</value>
		<value condition="String.StartsWith(ListItem.Duration,02:)">2</value>
		<value condition="String.StartsWith(ListItem.Duration,03:)">3</value>
		<value condition="String.StartsWith(ListItem.Duration,04:)">4</value>
		<value condition="String.StartsWith(ListItem.Duration,05:)">5</value>
		<value condition="String.StartsWith(ListItem.Duration,06:)">6</value>
		<value condition="String.StartsWith(ListItem.Duration,07:)">7</value>
		<value condition="String.StartsWith(ListItem.Duration,08:)">8</value>
		<value condition="String.StartsWith(ListItem.Duration,09:)">9</value>
		<value condition="String.StartsWith(ListItem.Duration,10:)">10</value>
		<value condition="String.StartsWith(ListItem.Duration,11:)">11</value>
		<value condition="String.StartsWith(ListItem.Duration,12:)">12</value>
		<value condition="String.StartsWith(ListItem.Duration,13:)">13</value>
		<value condition="String.StartsWith(ListItem.Duration,14:)">14</value>
		<value condition="String.StartsWith(ListItem.Duration,15:)">15</value>
		<value condition="String.StartsWith(ListItem.Duration,16:)">16</value>
		<value condition="String.StartsWith(ListItem.Duration,17:)">17</value>
		<value condition="String.StartsWith(ListItem.Duration,18:)">18</value>
		<value condition="String.StartsWith(ListItem.Duration,19:)">19</value>
		<value condition="String.StartsWith(ListItem.Duration,20:)">20</value>
		<value condition="String.StartsWith(ListItem.Duration,21:)">21</value>
		<value condition="String.StartsWith(ListItem.Duration,22:)">22</value>
		<value condition="String.StartsWith(ListItem.Duration,23:)">23</value>
		<value condition="String.StartsWith(ListItem.Duration,24:)">24</value>
		<value condition="String.StartsWith(ListItem.Duration,25:)">25</value>
		<value condition="String.StartsWith(ListItem.Duration,26:)">26</value>
		<value condition="String.StartsWith(ListItem.Duration,27:)">27</value>
		<value condition="String.StartsWith(ListItem.Duration,28:)">28</value>
		<value condition="String.StartsWith(ListItem.Duration,29:)">29</value>
		<value condition="String.StartsWith(ListItem.Duration,30:)">30</value>
		<value condition="String.StartsWith(ListItem.Duration,31:)">31</value>
		<value condition="String.StartsWith(ListItem.Duration,32:)">32</value>
		<value condition="String.StartsWith(ListItem.Duration,33:)">33</value>
		<value condition="String.StartsWith(ListItem.Duration,34:)">34</value>
		<value condition="String.StartsWith(ListItem.Duration,35:)">35</value>
		<value condition="String.StartsWith(ListItem.Duration,36:)">36</value>
		<value condition="String.StartsWith(ListItem.Duration,37:)">37</value>
		<value condition="String.StartsWith(ListItem.Duration,38:)">38</value>
		<value condition="String.StartsWith(ListItem.Duration,39:)">39</value>
		<value condition="String.StartsWith(ListItem.Duration,40:)">40</value>
		<value condition="String.StartsWith(ListItem.Duration,41:)">41</value>
		<value condition="String.StartsWith(ListItem.Duration,42:)">42</value>
		<value condition="String.StartsWith(ListItem.Duration,43:)">43</value>
		<value condition="String.StartsWith(ListItem.Duration,44:)">44</value>
		<value condition="String.StartsWith(ListItem.Duration,45:)">45</value>
		<value condition="String.StartsWith(ListItem.Duration,46:)">46</value>
		<value condition="String.StartsWith(ListItem.Duration,47:)">47</value>
		<value condition="String.StartsWith(ListItem.Duration,48:)">48</value>
		<value condition="String.StartsWith(ListItem.Duration,49:)">49</value>
		<value condition="String.StartsWith(ListItem.Duration,50:)">50</value>
		<value condition="String.StartsWith(ListItem.Duration,51:)">51</value>
		<value condition="String.StartsWith(ListItem.Duration,52:)">52</value>
		<value condition="String.StartsWith(ListItem.Duration,53:)">53</value>
		<value condition="String.StartsWith(ListItem.Duration,54:)">54</value>
		<value condition="String.StartsWith(ListItem.Duration,55:)">55</value>
		<value condition="String.StartsWith(ListItem.Duration,56:)">56</value>
		<value condition="String.StartsWith(ListItem.Duration,57:)">57</value>
		<value condition="String.StartsWith(ListItem.Duration,58:)">58</value>
		<value condition="String.StartsWith(ListItem.Duration,59:)">59</value>
	</variable>	
</includes>