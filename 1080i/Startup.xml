<?xml version="1.0" encoding="utf-8"?>
<window>
    <defaultcontrol always="true">10</defaultcontrol>
    <backgroundcolor>black</backgroundcolor>
    <allowoverlay>no</allowoverlay>
    <include condition="!Skin.HasSetting(firstrun)">AutoConfig</include>
    <onload condition="Stringcompare(Skin.String(startupcount),2)">Skin.SetString(startupcount,3)</onload>
    <onload condition="Stringcompare(Skin.String(startupcount),1)">Skin.SetString(startupcount,2)</onload>
    <onload condition="IsEmpty(Skin.String(startupcount))">Skin.SetString(startupcount,1)</onload>
    <onload condition="Substring(Skin.String(widgetlist),actors) | Substring(Skin.String(widget2list),actors) | Skin.HasSetting(ActorBirthdayRSS)">RunScript(script.metadata.actors,borntoday,10,random)</onload>
    <onload condition="Substring(Skin.String(backgroundlist),googleweather2) + System.HasAddon(script.widget.weatherworld)">RunScript(script.widget.weatherworld,time=10&amp;limit=9&amp;mapsize=1920x1080&amp;tilesize=360x60&amp;window=10000&amp;condition=StringCompare(Control.GetLabel(4322),googleweather2))</onload>
    <onload condition="System.HasAddon(script.randomitems)">XBMC.RunScript(script.randomitems,limit=10&amp;unplayed=True&amp;alarm=60)</onload>
    <onload condition="Library.HasContent(tvshows)">XBMC.RunScript(script.tv.show.next.aired,silent=True)</onload>
    <onload condition="Substring(Skin.String(widgetlist),rss1) | Substring(Skin.String(widget2list),rss1)">XBMC.RunScript(script.rssclient,guiless,feed=$INFO[Skin.String(CustomHomeFeedURL1)],imagecaching=false,window=10000,limit=8,prefix=RSS1)</onload>
    <onload condition="Substring(Skin.String(widgetlist),rss2) | Substring(Skin.String(widget2list),rss2)">XBMC.RunScript(script.rssclient,guiless,feed=$INFO[Skin.String(CustomHomeFeedURL2)],imagecaching=false,window=10000,limit=8,prefix=RSS2)</onload>
    <onload condition="Substring(Skin.String(widgetlist),rss3) | Substring(Skin.String(widget2list),rss3)">XBMC.RunScript(script.rssclient,guiless,feed=$INFO[Skin.String(CustomHomeFeedURL3)],imagecaching=false,window=10000,limit=8,prefix=RSS3)</onload>
    <onload condition="Substring(Skin.String(widgetlist),watchlist) | Substring(Skin.String(widget2list),watchlist) | Substring(Skin.String(widgetlist),inprogress) | Substring(Skin.String(widget2list),inprogress) | Substring(Skin.String(widgetlist),featured) | Substring(Skin.String(widget2list),featured) | Substring(Skin.String(backgroundlist),inprogress) | Substring(Skin.String(backgroundlist),watchlist) | Substring(Skin.String(backgroundlist),recommended) | Substring(Skin.String(backgroundlist),mostplayedalbums)">RunScript(script.watchlist,movies=true&amp;episodes=true&amp;albums=true&amp;limit=10)</onload>
    <onload condition="Substring(Skin.String(widgetlist),recentpics) | Substring(Skin.String(widget2list),recentpics) | Substring(Skin.String(backgroundlist),recentpics)">XBMC.RunScript(plugin.image.mypicsdb,0,?action='setproperties'&amp;method='Latest'&amp;sort='Added'&amp;limit=10)</onload>
    <onload condition="System.HasAddon(plugin.image.mypicsdb)">XBMC.RunScript(plugin.image.mypicsdb,0,?action='setproperties'&amp;method='Random'&amp;sort='Added'&amp;limit=10)</onload>
    <onload condition="Substring(Skin.String(widgetlist),concerts) | Substring(Skin.String(widget2list),concerts)">RunScript(script.ExtraMusicInfo,info=NearEvents)</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist1.Call))">$INFO[Skin.String(SmartPlaylist1.Call)]</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist2.Call))">$INFO[Skin.String(SmartPlaylist2.Call)]</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist3.Call))">$INFO[Skin.String(SmartPlaylist3.Call)]</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist4.Call))">$INFO[Skin.String(SmartPlaylist4.Call)]</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist5.Call))">$INFO[Skin.String(SmartPlaylist5.Call)]</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist6.Call))">$INFO[Skin.String(SmartPlaylist6.Call)]</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist7.Call))">$INFO[Skin.String(SmartPlaylist7.Call)]</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist8.Call))">$INFO[Skin.String(SmartPlaylist8.Call)]</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist9.Call))">$INFO[Skin.String(SmartPlaylist9.Call)]</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist10.Call))">$INFO[Skin.String(SmartPlaylist10.Call)]</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist11.Call))">$INFO[Skin.String(SmartPlaylist11.Call)]</onload>
    <onload condition="!IsEmpty(Skin.String(SmartPlaylist12.Call))">$INFO[Skin.String(SmartPlaylist12.Call)]</onload>
    <onload condition="System.HasAddon(script.xbmc.intro.movie)">RunScript(script.xbmc.intro.movie)</onload>
    <onload>AlarmClock(GotToHome,SetFocus(9000),00:10,silent)</onload>
    <onload>ClearProperty(FocusOnSubmenu,home)</onload>
    <onunload>CancelAlarm(GotToHome,true)</onunload>
    <onunload>Skin.SetString(widgetlist,$INFO[Control.GetLabel(11111)])</onunload>
    <onunload>Skin.SetString(widget2list,$INFO[Control.GetLabel(11112)])</onunload>
    <onunload>Skin.SetString(backgroundlist,$INFO[Control.GetLabel(11113)])</onunload>
    <onunload>Skin.SetString(submenulist,$INFO[Control.GetLabel(11114)])</onunload>
    <animation type="WindowClose" reversible="false">
        <effect type="fade" start="100" end="0" time="800" />
    </animation>
    <animation type="WindowOpen" reversible="false">
        <effect type="fade" start="0" end="100" delay="1000" time="800" />
    </animation>
    <controls>
        <control type="label" id="11111">
            <label> $INFO[Skin.String(MusicVideosHomeItem.Widget)] $INFO[Skin.String(MusicHomeItem.Widget)] $INFO[Skin.String(TVShowHomeItem.Widget)] $INFO[Skin.String(MovieHomeItem.Widget)] $INFO[Skin.String(LiveTVHomeItem.Widget)] $INFO[Skin.String(PicturesHomeItem.Widget)] $INFO[Skin.String(TVGuideHomeItem.Widget)] $INFO[Skin.String(FeaturedHomeItem.Widget)] $INFO[Skin.String(CustomHomeItem1.Widget)] $INFO[Skin.String(CustomHomeItem2.Widget)] $INFO[Skin.String(CustomHomeItem3.Widget)] $INFO[Skin.String(CustomHomeItem4.Widget)] $INFO[Skin.String(CustomHomeItem5.Widget)] $INFO[Skin.String(CustomHomeItem6.Widget)] $INFO[Skin.String(VideosHomeItem.Widget)] $INFO[Skin.String(ProgramsHomeItem.Widget)] $INFO[Skin.String(SettingsHomeItem.Widget)] $INFO[Skin.String(SearchHomeItem.Widget)] $INFO[Skin.String(ShutdownHomeItem.Widget)] $INFO[Skin.String(FavouritesHomeItem.Widget)] $INFO[Skin.String(PlayDiscHomeItem.Widget)] $INFO[Skin.String(WeatherHomeItem.Widget)] $INFO[Skin.String(ComicsHomeItem.Widget)] $INFO[Skin.String(FullscreenHomeItem.Widget)] $INFO[Skin.String(CustomSub9_1.Widget)] $INFO[Skin.String(CustomSub9_2.Widget)] $INFO[Skin.String(CustomSub9_4.Widget)] $INFO[Skin.String(CustomSub9_5.Widget)] $INFO[Skin.String(CustomSub8_1.Widget)] $INFO[Skin.String(CustomSub8_2.Widget)] $INFO[Skin.String(CustomSub8_3.Widget)] $INFO[Skin.String(CustomSub8_4)] $INFO[Skin.String(CustomSub8_5.Widget)] $INFO[Skin.String(CustomSub11_1.Widget)] $INFO[Skin.String(CustomSub11_2.Widget)] $INFO[Skin.String(CustomSub11_3.Widget)] $INFO[Skin.String(CustomSub11_4.Widget)] $INFO[Skin.String(CustomSub11_5.Widget)] $INFO[Skin.String(CustomSub11_6.Widget)] $INFO[Skin.String(CustomSub11_7.Widget)] $INFO[Skin.String(CustomSub11_8.Widget)] </label>
            <animation effect="fade" start="100" end="0" time="0" condition="true">conditional</animation>
        </control>
        <control type="label" id="11112">
            <label> $INFO[Skin.String(MusicVideosHomeItem.Widget2)] $INFO[Skin.String(MusicHomeItem.Widget2)] $INFO[Skin.String(TVShowHomeItem.Widget2)] $INFO[Skin.String(MovieHomeItem.Widget2)] $INFO[Skin.String(LiveTVHomeItem.Widget2)] $INFO[Skin.String(PicturesHomeItem.Widget2)] $INFO[Skin.String(TVGuideHomeItem.Widget2)] $INFO[Skin.String(FeaturedHomeItem.Widget2)] $INFO[Skin.String(CustomHomeItem1.Widget2)] $INFO[Skin.String(CustomHomeItem2.Widget2)] $INFO[Skin.String(CustomHomeItem3.Widget2)] $INFO[Skin.String(CustomHomeItem4.Widget2)] $INFO[Skin.String(CustomHomeItem5.Widget2)] $INFO[Skin.String(CustomHomeItem6.Widget2)] $INFO[Skin.String(VideosHomeItem.Widget2)] $INFO[Skin.String(ProgramsHomeItem.Widget2)] $INFO[Skin.String(SettingsHomeItem.Widget2)] $INFO[Skin.String(SearchHomeItem.Widget2)] $INFO[Skin.String(ShutdownHomeItem.Widget2)] $INFO[Skin.String(FavouritesHomeItem.Widget2)] $INFO[Skin.String(PlayDiscHomeItem.Widget2)] $INFO[Skin.String(WeatherHomeItem.Widget2)] $INFO[Skin.String(ComicsHomeItem.Widget2)] $INFO[Skin.String(FullscreenHomeItem.Widget2)] </label>
            <animation effect="fade" start="100" end="0" time="0" condition="true">conditional</animation>
        </control>
        <control type="label" id="11113">
            <label> $INFO[Skin.String(MusicVideosHomeItem.MultiFanart)] $INFO[Skin.String(MusicHomeItem.MultiFanart)] $INFO[Skin.String(TVShowHomeItem.MultiFanart)] $INFO[Skin.String(MovieHomeItem.MultiFanart)] $INFO[Skin.String(LiveTVHomeItem.MultiFanart)] $INFO[Skin.String(PicturesHomeItem.MultiFanart)] $INFO[Skin.String(TVGuideHomeItem.MultiFanart)] $INFO[Skin.String(FeaturedHomeItem.MultiFanart)] $INFO[Skin.String(CustomHomeItem1.MultiFanart)] $INFO[Skin.String(CustomHomeItem2.MultiFanart)] $INFO[Skin.String(CustomHomeItem3.MultiFanart)] $INFO[Skin.String(CustomHomeItem4.MultiFanart)] $INFO[Skin.String(CustomHomeItem5.MultiFanart)] $INFO[Skin.String(CustomHomeItem6.MultiFanart)] $INFO[Skin.String(VideosHomeItem.MultiFanart)] $INFO[Skin.String(ProgramsHomeItem.MultiFanart)] $INFO[Skin.String(SettingsHomeItem.MultiFanart)] $INFO[Skin.String(SearchHomeItem.MultiFanart)] $INFO[Skin.String(ShutdownHomeItem.MultiFanart)] $INFO[Skin.String(FavouritesHomeItem.MultiFanart)] $INFO[Skin.String(PlayDiscHomeItem.MultiFanart)] $INFO[Skin.String(WeatherHomeItem.MultiFanart)] $INFO[Skin.String(ComicsHomeItem.MultiFanart)] $INFO[Skin.String(FullscreenHomeItem.MultiFanart)] </label>
            <animation effect="fade" start="100" end="0" time="0" condition="true">conditional</animation>
        </control>
        <control type="label" id="11114">
            <label> $INFO[Skin.String(MusicVideosHomeItem.Submenu)] $INFO[Skin.String(MusicHomeItem.Submenu)] $INFO[Skin.String(TVShowHomeItem.Submenu)] $INFO[Skin.String(MovieHomeItem.Submenu)] $INFO[Skin.String(LiveTVHomeItem.Submenu)] $INFO[Skin.String(PicturesHomeItem.Submenu)] $INFO[Skin.String(TVGuideHomeItem.Submenu)] $INFO[Skin.String(FeaturedHomeItem.Submenu)] $INFO[Skin.String(CustomHomeItem1.Submenu)] $INFO[Skin.String(CustomHomeItem2.Submenu)] $INFO[Skin.String(CustomHomeItem3.Submenu)] $INFO[Skin.String(CustomHomeItem4.Submenu)] $INFO[Skin.String(CustomHomeItem5.Submenu)] $INFO[Skin.String(CustomHomeItem6.Submenu)] $INFO[Skin.String(VideosHomeItem.Submenu)] $INFO[Skin.String(ProgramsHomeItem.Submenu)] $INFO[Skin.String(SettingsHomeItem.Submenu)] $INFO[Skin.String(SearchHomeItem.Submenu)] $INFO[Skin.String(ShutdownHomeItem.Submenu)] $INFO[Skin.String(FavouritesHomeItem.Submenu)] $INFO[Skin.String(PlayDiscHomeItem.Submenu)] $INFO[Skin.String(WeatherHomeItem.Submenu)] $INFO[Skin.String(ComicsHomeItem.Submenu)] $INFO[Skin.String(FullscreenHomeItem.Submenu)] </label>
            <animation effect="fade" start="100" end="0" time="0" condition="true">conditional</animation>
        </control>
        <control type="button" id="9000">
            <onfocus>ReplaceWindow(Home)</onfocus>
            <include>HiddenObject</include>
        </control>
        <control type="button" id="10">
            <onfocus condition="Skin.HasSetting(Use_Startup_Playlist)">XBMC.PlayMedia($ESCINFO[Skin.String(Startup_Playlist_Path)])</onfocus>
            <onfocus condition="!System.HasAddon(script.xbmc.intro.movie)">SetFocus(11)</onfocus>
            <onleft>ReplaceWindow(Home)</onleft>
            <onup>ReplaceWindow(Home)</onup>
            <ondown>ReplaceWindow(Home)</ondown>
            <onright>ReplaceWindow(Home)</onright>
            <onclick>ReplaceWindow(Home)</onclick>
            <include>HiddenObject</include>
        </control>
        <control type="button" id="11">
            <onleft>ReplaceWindow(Home)</onleft>
            <onup>ReplaceWindow(Home)</onup>
            <ondown>ReplaceWindow(Home)</ondown>
            <onright>ReplaceWindow(Home)</onright>
            <onclick>ReplaceWindow(Home)</onclick>
            <include>HiddenObject</include>
        </control>
        <control type="image">
            <include>FullscreenDimensions</include>
            <texture>common/white.png</texture>
            <colordiffuse>black</colordiffuse>
        </control>
        <control type="image">
            <posx>923</posx>
            <posy>603</posy>
            <width>74</width>
            <height>74</height>
            <colordiffuse>$VAR[SpotColorVar]</colordiffuse>
            <texture>dialogs/busy.png</texture>
            <animation effect="rotate" start="360" end="0" center="auto" time="2500" loop="true" condition="true">conditional</animation>
            <animation effect="fade" start="70" time="1500" condition="true" pulse="true">Conditional</animation>
        </control>
        <control type="image">
            <posx>704</posx>
            <posy>300</posy>
            <width>512</width>
            <height>180</height>
            <aspectratio>keep</aspectratio>
            <colordiffuse>white</colordiffuse>
            <texture>XBMC_Logo.png</texture>
        </control>
        <control type="label">
            <posx>160</posx>
            <posy>900</posy>
            <width>1600</width>
            <height>50</height>
            <aligny>center</aligny>
            <align>center</align>
            <font>Font_MainClassic4</font>
            <textcolor>white2</textcolor>
            <label>42283</label>
            <textoffsetx>15</textoffsetx>
            <visible>![Stringcompare(Skin.String(startupcount),3) | Skin.HasTheme(White)]</visible>
        </control>
        <control type="videowindow">
            <include>FullscreenDimensions</include>
            <visible>Player.HasVideo</visible>
        </control>
    </controls>
</window>