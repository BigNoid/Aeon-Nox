<?xml version="1.0" encoding="utf-8"?>
<window id="0">
    <defaultcontrol always="true">9000</defaultcontrol>
    <include condition="!Skin.HasSetting(firstrun)">AutoConfig</include><include condition="!Skin.HasSetting(firstrun3.5)">AutoConfig3.5</include>
    <onload condition="Window.Previous(startup) + !IsEmpty(Skin.String(CustomFocusOffset))">Control.Move(9000,$INFO[Skin.String(CustomFocusOffset)])</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome)">XBMC.RunScript(script.randomitems,limit=16&amp;unplayed=True)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + [Substring(Skin.String(widgetlist),recentpics) | Substring(Skin.String(widget2list),recentpics) | Substring(Skin.String(backgroundlist),recentpics)]">XBMC.RunScript(plugin.image.mypicsdb,0,?action='setproperties'&amp;method='Latest'&amp;sort='Added'&amp;limit=10)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + [Substring(Skin.String(widgetlist),randompics) | Substring(Skin.String(widget2list),randompics) | Substring(Skin.String(backgroundlist),randompics)]">XBMC.RunScript(plugin.image.mypicsdb,0,?action='setproperties'&amp;method='Random'&amp;sort='Added'&amp;limit=10)</onload>
    <onload>ClearProperty(DontRunTVShowScripts,Home)</onload>
    <onload>AlarmClock(BGMove,Control.Move(4324,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(WidgetMove,Control.Move(8000,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(Widget2Move,Control.Move(7000,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(HomeTileLeft,Control.Move(5001,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(HomeTileRight,Control.Move(5003,1),00:10,silent,loop)</onload>
    <onload>AlarmClock(HomeTileMid,Control.Move(5002,1),00:15,silent,loop)</onload>
    <onload>AlarmClock(HomeTile2Left,Control.Move(6001,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(HomeTile2Right,Control.Move(6003,1),00:10,silent,loop)</onload>
    <onload>AlarmClock(HomeTile2Mid,Control.Move(6002,1),00:15,silent,loop)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem1.Enable) + [SubString(Skin.String(CustomHomeItem1.Widget),custom) | SubString(Skin.String(CustomHomeItem1.MultiFanart),custom)]">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem1.Path)], method=$INFO[Skin.String(Custom1.Method1)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem1)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem2.Enable) + [SubString(Skin.String(CustomHomeItem2.Widget),custom) | SubString(Skin.String(CustomHomeItem2.MultiFanart),custom)]">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem2.Path)], method=$INFO[Skin.String(Custom2.Method1)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem2)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem3.Enable) + [SubString(Skin.String(CustomHomeItem3.Widget),custom) | SubString(Skin.String(CustomHomeItem3.MultiFanart),custom)]">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem3.Path)], method=$INFO[Skin.String(Custom3.Method1)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem3)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem4.Enable) + [SubString(Skin.String(CustomHomeItem4.Widget),custom) | SubString(Skin.String(CustomHomeItem4.MultiFanart),custom)]">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem4.Path)], method=$INFO[Skin.String(Custom4.Method1)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem4)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem5.Enable) + [SubString(Skin.String(CustomHomeItem5.Widget),custom) | SubString(Skin.String(CustomHomeItem5.MultiFanart),custom)]">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem5.Path)], method=$INFO[Skin.String(Custom5.Method1)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem5)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem6.Enable) + [SubString(Skin.String(CustomHomeItem6.Widget),custom) | SubString(Skin.String(CustomHomeItem6.MultiFanart),custom)]">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem6.Path)], method=$INFO[Skin.String(Custom6.Method1)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem6)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem7.Enable) + [SubString(Skin.String(CustomHomeItem7.Widget),custom) | SubString(Skin.String(CustomHomeItem7.MultiFanart),custom)]">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem7.Path)], method=$INFO[Skin.String(Custom7.Method1)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem7)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem8.Enable) + [SubString(Skin.String(CustomHomeItem8.Widget),custom) | SubString(Skin.String(CustomHomeItem8.MultiFanart),custom)]">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem8.Path)], method=$INFO[Skin.String(Custom8.Method1)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem8)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem9.Enable) + [SubString(Skin.String(CustomHomeItem9.Widget),custom) | SubString(Skin.String(CustomHomeItem9.MultiFanart),custom)]">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem9.Path)], method=$INFO[Skin.String(Custom9.Method1)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem9)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem1.Enable) + SubString(Skin.String(CustomHomeItem1.Widget2),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem1.Path)], method=$INFO[Skin.String(Custom1.Method2)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=SecondCustomHomeItem1)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem2.Enable) + SubString(Skin.String(CustomHomeItem2.Widget2),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem2.Path)], method=$INFO[Skin.String(Custom2.Method2)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=SecondCustomHomeItem2)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem3.Enable) + SubString(Skin.String(CustomHomeItem3.Widget2),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem3.Path)], method=$INFO[Skin.String(Custom3.Method2)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=SecondCustomHomeItem3)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem4.Enable) + SubString(Skin.String(CustomHomeItem4.Widget2),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem4.Path)], method=$INFO[Skin.String(Custom4.Method2)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=SecondCustomHomeItem4)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem5.Enable) + SubString(Skin.String(CustomHomeItem5.Widget2),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem5.Path)], method=$INFO[Skin.String(Custom5.Method2)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=SecondCustomHomeItem5)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem6.Enable) + SubString(Skin.String(CustomHomeItem6.Widget2),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem6.Path)], method=$INFO[Skin.String(Custom6.Method2)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=SecondCustomHomeItem6)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem7.Enable) + SubString(Skin.String(CustomHomeItem7.Widget2),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem7.Path)], method=$INFO[Skin.String(Custom7.Method2)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=SecondCustomHomeItem7)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem8.Enable) + SubString(Skin.String(CustomHomeItem8.Widget2),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem8.Path)], method=$INFO[Skin.String(Custom8.Method2)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=SecondCustomHomeItem8)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Skin.HasSetting(CustomHomeItem9.Enable) + SubString(Skin.String(CustomHomeItem9.Widget2),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(CustomHomeItem9.Path)], method=$INFO[Skin.String(Custom9.Method2)], limit=10, unwatched=$INFO[Skin.String(IncludeWatchedCVPL)], resume=False, propertie=SecondCustomHomeItem9)</onload>
    <onunload>CancelAlarm(HomeTileLeft,true)</onunload>
    <onunload>CancelAlarm(HomeTileRight,true)</onunload>
    <onunload>CancelAlarm(HomeTileMid,true)</onunload>
    <onunload>CancelAlarm(HomeTile2Left,true)</onunload>
    <onunload>CancelAlarm(HomeTile2Right,true)</onunload>
    <onunload>CancelAlarm(HomeTile2Mid,true)</onunload>
    <onunload>CancelAlarm(WidgetMove,true)</onunload>
    <onunload>CancelAlarm(Widget2Move,true)</onunload>
    <onunload>CancelAlarm(BGMove,true)</onunload>
    <onunload>ClearProperty(PanelWidgetInfo,Home)</onunload>
    <onunload>ClearProperty(PanelWidget2Info,Home)</onunload>
    <allowoverlay>yes</allowoverlay>
    <controls>
        <include>MainMenuCommonContent</include>
        <!-- Fanart -->
        <control type="group">
<!--              <visible>![[Player.HasVideo + !Skin.HasSetting(ShowBackgroundVideo)] | [Player.HasAudio + !Skin.HasSetting(ShowBackgroundVis)]]</visible>
 -->             <control type="multiimage">
                <fadetime>600</fadetime>
                <imagepath background="true">$VAR[HomeMainFanartVar]</imagepath>
                <aspectratio align="center" aligny="top">scale</aspectratio>
                <include>Animation_VisibleChange400</include>
                <randomize>true</randomize>
                <animation effect="zoom" start="110" end="130" center="auto" time="15000" tween="linear" pulse="true" delay="600" reversible="true" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
                <animation effect="slide" start="-15,-15" end="15,15" time="7500" tween="linear" pulse="true" delay="600" reversible="true" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
                <visible>!Control.IsVisible(2355) + ![Substring(Control.GetLabel(4322),case) | Substring(Control.GetLabel(4322),dailybabe)]</visible>
            </control>
            <include condition="SubString(Skin.String(backgroundlist),dailybabe)">DailyBabeBG</include>
            <control type="image">
                <fadetime>600</fadetime>
                <include>FullscreenDimensions</include>
                <include>Animation_WindowFade250</include>
                <aspectratio align="center" aligny="top">scale</aspectratio>
                <texture background="true" fallback="special://skin/backgrounds/speakergrill.jpg">$INFO[Skin.String(LiveBG)]</texture>
                <animation effect="fade" time="500">Visible</animation>
                <animation effect="fade" time="500">Hidden</animation>
                <visible>!Control.IsVisible(2355) + Substring(Control.GetLabel(4322),case)</visible>
            </control>
            <include condition="SubString(Skin.String(backgroundlist),dvdcase)">InteractiveCasesBackground</include>
            <include condition="SubString(Skin.String(backgroundlist), case)">LiveCDCasesbackground</include>
            <include condition="SubString(Skin.String(backgroundlist), nocase)">LiveNoCasesbackground</include>
            <include condition="Skin.HasSetting(homecdwall)">cdwall-musicvisualisation</include>
            <control type="image">
                <fadetime>600</fadetime>
                <include>FullscreenDimensions</include>
                <aspectratio align="center" aligny="top">scale</aspectratio>
                <texture background="true">$VAR[HomeWidgetFanartVar]</texture>
                <visible>[Control.HasFocus(8000) | Control.HasFocus(7000) | Control.HasFocus(5010) | Control.HasFocus(5012) | ControlGroup(5014).HasFocus | ControlGroup(5020).HasFocus | ControlGroup(5021).HasFocus | ControlGroup(5030).HasFocus | ControlGroup(5040).HasFocus | Control.HasFocus(6010) | Control.HasFocus(6012) | ControlGroup(6014).HasFocus | ControlGroup(6020).HasFocus | ControlGroup(6021).HasFocus | ControlGroup(6030).HasFocus | ControlGroup(6040).HasFocus] | [Player.HasAudio + Skin.HasSetting(musicfanarthome)]</visible>
                <animation effect="fade" time="600">Visible</animation>
                <animation effect="fade" time="600">Hidden</animation>
                <animation effect="zoom" start="110" end="130" center="auto" time="15000" tween="linear" pulse="true" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
                <animation effect="slide" start="-15,-15" end="15,15" time="7500" tween="linear" pulse="true" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
            </control>
            <!-- Music ExtraFanart -->
            <include condition="!IsEmpty(Skin.String(ArtistsLogosPath))">MusicExtraFanartHome</include>
            <include condition="Skin.HasSetting(artistslideshowhome)">MusicArtistSlideshowHome</include>
        <include>CommonMediaPlayingBackground</include>
        </control>
        <control type="image">
            <include>FullscreenDimensions</include>
            <colordiffuse>$INFO[Skin.String(ColorLevel)]</colordiffuse>
            <texture>$INFO[Container(9000).ListItem.Property(Color),common/,.png]</texture>
            <include>Animation_WindowFade200</include>
            <fadetime>600</fadetime>
        </control>
        <!-- Home Fullscreen Video -->
        <include condition="!Skin.HasSetting(FadeHomeBG)">CommonMediaPlayingBackground</include>
        <include condition="Substring(Skin.String(backgroundlist),googleweather2) + System.HasAddon(script.widget.weatherworld)">WorldWeatherIcons</include>
        <control type="group">
            <visible>Skin.HasSetting(Glowbar_Home)</visible>
            <include>Animation_VisibleChange400</include>
            <control type="image">
                <include>FullscreenDimensions</include>
                <colordiffuse>$INFO[Skin.String(BackgroundDarkness)]</colordiffuse>
                <texture>common/black.png</texture>
                <include>Animation_VisibleChange400</include>
                <visible>![Skin.HasSetting(DisableWidgets) + !Player.HasMedia]</visible>
            </control>
            <control type="image">
                <posx>0</posx>
                <posy>-150</posy>
                <width>1920</width>
                <height>608</height>
                <texture flipy="true">views/showcase_glow.png</texture>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                <include>Animation_WindowFade200</include>
                <include>Animation_VisibleChange400</include>
                <animation effect="fade" start="100" end="80" time="5000" pulse="true" condition="true">conditional</animation>
                <visible>Skin.HasSetting(ExtendedGlowMode_Home)</visible>
            </control>
            <control type="image">
                <posx>0</posx>
                <posy>622</posy>
                <width>1920</width>
                <height>608</height>
                <texture>views/showcase_glow.png</texture>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                <include>Animation_WindowFade200</include>
                <include>Animation_VisibleChange400</include>
                <animation effect="fade" start="100" end="80" time="5000" pulse="true" condition="true">conditional</animation>
                <visible>Skin.HasSetting(ExtendedGlowMode_Home)</visible>
            </control>
        </control>
        <include condition="Skin.HasSetting(effect_bg)">BG_Effect_Home</include>
        <!-- LiveTV Info -->
        <control type="group">
            <visible>!Skin.HasSetting(lowermainmenu) + !Skin.HasSetting(Glowbar_Home)</visible>
            <include>Animation_VisibleChangeDelayed</include>
            <include>Animation_WindowFade200</include>
            <control type="image">
                <description>media info background image</description>
                <posx>0</posx>
                <posy>360</posy>
                <width>1920</width>
                <height>945</height>
                <texture>home/nowplaying_shadow.png</texture>
                <visible>!ControlGroup(5000).HasFocus</visible>
                <visible>[[Control.HasFocus(8000) | Substring(Control.GetLabel(4321),featured) | Substring(Control.GetLabel(4321),weather) | Substring(Control.GetLabel(4321),panel)] + !Skin.HasSetting(DisableWidgets)]</visible>
                <include>Animation_VisibleChangeDelayed</include>
                <animation effect="slide" time="400" tween="cubic" easing="inout" end="0,-225" condition="Skin.HasSetting(lowermainmenu)">Conditional</animation>
            </control>
            <control type="image">
                <description>media info background image</description>
                <posx>0</posx>
                <posy>0</posy>
                <width>1920</width>
                <height>945</height>
                <texture flipy="true">home/nowplaying_shadow.png</texture>
                <include>Animation_VisibleChangeDelayed</include>
                <visible>[Player.HasAudio + !Skin.HasSetting(nohomepageMusicinfo)] | [Player.HasVideo + !Skin.HasSetting(homepageVideoinfo)] | [[Control.HasFocus(7000) | Substring(Control.GetLabel(4325),featured) | Substring(Control.GetLabel(4325),weather) | Substring(Control.GetLabel(4325),panel)] + !Skin.HasSetting(DisableWidgets)]</visible>
                <animation effect="slide" time="400" tween="cubic" easing="inout" end="0,-225" condition="Skin.HasSetting(lowermainmenu)">Conditional</animation>
            </control>
        </control>
        <control type="group">
            <visible>Skin.HasSetting(lowermainmenu) + !Skin.HasSetting(Glowbar_Home)</visible>
            <include>Animation_WindowFade200</include>
            <include>Animation_VisibleChangeDelayed</include>
            <control type="image">
                <description>media info background image</description>
                <posx>0</posx>
                <posy>160</posy>
                <width>1920</width>
                <height>694</height>
                <texture>home/nowplaying_shadow.png</texture>
                <visible>!ControlGroup(5000).HasFocus</visible>
                <visible>[[Control.HasFocus(8000) | Substring(Control.GetLabel(4321),featured) | Substring(Control.GetLabel(4321),weather) | Substring(Control.GetLabel(4321),panel)] + !Skin.HasSetting(DisableWidgets)]</visible>
                <include>Animation_VisibleChangeDelayed</include>
            </control>
            <control type="image">
                <description>media info background image</description>
                <posx>0</posx>
                <posy>0</posy>
                <width>1920</width>
                <height>545</height>
                <texture flipy="true">home/nowplaying_shadow.png</texture>
                <include>Animation_VisibleChangeDelayed</include>
                <visible>[Player.HasAudio + !Skin.HasSetting(nohomepageMusicinfo)] | [Player.HasVideo + !Skin.HasSetting(homepageVideoinfo)] | [[Control.HasFocus(7000) | Substring(Control.GetLabel(4325),featured) | Substring(Control.GetLabel(4325),weather) | Substring(Control.GetLabel(4325),panel)] + !Skin.HasSetting(DisableWidgets)]</visible>
            </control>
        </control>
        <!-- Featured widget -->
        <include condition="Substring(Skin.String(widgetlist),featured) | Substring(Skin.String(widgetlist),panel)">HomePanelWidget</include>
        <include condition="Substring(Skin.String(widget2list),featured) | Substring(Skin.String(widget2list),panel)">HomePanelWidget2</include>
        <!-- Latest/Random Items -->
        <control type="group">
            <include>Animation_OpenCloseZoom</include>
            <include>RecentWidget</include>
            <include>RecentWidget2</include>
        </control>
        <include>PosterWidgetTrailerLabel</include>
        <!-- Library Totals -->
        <include>LibraryStats</include>
        <!-- Time Panel-->
        <include>TimePanel</include>
        <!-- RSS -->
        <include>RSSPanel</include>
        <control type="group">
            <include>FullscreenDimensions</include>
            <animation effect="slide" start="0,0" end="0,338" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(lowermainmenu)">Conditional</animation>
            <include>Animation_OpenCloseZoom</include>
            <control type="group">
                <animation effect="zoom" end="80" center="960,520" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                <!-- Submenu -->
                <control type="group" id="9001">
                    <posx>240</posx>
                    <posy>609</posy>
                    <animation effect="zoom" end="120" center="960,610" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                    <animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus(9010) + ![IntegerGreaterThan(Container(9010).NumItems,0) + Skin.HasSetting(showsubmenu)]">conditional</animation>
                    <animation effect="slide" start="0,0" end="0,-60" time="300" tween="cubic" easing="inout" condition="!Control.HasFocus(9010) + ![IntegerGreaterThan(Container(9010).NumItems,0) + Skin.HasSetting(showsubmenu)]">conditional</animation>
                    <control type="image">
                        <posx>70</posx>
                        <posy>3</posy>
                        <width>1300</width>
                        <height>87</height>
                        <texture>home/submenubar.png</texture>
                        <colordiffuse>$VAR[ExtendedHomeColorVar]</colordiffuse>
                    </control>
                    <include condition="Skin.HasSetting(submenufixedlist)">SubMenuFixedList</include>
                    <include condition="!Skin.HasSetting(submenufixedlist)">SubMenuWrapList</include>
                </control>
                <!-- Home OSD -->
                <control type="group">
                    <visible>Player.HasMedia + System.IdleTime(8) + !Control.HasFocus(8003)</visible>
                    <animation effect="zoom" end="125,100" center="960,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                    <posx>0</posx>
                    <posy>62</posy>
                    <width>1920</width>
                    <height>1080</height>
                    <animation effect="fade" start="0" end="100" time="750" condition="Player.HasAudio + System.IdleTime(8)">Conditional</animation>
                    <control type="progress">
                        <description>Progressbar</description>
                        <posx>0</posx>
                        <posy>452</posy>
                        <width>1920</width>
                        <height>96</height>
                        <info>Player.Progress</info>
                        <texturebg>osd/osd_progress_clear.png</texturebg>
                        <lefttexture>-</lefttexture>
                        <midtexture>osd/osd_progressmid.png</midtexture>
                        <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                        <righttexture>-</righttexture>
                        <overlaytexture>-</overlaytexture>
                    </control>
                </control>
                <!-- Home Menu Bar -->
                <control type="image">
                    <posx>0</posx>
                    <posy>453</posy>
                    <width>1920</width>
                    <height>225</height>
                    <texture>$VAR[HomeMenuBackVar]</texture>
                    <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
                    <animation effect="zoom" end="125,100" center="960,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                    <animation effect="fade" start="100" end="90" time="50" condition="Skin.HasSetting(glasshome) + ![Player.HasMedia + System.IdleTime(8)]">Conditional</animation>
                </control>
                <!-- Home OSD -->
                <control type="group">
                    <visible>Player.HasMedia + System.IdleTime(8)</visible>
                    <animation effect="fade" start="0" end="100" time="1050">Visible</animation>
                    <control type="label">
                        <posx>0</posx>
                        <posy>448</posy>
                        <width>1920</width>
                        <height>225</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font_MainClassic</font>
                        <textcolor>$VAR[HomeMenuTextFocusVar]</textcolor>
                        <shadowcolor>-</shadowcolor>
                        <label>$VAR[HomeOSDLabelVar]</label>
                    </control>
                </control>
                <!-- Home Menu -->
                <control type="button" id="8993">
                    <include>HiddenObject</include>
                    <onfocus>AlarmClock(WidgetMove,Control.Move(8000,1),00:07,silent,loop)</onfocus>
                    <onfocus>SetFocus(9000)</onfocus>
                </control>
                <control type="button" id="7993">
                    <include>HiddenObject</include>
                    <onfocus>AlarmClock(Widget2Move,Control.Move(7000,1),00:07,silent,loop)</onfocus>
                    <onfocus>SetFocus(9000)</onfocus>
                </control>
                <!--focus first widget-->
                <control type="button" id="4444">
                    <include>HiddenObject</include>
                    <onfocus condition="Control.IsVisible(5000)">SetFocus(5000)</onfocus>
                    <onfocus condition="Control.IsVisible(8998)">CancelAlarm(WidgetMove,true)</onfocus>
                    <onfocus condition="Control.IsVisible(8998)">SetFocus(8000,0)</onfocus>
                    <onfocus condition="Control.IsVisible(8998)">SetFocus(8000)</onfocus>
                    <onfocus condition="Substring(Container(9000).ListItem.Property(Widget),weather)">ActivateWindow(weather)</onfocus>
                    <onfocus condition="Substring(Container(9000).ListItem.Property(Widget),system)">ActivateWindow(settings)</onfocus>
                    <onfocus condition="[IsEmpty(Window(Home).Property(NextAired.1.Label)) + Substring(Control.GetLabel(4321),nextairedpanel)]">SetFocus(9000)</onfocus>
                    <onfocus condition="[IsEmpty(Window(Home).Property(WatchList_Movie.1.Label)) + Substring(Control.GetLabel(4321),inprogressmovies)]">SetFocus(9000)</onfocus>
                </control>
                <!--focus second widget-->
                <control type="button" id="4445">
                    <include>HiddenObject</include>
                    <onfocus condition="Control.IsVisible(6000)">SetFocus(6000)</onfocus>
                    <onfocus condition="Control.IsVisible(7998)">CancelAlarm(Widget2Move,true)</onfocus>
                    <onfocus condition="Control.IsVisible(7998)">SetFocus(7000,0)</onfocus>
                    <onfocus condition="Control.IsVisible(7998)">SetFocus(7000)</onfocus>
                    <onfocus condition="Substring(Container(9000).ListItem.Property(Widget2),weather)">ActivateWindow(weather)</onfocus>
                    <onfocus condition="Substring(Container(9000).ListItem.Property(Widget2),system)">ActivateWindow(settings)</onfocus>
                    <onfocus condition="[IsEmpty(Window(Home).Property(NextAired.1.Label)) + Substring(Control.GetLabel(4325),nextairedpanel)]">SetFocus(9000)</onfocus>
                    <onfocus condition="[IsEmpty(Window(Home).Property(WatchList_Movie.1.Label)) + Substring(Control.GetLabel(4325),inprogressmovies)]">SetFocus(9000)</onfocus>

                    </control>
                <include condition="Skin.HasSetting(mainmenufixedlist)">MainMenuFixedList</include>
                <include condition="!Skin.HasSetting(mainmenufixedlist)">MainMenuWrapList</include>
                <control type="group">
                    <animation effect="zoom" end="125,100" center="960,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                    <include>Furniture_ClassicHomeGradient</include>
                    <include>Neon_Home</include>
                </control>
            </control>
        </control>
        <!--Weather info-->
        <include condition="!IsEmpty(Weather.Plugin) + SubString(Skin.String(widgetlist),weather)">Weather_Widget</include>
        <include condition="!IsEmpty(Weather.Plugin) + SubString(Skin.String(widget2list),weather)">Weather_Widget2</include>
        <!-- Music Info -->
        <include condition="!Skin.HasSetting(nohomepageMusicinfo) | !Skin.HasSetting(homepageVideoinfo)">Furniture_HomeNowPlaying</include>
        <control type="group">
            <visible>Skin.HasSetting(DisableWidgets)</visible>
            <include>Animation_WindowFade200</include>
            <animation type="Visible" reversible="true">
                <effect type="zoom" start="150" end="100" center="960,540" time="500" tween="cubic" easing="out" />
                <effect type="fade" start="0" end="100" time="300" />
            </animation>
            <animation type="Hidden" reversible="true">
                <effect type="fade" start="100" end="0" time="300" />
                <effect type="zoom" start="100" end="130" center="960,540" time="300" tween="cubic" easing="in" />
            </animation>
            <posx>50</posx>
            <posy>50</posy>
            <control type="image">
                <posx>0</posx>
                <posy>0</posy>
                <width>170</width>
                <height>80</height>
                <texture>dialogs/dialog_back_shadow.png</texture>
                <visible>Skin.HasSetting(Glowbar_Home)</visible>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
            </control>
            <control type="image">
                <posx>0</posx>
                <posy>0</posy>
                <width>170</width>
                <height>80</height>
                <animation effect="fade" end="60" time="0" condition="true">Conditional</animation>
                <texture>dialogs/dialog_back.png</texture>
                <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
            </control>
            <control type="image">
                <posx>20</posx>
                <posy>20</posy>
                <width>35</width>
                <height>35</height>
                <texture>common/arrowback.png</texture>
                <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
            </control>
            <control type="label">
                <posx>65</posx>
                <posy>0</posy>
                <width>100</width>
                <height>74</height>
                <font>Font_Reg14</font>
                <include>detailcolornofocus</include>
                <aligny>center</aligny>
                <align>center</align>
                <label>$LOCALIZE[42264]</label>
                <fontcolor>white</fontcolor>
                <wrapmultiline>true</wrapmultiline>
            </control>
        </control>
        <control type="group">
            <control type="image">
                <include>FullscreenDimensions</include>
                <colordiffuse>CCFFFFFF</colordiffuse>
                <visible>Control.HasFocus(22222) | Control.HasFocus(22223)</visible>
                <include>Animation_VisibleChange400</include>
                <texture>common/black.png</texture>
            </control>
            <control type="image">
                <fadetime>600</fadetime>
                <include>FullscreenDimensions</include>
                <include>Animation_WindowFade250</include>
                <aspectratio align="center" aligny="top">keep</aspectratio>
                <texture background="true">$INFO[Container(5010).ListItem.Thumb]</texture>
                <animation effect="fade" time="500">Visible</animation>
                <animation effect="fade" time="500">Hidden</animation>
                <visible>Control.HasFocus(22222)</visible>
            </control>
            <control type="image">
                <fadetime>600</fadetime>
                <include>FullscreenDimensions</include>
                <include>Animation_WindowFade250</include>
                <aspectratio align="center" aligny="top">keep</aspectratio>
                <texture background="true">$INFO[Container(6010).ListItem.Thumb]</texture>
                <animation effect="fade" time="500">Visible</animation>
                <animation effect="fade" time="500">Hidden</animation>
                <visible>Control.HasFocus(22223)</visible>
            </control>
            <control type="button" id="22222">
                <include>HiddenObject</include>
                <onleft>Control.Move(5010,-1)</onleft>
                <onright>Control.Move(5010,1)</onright>
                <onup>Control.Move(5010,1)</onup>
                <ondown>Control.Move(5010,-1)</ondown>
                <onback>SetFocus(5010)</onback>
            </control>
            <control type="button" id="22223">
                <include>HiddenObject</include>
                <onleft>Control.Move(6010,-1)</onleft>
                <onright>Control.Move(6010,1)</onright>
                <onup>Control.Move(6010,1)</onup>
                <ondown>Control.Move(6010,-1)</ondown>
                <onback>SetFocus(6010)</onback>
            </control>
        </control>
    </controls>
</window>