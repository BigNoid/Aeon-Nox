<?xml version="1.0" encoding="utf-8"?>
<includes>
    <include name="InfoPane_Fanart_Movies">
        <control type="group">
            <visible>Container.Content(musicvideos) | [Container.Content(movies) + [[Skin.HasSetting(fanartinfopane) + Control.IsVisible(501)] | [Skin.HasSetting(fanartinfopane503) + Control.IsVisible(503)] | [Skin.HasSetting(fanartinfopane504) + Control.IsVisible(504)] | [Control.IsVisible(501) + Skin.HasSetting(fourthumbs)] | [Control.IsVisible(503) + Skin.HasSetting(fourthumbs503)] | [Control.IsVisible(504) + Skin.HasSetting(fourthumbs504)]]] |
				[Container.Content(tvshows) + !Skin.HasSetting(tvposterinfopane)] | Container.Content(seasons) | Container.Content(episodes)</visible>
            <posx>158</posx>
            <posy>63</posy>
            <animation effect="slide" start="0,0" end="472,0" time="0" easing="inout" tween="cubic" condition="[Container.Content(movies) + [[Control.IsVisible(501) + Skin.HasSetting(fourthumbs)] | [Control.IsVisible(503) + Skin.HasSetting(fourthumbs503)] | [Control.IsVisible(504) + Skin.HasSetting(fourthumbs504)]]] | [Container.Content(tvshows) + Skin.HasSetting(tvthumbsinfopane)]">Conditional</animation>
            <animation effect="fade" start="100" end="0" time="1100" condition="Player.HasVideo + [[Skin.HasSetting(fourthumbs) + Control.IsVisible(501)] | [Skin.HasSetting(fourthumbs503) + Control.IsVisible(503)] | [Skin.HasSetting(fourthumbs504) + Control.IsVisible(504)]]">Conditional</animation>
            <animation type="VisibleChange">
                <effect type="fade" start="0" end="100" delay="400" time="200" reversible="true" />
            </animation>
            <control type="group">
                <!--                 <include condition="System.HasAddon(script.moviesets) + [System.GetBool(videolibrary.groupmoviesets) | SubString(Container.FolderPath,videodb://1/7/)]">MovieSetsVisibility</include>
 -->
                <include>Animation_VisibleChange200</include>
                <control type="label">
                    <posy>-4</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail1Var]</label>
                </control>
                <control type="label">
                    <posy>30</posy>
                    <height>20</height>
                    <width>300</width>
                    <textcolor>white2</textcolor>
                    <scroll>true</scroll>
                    <label fallback="312577">$VAR[FanartPanelValue1Var]</label>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>-4</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail2Var]</label>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>30</posy>
                    <height>20</height>
                    <width>300</width>
                    <textcolor>white2</textcolor>
                    <scroll>true</scroll>
                    <label fallback="312577">$VAR[FanartPanelValue2Var]</label>
                </control>
                <control type="label">
                    <posy>67</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail3Var]</label>
                </control>
                <control type="label">
                    <posy>101</posy>
                    <height>20</height>
                    <width>300</width>
                    <textcolor>white2</textcolor>
                    <scroll>true</scroll>
                    <label fallback="312577">$VAR[FanartPanelValue3Var]</label>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>67</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail4Var]</label>
                </control>
                <control type="fadelabel">
                    <posx>352</posx>
                    <posy>101</posy>
                    <height>20</height>
                    <width>300</width>
                    <textcolor>white2</textcolor>
                    <scrollspeed>200</scrollspeed>
                    <pauseatend>3000</pauseatend>
                    <scrollout>false</scrollout>
                    <label>$INFO[ListItem.RatingAndVotes]</label>
                    <label>$LOCALIZE[13409] #$INFO[ListItem.Top250]</label>
                    <visible>!IsEmpty(ListItem.Top250)</visible>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>101</posy>
                    <height>20</height>
                    <width>300</width>
                    <textcolor>white2</textcolor>
                    <scroll>true</scroll>
                    <label fallback="312577">$VAR[FanartPanelValue4Var]</label>
                    <visible>IsEmpty(ListItem.Top250)</visible>
                </control>
                <control type="label">
                    <posy>138</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail5Var]</label>
                </control>
                <control type="label">
                    <posy>174</posy>
                    <height>20</height>
                    <width>300</width>
                    <textcolor>white2</textcolor>
                    <scroll>true</scroll>
                    <label fallback="312577">$VAR[FanartPanelValue5Var]</label>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>138</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail6Var]</label>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>174</posy>
                    <height>20</height>
                    <width>300</width>
                    <textcolor>white2</textcolor>
                    <scroll>true</scroll>
                    <label fallback="312577">$VAR[FanartPanelValue6Var]</label>
                </control>
                <control type="textbox">
                    <posy>226</posy>
                    <width>652</width>
                    <height>220</height>
                    <label>$VAR[FanartPanelPlotVar]</label>
                    <textcolor>white6</textcolor>
                    <align>justify</align>
                    <autoscroll delay="8000" time="5000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
                </control>
            </control>
            <!--             <include condition="System.HasAddon(script.moviesets) + [System.GetBool(videolibrary.groupmoviesets) | SubString(Container.FolderPath,videodb://1/7/)]">InfoPanelFanartMovieSetsLayout</include>
 -->
        </control>
    </include>
    <include name="ExtraThumbs">
        <control type="group">
            <visible>Container.Content(movies)</visible>
            <control type="group">
                <posx>161</posx>
                <posy>68</posy>
                <visible>[Skin.HasSetting(fourthumbs) + Control.IsVisible(501)] | [Skin.HasSetting(fourthumbs503) + Control.IsVisible(503)] | [Skin.HasSetting(fourthumbs504) + Control.IsVisible(504)]</visible>
                <animation type="VisibleChange">
                    <effect type="fade" start="0" end="100" delay="400" time="200" reversible="true" />
                </animation>
                <control type="image">
                    <posx>-6</posx>
                    <posy>-6</posy>
                    <width>391</width>
                    <height>220</height>
                    <aspectratio aligny="top">scale</aspectratio>
                    <fadetime>400</fadetime>
                    <texture fallback="fallback.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb3.jpg]</texture>
                    <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                    <bordersize>7</bordersize>
                </control>
                <control type="image">
                    <posx>-6</posx>
                    <posy>247</posy>
                    <width>391</width>
                    <height>220</height>
                    <aspectratio aligny="top">scale</aspectratio>
                    <fadetime>400</fadetime>
                    <texture fallback="fallback.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb4.jpg]</texture>
                    <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                    <bordersize>7</bordersize>
                </control>
            </control>
            <control type="group">
                <posx>1369</posx>
                <posy>68</posy>
                <visible>[Skin.HasSetting(fourthumbs) + Control.IsVisible(501)] | [Skin.HasSetting(fourthumbs503) + Control.IsVisible(503)] | [Skin.HasSetting(fourthumbs504) + Control.IsVisible(504)] | [Skin.HasSetting(extrathumbs) + Control.IsVisible(501)] | [Skin.HasSetting(extrathumbs503) + Control.IsVisible(503)] | [Skin.HasSetting(extrathumbs504) + Control.IsVisible(504)]</visible>
                <animation type="VisibleChange">
                    <effect type="fade" start="0" end="100" delay="400" time="200" reversible="true" />
                </animation>
                <control type="image">
                    <posx>-6</posx>
                    <posy>-6</posy>
                    <width>391</width>
                    <height>220</height>
                    <aspectratio aligny="top">scale</aspectratio>
                    <fadetime>400</fadetime>
                    <texture fallback="fallback.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb1.jpg]</texture>
                    <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                    <bordersize>7</bordersize>
                </control>
                <control type="image">
                    <posx>-6</posx>
                    <posy>247</posy>
                    <width>391</width>
                    <height>220</height>
                    <aspectratio aligny="top">scale</aspectratio>
                    <fadetime>400</fadetime>
                    <texture fallback="fallback.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb2.jpg]</texture>
                    <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                    <bordersize>7</bordersize>
                </control>
            </control>
        </control>
    </include>
    <include name="TVShowThumbs">
        <control type="group">
            <visible>[Container.Content(tvshows) + Skin.HasSetting(tvthumbsinfopane)]</visible>
            <animation type="VisibleChange">
                <effect type="fade" start="0" end="100" delay="400" time="200" reversible="true" />
            </animation>
            <control type="group">
                <posx>161</posx>
                <posy>68</posy>
                <control type="image">
                    <posx>-6</posx>
                    <posy>-6</posy>
                    <width>391</width>
                    <height>220</height>
                    <aspectratio align="center">keep</aspectratio>
                    <fadetime>400</fadetime>
                    <texture fallback="empty.png" background="true">$INFO[ListItem.Path,,character.png]</texture>
                </control>
                <control type="image">
                    <posx>-6</posx>
                    <posy>247</posy>
                    <width>391</width>
                    <height>220</height>
                    <aspectratio aligny="top">scale</aspectratio>
                    <fadetime>400</fadetime>
                    <texture fallback="fallback.png" background="true">$INFO[ListItem.Property(Fanart_Image)]</texture>
                    <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                    <bordersize>7</bordersize>
                </control>
            </control>
            <control type="group">
                <posx>1369</posx>
                <posy>68</posy>
                <control type="image">
                    <posx>-6</posx>
                    <posy>-6</posy>
                    <width>391</width>
                    <height>220</height>
                    <aspectratio aligny="top">keep</aspectratio>
                    <fadetime>400</fadetime>
                    <texture fallback="fallback.png" background="true">$INFO[ListItem.Path,,clearart.png]</texture>
                    <bordersize>7</bordersize>
                </control>
                <control type="image">
                    <posx>-6</posx>
                    <posy>247</posy>
                    <width>391</width>
                    <height>220</height>
                    <aspectratio aligny="top">keep</aspectratio>
                    <fadetime>400</fadetime>
                    <texture fallback="fallback.png" background="true">$INFO[ListItem.Path,,landscape.jpg]</texture>
                    <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                    <bordersize>7</bordersize>
                </control>
            </control>
        </control>
    </include>
    <include name="InfoPane_Poster_Movies">
        <control type="group">
            <visible>[Container.Content(movies) + [[Skin.HasSetting(posterinfopane) + Control.IsVisible(501)] | [Skin.HasSetting(posterinfopane503) + Control.IsVisible(503)] | [Skin.HasSetting(posterinfopane504) + Control.IsVisible(504)] | [Skin.HasSetting(extrathumbs) + Control.IsVisible(501)] | [Skin.HasSetting(extrathumbs503) + Control.IsVisible(503)] | [Skin.HasSetting(extrathumbs504) + Control.IsVisible(504)]]] | [Container.Content(tvshows) + Skin.HasSetting(tvposterinfopane)]]</visible>
            <animation type="VisibleChange">
                <effect type="fade" start="0" end="100" delay="400" time="200" reversible="true" />
            </animation>
            <control type="image">
                <posx>1400</posx>
                <posy>63</posy>
                <width>323</width>
                <height>470</height>
                <fadetime>200</fadetime>
                <texture background="true" diffuse="thumbs/movieposter_mask.png">$VAR[PosterVar2]</texture>
                <aspectratio scalediffuse="false" align="center">scale</aspectratio>
                <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                <bordersize>7</bordersize>
                <visible>[Container.Content(movies) + [[Skin.HasSetting(posterinfopane) + Control.IsVisible(501)] | [Skin.HasSetting(posterinfopane503) + Control.IsVisible(503)] | [Skin.HasSetting(posterinfopane504) + Control.IsVisible(504)]]] | [Container.Content(tvshows) + Skin.HasSetting(tvposterinfopane)]</visible>
            </control>
            <control type="image">
                <posx>1387.5</posx>
                <posy>50.5</posy>
                <width>348</width>
                <height>495</height>
                <fadetime>200</fadetime>
                <texture diffuse="thumbs/movieposter_mask.png">thumbs/thumb_glass.png</texture>
                <bordertexture border="19.5">thumbs/poster_shadow.png</bordertexture>
                <bordersize>19.5</bordersize>
                <visible>[Container.Content(movies) + [[Skin.HasSetting(posterinfopane) + Control.IsVisible(501)] | [Skin.HasSetting(posterinfopane503) + Control.IsVisible(503)] | [Skin.HasSetting(posterinfopane504) + Control.IsVisible(504)]]] | [Container.Content(tvshows) + Skin.HasSetting(tvposterinfopane)]</visible>
            </control>
            <control type="group">
                <posx>158</posx>
                <posy>60</posy>
                <!--                 <include condition="System.GetBool(videolibrary.groupmoviesets) + System.HasAddon(script.moviesets)">MovieSetsVisibility</include>
 -->
                <include>Animation_VisibleChange200</include>
                <control type="label">
                    <posy>-6</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail1Var]</label>
                </control>
                <control type="label">
                    <posy>28</posy>
                    <height>20</height>
                    <width>420</width>
                    <scroll>true</scroll>
                    <label fallback="312577">$VAR[FanartPanelValue1Var]</label>
                </control>
                <control type="label">
                    <posy>64</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail2Var]</label>
                </control>
                <control type="label">
                    <posy>98</posy>
                    <height>20</height>
                    <width>420</width>
                    <scroll>true</scroll>
                    <label fallback="312577">$VAR[FanartPanelValue2Var]</label>
                </control>
                <control type="label">
                    <posy>132</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[PosterPanelDetail3Var]</label>
                </control>
                <control type="label">
                    <posy>166</posy>
                    <height>20</height>
                    <width>420</width>
                    <scroll>true</scroll>
                    <label fallback="312577">$VAR[PosterPanelValue3Var]</label>
                </control>
                <control type="label">
                    <posy>198</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail4Var]</label>
                </control>
                <control type="fadelabel">
                    <posy>228</posy>
                    <height>20</height>
                    <width>422</width>
                    <pauseatend>3000</pauseatend>
                    <scrollout>false</scrollout>
                    <label fallback="312577">$VAR[PosterPanelValue4Var]</label>
                </control>
                <control type="label">
                    <posy>264</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[PosterPanelDetail5Var]</label>
                </control>
                <control type="label">
                    <posy>298</posy>
                    <height>20</height>
                    <width>300</width>
                    <scroll>true</scroll>
                    <label fallback="312577">$VAR[PosterPanelValue5Var]</label>
                </control>
                <control type="label">
                    <posy>330</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[PosterPanelDetail6Var]</label>
                </control>
                <control type="label">
                    <posy>364</posy>
                    <height>20</height>
                    <width>420</width>
                    <scroll>true</scroll>
                    <label fallback="312577">$VAR[PosterPanelValue6Var]</label>
                </control>
                <control type="label">
                    <posy>400</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[PosterPanelDetail7Var]</label>
                </control>
                <control type="label">
                    <posy>434</posy>
                    <height>20</height>
                    <width>420</width>
                    <scroll>true</scroll>
                    <label fallback="31452">$VAR[PosterPanelValue7Var]</label>
                </control>
                <control type="textbox">
                    <posx>480</posx>
                    <posy>2</posy>
                    <width>657</width>
                    <height>404</height>
                    <label fallback="312577">$VAR[FanartPanelPlotVar]</label>
                    <align>justify</align>
                    <textcolor>white6</textcolor>
                    <animation effect="fade" start="100" end="0" time="1100" condition="Player.HasVideo">Conditional</animation>
                    <autoscroll delay="8000" time="5000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
                    <visible>!Control.IsVisible(504) + !Control.IsVisible(503)</visible>
                    <visible>[[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]]</visible>
                </control>
                <control type="textbox">
                    <posx>480</posx>
                    <posy>2</posy>
                    <width>657</width>
                    <height>440</height>
                    <label fallback="312577">$VAR[FanartPanelPlotVar]</label>
                    <align>justify</align>
                    <textcolor>white6</textcolor>
                    <animation effect="fade" start="100" end="0" time="1100" condition="Player.HasVideo">Conditional</animation>
                    <autoscroll delay="8000" time="5000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
                    <visible>Control.IsVisible(504) + [[Skin.HasSetting(noflowdvd) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowdvdtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]]</visible>
                </control>
                <control type="textbox">
                    <posx>480</posx>
                    <posy>2</posy>
                    <width>657</width>
                    <height>472</height>
                    <label fallback="312577">$VAR[FanartPanelPlotVar]</label>
                    <align>justify</align>
                    <textcolor>white6</textcolor>
                    <animation effect="fade" start="100" end="0" time="1100" condition="Player.HasVideo">Conditional</animation>
                    <autoscroll delay="8000" time="5000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
                    <visible>Control.IsVisible(504) + ![[Skin.HasSetting(noflowdvd) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowdvdtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]]</visible>
                </control>
                <control type="textbox">
                    <posx>480</posx>
                    <posy>2</posy>
                    <width>657</width>
                    <height>472</height>
                    <visible>!Control.IsVisible(504)</visible>
                    <label fallback="312577">$VAR[FanartPanelPlotVar]</label>
                    <align>justify</align>
                    <textcolor>white6</textcolor>
                    <animation effect="fade" start="100" end="0" time="1100" condition="Player.HasVideo">Conditional</animation>
                    <autoscroll delay="8000" time="5000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
                    <visible>![[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]] | Control.IsVisible(503)</visible>
                </control>
            </control>
            <!--             <include condition="System.GetBool(videolibrary.groupmoviesets) + System.HasAddon(script.moviesets)">InfoPanelPosterMovieSetsLayout</include>
 -->
        </control>
    </include>
    <include name="Furniture_Showcase">
        <control type="group" id="8857">
            <include>Animation_OpenClose_Furniture</include>
            <include>Animation_VisibleChange400</include>
            <animation effect="slide" start="0,0" end="0,400" time="700" easing="out" tween="quadratic" condition="Control.HasFocus(109)">Conditional</animation>
            <visible>![Control.IsVisible(516) | Control.IsVisible(514) | [Control.IsVisible(518) + Skin.HasSetting(fspanelbackground)] | [Control.IsVisible(500) + Skin.HasSetting(wallfullscreen)] | Control.IsVisible(511) | Control.IsVisible(506) | Control.IsVisible(8858) | [Skin.HasSetting(addonwallaltbackground) + Control.IsVisible(512)]]</visible>
            <control type="image">
                <posy>472</posy>
                <width>1920</width>
                <height>608</height>
                <texture>views/showcase_floor.png</texture>
                <colordiffuse>$VAR[ExtendedColorDiffuseVar]</colordiffuse>
            </control>
            <control type="group">
                <control type="group" id="8860">
                    <visible>![Control.IsVisible(512) | Control.IsVisible(510)  | Control.IsVisible(550)]</visible>
                    <animation effect="slide" time="1000" start="1200,0" end="0,0" tween="cubic" easing="out">WindowOpen</animation>
                    <animation effect="slide" time="1000" end="1200,0" start="0,0" tween="cubic" easing="out">WindowClose</animation>
                    <control type="image">
                        <posx>216</posx>
                        <posy>874</posy>
                        <width>1490</width>
                        <height>206</height>
                        <texture>views/showcase_spot.png</texture>
                        <animation effect="fade" start="100" end="50" time="300" condition="!Control.IsVisible(52) + !Control.IsVisible(53) + [ControlGroup(9003).HasFocus | Control.HasFocus(60) | Control.HasFocus(70) | Control.HasFocus(62) | Control.HasFocus(61)]">Conditional</animation>
                        <animation effect="slide" time="200" start="0" end="-585" tween="cubic" easing="out" condition="Control.IsVisible(57)">Conditional</animation>
                        <animation effect="slide" time="200" start="0" end="-120" tween="cubic" easing="out" condition="Control.IsVisible(57) + Skin.HasSetting(smallshiftview)">Conditional</animation>
                        <animation effect="slide" time="200" start="0" end="185" tween="cubic" easing="out" condition="Control.IsVisible(52) | Control.IsVisible(53)">Conditional</animation>
                        <colordiffuse>$VAR[SpotColorVar]</colordiffuse>
                        <visible>![Control.IsVisible(500) + Skin.HasTheme(Lite_Floor)]</visible>
                    </control>
                    <control type="image">
                        <posx>-600</posx>
                        <posy>874</posy>
                        <width>2490</width>
                        <height>226</height>
                        <colordiffuse>$VAR[SpotColorVar]</colordiffuse>
                        <texture>views/showcase_spot.png</texture>
                        <visible>Control.IsVisible(50) + !Skin.HasTheme(Lite_Floor)</visible>
                    </control>
                    <control type="image">
                        <width>880</width>
                        <height>206</height>
                        <posx>1040</posx>
                        <posy>874</posy>
                        <texture>views/list_spot.png</texture>
                        <colordiffuse>$VAR[SpotColorVar]</colordiffuse>
                        <animation effect="slide" time="200" start="0" end="190" tween="cubic" easing="out" condition="Control.IsVisible(52) | Control.IsVisible(53)">Conditional</animation>
                        <animation effect="slide" time="200" start="0" end="60" tween="cubic" easing="out" condition="Control.IsVisible(50) + Window.IsActive(musiclibrary)">Conditional</animation>
                        <visible>[Control.IsVisible(50) | Control.IsVisible(52) | Control.IsVisible(53)]</visible>
                        <visible>!Container.Content(years) + !Container.Content(playlists)</visible>
                    </control>
                </control>
                <control type="group">
                    <visible>![Control.IsVisible(510) | Control.IsVisible(57) | Control.IsVisible(550)]</visible>
                    <visible>!Control.HasFocus(109)</visible>
                    <animation effect="slide" start="0,0" end="0,-400" time="700" easing="out" tween="quadratic" condition="Control.HasFocus(109)">Conditional</animation>
                    <include>Animation_VisibleChange400</include>
                    <control type="image">
                        <width>696</width>
                        <height>1080</height>
                        <texture>views/showcase_vignette.png</texture>
                        <colordiffuse>vignette</colordiffuse>
                        <visible>true</visible>
                        <animation effect="slide" start="0" end="-180" reversible="true" condition="Control.IsVisible(512)">Conditional</animation>
                        <animation effect="slide" start="0" end="-105" reversible="true" condition="Control.IsVisible(500)">Conditional</animation>
                        <animation type="Conditional" condition="Control.HasFocus(110)">
                            <effect type="fade" start="100" end="0" time="400" easing="inout" tween="cubic" />
                            <effect type="slide" start="0,0" end="-696,0" time="400" easing="inout" tween="cubic" />
                        </animation>
                    </control>
                    <control type="image">
                        <posx>1224</posx>
                        <width>696</width>
                        <height>1080</height>
                        <visible>true</visible>
                        <colordiffuse>vignette</colordiffuse>
                        <texture flipx="true">views/showcase_vignette.png</texture>
                        <animation effect="slide" start="0" end="180" reversible="true" condition="Control.IsVisible(512)">Conditional</animation>
                        <animation effect="slide" start="0" end="105" reversible="true" condition="Control.IsVisible(500)">Conditional</animation>
                        <animation type="Conditional" condition="Control.HasFocus(110)">
                            <effect type="fade" start="100" end="0" time="400" easing="inout" tween="cubic" />
                            <effect type="slide" start="0,0" end="696,0" time="400" easing="inout" tween="cubic" />
                        </animation>
                    </control>
                </control>
                <control type="group">
                    <include>Animation_OpenClose_Furniture</include>
                    <visible>[Control.IsVisible(518) + !Skin.HasSetting(fspanelfanart)]| Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(50) | Control.IsVisible(500) | [Control.IsVisible(512) + !Skin.HasSetting(addonwallaltbackground)] | Control.IsVisible(500) | Control.IsVisible(550)| Control.IsVisible(508)</visible>
                    <control type="image">
                        <width>1920</width>
                        <height>206</height>
                        <posy>874</posy>
                        <texture>views/panel_spot.png</texture>
                        <colordiffuse>$VAR[SpotColorVar2]</colordiffuse>
                        <animation effect="zoom" start="0,874,1920,206" end="0,874,2020,206" time="0" reversible="false" condition="Control.IsVisible(518)">Conditional</animation>
                    </control>
                </control>
            </control>
            <include>Neon_Floor</include>
        </control>
        <control type="group" id="8858">
            <posy>105</posy>
            <visible>[Control.IsVisible(503) + [Container.Content(tvshows) | Container.Content(movies) | Container.Content(artists)] + [Skin.HasSetting(landscapelogo) | Skin.HasSetting(landscapeonelogo)] + Skin.HasSetting(altfloor)]</visible>
            <include>Animation_CommonFade</include>
            <animation effect="slide" time="200" start="0,0" end="0,100" tween="cubic" easing="out" condition="Skin.HasSetting(landscapeonelogo)">Conditional</animation>
            <control type="image">
                <include>FullscreenDimensions</include>
                <texture>views/logo_back.png</texture>
                <animation effect="fade" start="100" end="80" time="50" condition="Skin.HasTheme(White)">Conditional</animation>
                <colordiffuse>black</colordiffuse>
            </control>
        </control>
    </include>
    <include name="PanelSpot">
        <control type="image">
            <width>1920</width>
            <height>206</height>
            <posy>874</posy>
            <texture>views/panel_spot.png</texture>
            <colordiffuse>$VAR[SpotColorVar2]</colordiffuse>
        </control>
    </include>
    <include name="SecondLabelFloor">
        <control type="label">
            <posx>510</posx>
            <posy>1050</posy>
            <width>900</width>
            <align>center</align>
            <aligny>center</aligny>
            <font>Font_Info_Caps</font>
            <textcolor>floor</textcolor>
            <shadowcolor>floorshadow</shadowcolor>
            <visible>!Control.HasFocus(61)</visible>
            <include>Animation_VisibleChange400</include>
            <label>[UPPERCASE]$VAR[SecondLabelVar][/UPPERCASE]</label>
        </control>
    </include>
    <include name="FirstLabelFloor">
        <control type="label">
            <posx>510</posx>
            <posy>1016</posy>
            <width>900</width>
            <align>center</align>
            <aligny>center</aligny>
            <font>Font_ShowcaseMainLabel2_Caps</font>
            <scroll>true</scroll>
            <scrollspeed>30</scrollspeed>
            <textcolor>floor</textcolor>
            <shadowcolor>floorshadow</shadowcolor>
            <label>[UPPERCASE]$VAR[FirstLabelVar][/UPPERCASE]</label>
        </control>
    </include>
    <include name="FloorLabels">
        <control type="group">
            <visible>[Control.IsVisible(503) + Skin.HasSetting(landscapeonelogo) + !Container.Content(episodes)] | Control.IsVisible(509) | [Control.IsVisible(500) + !StringCompare(Container.FolderName,youtube)] | Control.IsVisible(508) | Control.IsVisible(513) | Control.IsVisible(504) | Control.IsVisible(501)</visible>
            <include>dialogeffect</include>
            <control type="group">
                <animation effect="fade" start="0" end="100" time="100" delay="100" reversible="false">Visible</animation>
                <animation effect="fade" start="100" end="0" time="0" delay="0" reversible="false">Hidden</animation>
                <visible>[Control.IsVisible(8822) + !Container.OnNext + !Container.OnPrevious + Stringcompare(Control.GetLabel(8822),empty.png)] | !Control.IsVisible(8822) | Container.Content(seasons) | Container.Content(albums)</visible>
                <include>SecondLabelFloor</include>
                <include>FirstLabelFloor</include>
            </control>
        </control>
    </include>
    <include name="Furniture_DarkGradient">
        <control type="image">
            <posy>1012</posy>
            <width>1920</width>
            <height>72</height>
            <texture>views/showcase_gradient.png</texture>
            <include>Animation_CommonFade</include>
            <visible>[Control.IsVisible(8857) | Control.IsVisible(8860)] + ![Control.IsVisible(518) | Control.IsVisible(57) | Control.IsVisible(511) | Control.IsVisible(516) | Control.IsVisible(514) | Control.IsVisible(506)  | Control.IsVisible(550)]</visible>
            <animation effect="slide" time="200" start="0" end="1440" tween="cubic" easing="out" condition="Control.IsVisible(510)">Conditional</animation>
            <animation effect="slide" time="200" start="0" end="-770" tween="cubic" easing="out" condition="Control.IsVisible(512)">Conditional</animation>
        </control>
        <control type="image" id="4050">
            <texture>-</texture>
            <visible>Container.Scrolling</visible>
            <animation effect="fade" start="0" end="100" time="0" delay="3000">Visible</animation>
            <animation effect="fade" time="1000">Hidden</animation>
        </control>
        <control type="scrollbar" id="61">
            <posx>458</posx>
            <posy>1065</posy>
            <visible>Control.IsVisible(509) | Control.IsVisible(500) | Control.IsVisible(508) | Control.IsVisible(500) | Control.IsVisible(513) | Control.IsVisible(504) | Control.IsVisible(501) | Control.IsVisible(57) | Control.IsVisible(510) | Control.IsVisible(503)</visible>
            <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
            <!--             <showonepage>true</showonepage>
 -->
            <animation effect="fade" start="100" end="0" time="500" condition="![Control.HasFocus(61) | Control.IsVisible(4050)]">Conditional</animation>
            <onup>50</onup>
            <ondown condition="!Control.IsVisible(500)">109</ondown>
            <ondown condition="Control.IsVisible(500)">50</ondown>
        </control>
        <control type="image">
            <posy>924</posy>
            <width>1920</width>
            <height>224</height>
            <texture>home/homemenu_gradient.png</texture>
            <visible>!Skin.HasTheme(Lite_Floor) + [Control.IsVisible(57) | Control.IsVisible(550)]</visible>
        </control>
        <control type="button" id="109">
            <posx>-20</posx>
            <posy>-20</posy>
            <width>1</width>
            <height>1</height>
            <label>-</label>
            <font>-</font>
            <onup>50</onup>
            <ondown>50</ondown>
            <onleft>50</onleft>
            <onright>50</onright>
            <onclick>SetFocus(50)</onclick>
            <onback>50</onback>
            <texturenofocus>-</texturenofocus>
            <texturefocus>-</texturefocus>
        </control>
        <control type="group">
            <visible>Control.HasFocus(109)</visible>
            <include>Animation_WindowFade200</include>
            <animation type="Visible" reversible="true">
                <effect type="zoom" start="150" end="100" center="960,540" time="500" tween="cubic" easing="out" />
                <effect type="fade" start="0" end="100" time="300" />
            </animation>
            <animation type="Hidden" reversible="true">
                <effect type="fade" start="100" end="0" time="300" />
                <effect type="zoom" start="100" end="130" center="960,540" time="300" tween="cubic" easing="in" />
            </animation>
            <posx>20</posx>
            <posy>-600</posy>
            <control type="image">
                <width>130</width>
                <height>80</height>
                <include>PanelGlowFade</include>
                <texture>dialogs/dialog_back_shadow.png</texture>
                <visible>!Skin.HasSetting(DisableGlowbar)</visible>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
            </control>
            <control type="image">
                <width>130</width>
                <height>80</height>
                <animation effect="fade" end="60" time="0" condition="true">Conditional</animation>
                <texture>dialogs/dialog_back.png</texture>
                <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
            </control>
            <control type="label">
                <posx>15</posx>
                <width>100</width>
                <height>74</height>
                <font>Font_Reg12</font>
                <include>detailcolornofocus</include>
                <aligny>center</aligny>
                <align>center</align>
                <label>42288</label>
                <fontcolor>white</fontcolor>
                <wrapmultiline>true</wrapmultiline>
            </control>
        </control>
    </include>
    <include name="Furniture_Glow">
        <control type="image">
            <visible>!Control.HasFocus(109)</visible>
            <include>Animation_OpenClose_Furniture</include>
            <include>Animation_VisibleChange400</include>
            <visible>![Control.IsVisible(516) | Control.IsVisible(514) | Control.IsVisible(511) | Control.IsVisible(506) | Control.IsVisible(8858) | [Skin.HasSetting(addonwallaltbackground) + Control.IsVisible(512)]]</visible>
            <posy>-100</posy>
            <width>1920</width>
            <height>608</height>
            <texture flipy="true">views/showcase_glow.png</texture>
            <colordiffuse>$VAR[ExtendedColorDiffuseVar]</colordiffuse>
            <include>Animation_VisibleChange400</include>
            <visible>Skin.HasSetting(ExtendedGlowMode) + ![Control.IsVisible(518) + Skin.HasSetting(fspanelbackground)]</visible>
        </control>
    </include>
    <include name="WallPanel">
        <control type="group">
            <include>Animation_Widgets</include>
            <visible>[Control.IsVisible(512) + !Skin.HasSetting(addonwallaltbackground)] | [Control.IsVisible(500) + !Skin.HasSetting(wallfullscreen)]</visible>
            <control type="image">
                <posx>112</posx>
                <posy>68</posy>
                <width>1695</width>
                <height>1038</height>
                <texture>wall/wall_bg_glow.png</texture>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                <visible>!Skin.HasSetting(DisableGlowbar)</visible>
                <include>PanelGlowFade</include>
                <animation effect="zoom" start="112,68,1695,1038" end="38,68,1845,1038" time="300" reversible="true" condition="Control.IsVisible(512)">Conditional</animation>
            </control>
            <control type="image">
                <posx>112</posx>
                <posy>68</posy>
                <width>1695</width>
                <height>1038</height>
                <texture>wall/wall_bg.png</texture>
                <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
                <animation effect="zoom" start="112,68,1695,1038" end="38,68,1845,1038" time="300" reversible="true" condition="Control.IsVisible(512)">Conditional</animation>
            </control>
            <control type="image">
                <posx>112</posx>
                <posy>68</posy>
                <width>1695</width>
                <height>1038</height>
                <texture>wall/wall_bg_reflection.png</texture>
                <animation effect="zoom" start="112,68,1695,1038" end="38,68,1845,1038" time="300" reversible="true" condition="Control.IsVisible(512)">Conditional</animation>
            </control>
            <include condition="Skin.HasSetting(effect_bg)">BG_Effect_Wall_Panel</include>
        </control>
    </include>
    <!--Includes for Wall viewtypes-->
    <include name="WallArrows">
        <control type="group">
            <visible>!Skin.HasSetting(wallfullscreen)</visible>
            <include>Animation_VisibleChange400</include>
            <visible>[!Skin.HasSetting(WallVertical) + Control.IsVisible(500) + !Window.IsActive(musiclibrary)] | [!Skin.HasSetting(WallMusicVertical) + Control.IsVisible(500) + Window.IsActive(musiclibrary)]</visible>
            <control type="image">
                <posx>86</posx>
                <posy>150</posy>
                <width>30</width>
                <height>786</height>
                <texture>wall/wall_arrow.png</texture>
                <colordiffuse>$VAR[TitleColorVar]</colordiffuse>
                <animation effect="slide" start="-150" end="0" delay="800" time="400" easing="out" tween="cubic">WindowOpen</animation>
                <animation effect="fade" start="100" end="0" time="400" condition="Container(560).Column(0) + !ControlGroup(9000).HasFocus()">Conditional</animation>
            </control>
            <control type="image">
                <posx>1804</posx>
                <posy>150</posy>
                <width>30</width>
                <height>786</height>
                <texture flipx="true">wall/wall_arrow.png</texture>
                <colordiffuse>$VAR[TitleColorVar]</colordiffuse>
                <animation effect="slide" start="150" end="0" delay="800" time="400" easing="out" tween="cubic">WindowOpen</animation>
                <animation effect="fade" start="100" end="0" time="400" condition="Container(560).Column(8) + !ControlGroup(9000).HasFocus()">Conditional</animation>
            </control>
        </control>
    </include>
    <include name="OverlayVisibility-7">
        <texture>$INFO[ListItem(-7).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-7).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-7).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-7).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-7).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-7).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-6">
        <texture>$INFO[ListItem(-6).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-6).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-6).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-6).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-6).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-6).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-5">
        <texture>$INFO[ListItem(-5).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-5).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-5).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-5).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-5).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-5).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-4">
        <texture>$INFO[ListItem(-4).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-4).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-4).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-4).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-4).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-4).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-3">
        <texture>$INFO[ListItem(-3).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-3).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-3).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-3).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-3).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-3).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-2">
        <texture>$INFO[ListItem(-2).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-2).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-2).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-2).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-2).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-2).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-1">
        <texture>$INFO[ListItem(-1).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-1).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-1).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-1).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-1).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-1).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility0">
        <texture>$INFO[ListItem(0).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(0).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(0).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(0).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(0).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(0).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility1">
        <texture>$INFO[ListItem(1).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(1).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(1).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(1).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(1).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(1).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility2">
        <texture>$INFO[ListItem(2).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(2).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(2).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(2).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(2).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(2).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility3">
        <texture>$INFO[ListItem(3).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(3).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(3).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(3).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(3).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(3).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility4">
        <texture>$INFO[ListItem(4).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(4).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(4).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(4).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(4).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(4).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility5">
        <texture>$INFO[ListItem(5).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(5).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(5).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(5).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(5).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(5).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility6">
        <texture>$INFO[ListItem(6).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(6).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(6).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(6).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(6).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(6).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility7">
        <texture>$INFO[ListItem(7).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(7).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(7).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(7).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(7).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(7).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility8">
        <texture>$INFO[ListItem(8).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(8).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(8).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(8).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(8).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(8).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility9">
        <texture>$INFO[ListItem(9).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(9).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(9).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(9).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(9).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(9).Title)]]]]</visible>
    </include>
    <include name="ReloadWindowOnClick">
        <onclick condition="Window.IsActive(addonbrowser)">SetProperty(activewindow,addons,home)</onclick>
        <onclick condition="Window.IsActive(musicfiles)">SetProperty(activewindow,musicfiles,home)</onclick>
        <onclick condition="Window.IsActive(musiclibrary)">SetProperty(activewindow,musiclibrary,home)</onclick>
        <onclick condition="Window.IsActive(musicplaylist)">SetProperty(activewindow,musicplaylist,home)</onclick>
        <onclick condition="Window.IsActive(videoplaylist)">SetProperty(activewindow,videoplaylist,home)</onclick>
        <onclick condition="Window.IsActive(videos)">SetProperty(activewindow,videos,home)</onclick>
        <onclick condition="Window.IsActive(programs)">SetProperty(activewindow,programs,home)</onclick>
        <onclick>SetProperty(containerpath,$INFO[Container.FolderPath],home)</onclick>
        <onclick>Dialog.Close(1126)</onclick>
        <onclick>ReplaceWindow(1141)</onclick>
    </include>
</includes>