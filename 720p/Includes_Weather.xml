<includes>
  <include name="weatherwidgetback">
    <control type="image">
      <texture>keyboard/numeric_back.png</texture>
      <colordiffuse>$INFO[Skin.String(diffuse_home)]</colordiffuse>
      <posx>0</posx>
      <posy>0</posy>
      <width>189</width>
      <height>263</height>
    </control>
  </include>
  <include name="Standard_WeatherWidgetDay0">
    <control type="group">
      <include>weatherwidgetback</include>
      <control type="label">
        <description>Day label</description>
        <posx>0</posx>
        <posy>207</posy>
        <width>189</width>
        <height>35</height>
        <font>Font_Bold20</font>
        <info>Window(weather).Property(Day0.Title)</info>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="label">
        <description>conditions label</description>
        <posx>25</posx>
        <posy>30</posy>
        <width>140</width>
        <height>20</height>
        <info>Window(weather).Property(Day0.Outlook)</info>
        <font>Font_Info</font>
        <scroll>true</scroll>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="image">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <info>Window(weather).Property(Day0.OutlookIcon)</info>
        <aspectratio align="center">keep</aspectratio>
        <visible>!Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="multiimage">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <timeperimage>75</timeperimage>
        <randomize>false</randomize>
        <fadetime>0</fadetime>
        <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window(weather).Property(Day0.FanartCode)]</imagepath>
        <aspectratio align="right">keep</aspectratio>
        <visible>Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="label">
        <description>high label</description>
        <posx>93</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[419] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>high value</description>
        <posx>100</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Day0.HighTemp))</visible>
        <label>$INFO[Window(weather).Property(Day0.HighTemp)] $INFO[System.TemperatureUnits]</label>
      </control>
      <control type="label">
        <description>low label</description>
        <posx>93</posx>
        <posy>170</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[418] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>low value</description>
        <posx>100</posx>
        <posy>170</posy>
        <height>35</height>
        <width>95</width>
        <label>$INFO[Window(weather).Property(Day0.LowTemp)] $INFO[System.TemperatureUnits]</label>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Day0.LowTemp))</visible>
      </control>
    </control>
  </include>
  <include name="Standard_WeatherWidgetDay1">
    <control type="group">
      <include>weatherwidgetback</include>
      <control type="label">
        <description>Day label</description>
        <posx>0</posx>
        <posy>207</posy>
        <width>189</width>
        <height>35</height>
        <font>Font_Bold20</font>
        <info>Window(weather).Property(Day1.Title)</info>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="label">
        <description>conditions label</description>
        <posx>25</posx>
        <posy>30</posy>
        <width>140</width>
        <height>20</height>
        <info>Window(weather).Property(Day1.Outlook)</info>
        <font>Font_Info</font>
        <scroll>true</scroll>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="image">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <info>Window(weather).Property(Day1.OutlookIcon)</info>
        <aspectratio align="center">keep</aspectratio>
        <visible>!Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="multiimage">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <timeperimage>75</timeperimage>
        <randomize>false</randomize>
        <fadetime>0</fadetime>
        <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window(weather).Property(Day1.FanartCode)]</imagepath>
        <aspectratio align="right">keep</aspectratio>
        <visible>Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="label">
        <description>high label</description>
        <posx>93</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[419] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>high value</description>
        <posx>100</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Day1.HighTemp))</visible>
        <label>$INFO[Window(weather).Property(Day1.HighTemp)] $INFO[System.TemperatureUnits]</label>
      </control>
      <control type="label">
        <description>low label</description>
        <posx>93</posx>
        <posy>170</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[418] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>low value</description>
        <posx>100</posx>
        <posy>170</posy>
        <height>35</height>
        <width>95</width>
        <label>$INFO[Window(weather).Property(Day1.LowTemp)] $INFO[System.TemperatureUnits]</label>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Day1.LowTemp))</visible>
      </control>
    </control>
  </include>
  <include name="Standard_WeatherWidgetDay2">
    <control type="group">
      <include>weatherwidgetback</include>
      <control type="label">
        <description>Day label</description>
        <posx>0</posx>
        <posy>207</posy>
        <width>189</width>
        <height>35</height>
        <font>Font_Bold20</font>
        <info>Window(weather).Property(Day2.Title)</info>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="label">
        <description>conditions label</description>
        <posx>25</posx>
        <posy>30</posy>
        <width>140</width>
        <height>20</height>
        <info>Window(weather).Property(Day2.Outlook)</info>
        <font>Font_Info</font>
        <scroll>true</scroll>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="image">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <info>Window(weather).Property(Day2.OutlookIcon)</info>
        <aspectratio align="center">keep</aspectratio>
        <visible>!Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="multiimage">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <timeperimage>75</timeperimage>
        <randomize>false</randomize>
        <fadetime>0</fadetime>
        <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window(weather).Property(Day2.FanartCode)]</imagepath>
        <aspectratio align="right">keep</aspectratio>
        <visible>Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="label">
        <description>high label</description>
        <posx>93</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[419] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>high value</description>
        <posx>100</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Day2.HighTemp))</visible>
        <label>$INFO[Window(weather).Property(Day2.HighTemp)] $INFO[System.TemperatureUnits]</label>
      </control>
      <control type="label">
        <description>low label</description>
        <posx>93</posx>
        <posy>170</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[418] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>low value</description>
        <posx>100</posx>
        <posy>170</posy>
        <height>35</height>
        <width>95</width>
        <label>$INFO[Window(weather).Property(Day2.LowTemp)] $INFO[System.TemperatureUnits]</label>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Day2.LowTemp))</visible>
      </control>
    </control>
  </include>
  <include name="Standard_WeatherWidgetDay3">
    <control type="group">
      <include>weatherwidgetback</include>
      <control type="label">
        <description>Day label</description>
        <posx>0</posx>
        <posy>207</posy>
        <width>189</width>
        <height>35</height>
        <font>Font_Bold20</font>
        <info>Window(weather).Property(Day3.Title)</info>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="label">
        <description>conditions label</description>
        <posx>25</posx>
        <posy>30</posy>
        <width>140</width>
        <height>20</height>
        <info>Window(weather).Property(Day3.Outlook)</info>
        <font>Font_Info</font>
        <scroll>true</scroll>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="image">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <info>Window(weather).Property(Day3.OutlookIcon)</info>
        <aspectratio align="center">keep</aspectratio>
        <visible>!Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="multiimage">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <timeperimage>75</timeperimage>
        <randomize>false</randomize>
        <fadetime>0</fadetime>
        <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window(weather).Property(Day3.FanartCode)]</imagepath>
        <aspectratio align="right">keep</aspectratio>
        <visible>Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="label">
        <description>high label</description>
        <posx>93</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[419] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>high value</description>
        <posx>100</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Day3.HighTemp))</visible>
        <label>$INFO[Window(weather).Property(Day3.HighTemp)] $INFO[System.TemperatureUnits]</label>
      </control>
      <control type="label">
        <description>low label</description>
        <posx>93</posx>
        <posy>170</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[418] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>low value</description>
        <posx>100</posx>
        <posy>170</posy>
        <height>35</height>
        <width>95</width>
        <label>$INFO[Window(weather).Property(Day3.LowTemp)] $INFO[System.TemperatureUnits]</label>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Day3.LowTemp))</visible>
      </control>
    </control>
  </include>
  <include name="Plus_WeatherWidgetDay1">
    <control type="group">
      <include>weatherwidgetback</include>
      <control type="label">
        <description>Day label</description>
        <posx>0</posx>
        <posy>207</posy>
        <width>189</width>
        <height>35</height>
        <font>Font_Bold20</font>
        <info>Window(weather).Property(Daily.1.LongDay)</info>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="label">
        <description>conditions label</description>
        <posx>25</posx>
        <posy>30</posy>
        <width>140</width>
        <height>20</height>
        <info>Window(weather).Property(Daily.1.Outlook)</info>
        <font>Font_Info</font>
        <scroll>true</scroll>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="image">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <info>Window(weather).Property(Daily.1.OutlookIcon)</info>
        <aspectratio align="center">keep</aspectratio>
        <visible>!Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="multiimage">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <timeperimage>75</timeperimage>
        <randomize>false</randomize>
        <fadetime>0</fadetime>
        <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window(weather).Property(Daily.1.FanartCode)]</imagepath>
        <aspectratio align="right">keep</aspectratio>
        <visible>Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="label">
        <description>high label</description>
        <posx>93</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[419] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>high value</description>
        <posx>100</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Daily.1.HighTemperature))</visible>
        <label>$INFO[Window(weather).Property(Daily.1.HighTemperature)] $INFO[System.TemperatureUnits]</label>
      </control>
      <control type="label">
        <description>low label</description>
        <posx>93</posx>
        <posy>170</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[418] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>low value</description>
        <posx>100</posx>
        <posy>170</posy>
        <height>35</height>
        <width>95</width>
        <label>$INFO[Window(weather).Property(Daily.1.LowTemperature)] $INFO[System.TemperatureUnits]</label>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Daily.1.LowTemperature))</visible>
      </control>
    </control>
  </include>
  <include name="Plus_WeatherWidgetDay2">
    <control type="group">
      <include>weatherwidgetback</include>
      <control type="label">
        <description>Day label</description>
        <posx>0</posx>
        <posy>207</posy>
        <width>189</width>
        <height>35</height>
        <font>Font_Bold20</font>
        <info>Window(weather).Property(Daily.2.LongDay)</info>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="label">
        <description>conditions label</description>
        <posx>25</posx>
        <posy>30</posy>
        <width>140</width>
        <height>20</height>
        <info>Window(weather).Property(Daily.2.Outlook)</info>
        <font>Font_Info</font>
        <scroll>true</scroll>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="image">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <info>Window(weather).Property(Daily.2.OutlookIcon)</info>
        <aspectratio align="center">keep</aspectratio>
        <visible>!Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="multiimage">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <timeperimage>75</timeperimage>
        <randomize>false</randomize>
        <fadetime>0</fadetime>
        <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window(weather).Property(Daily.2.FanartCode)]</imagepath>
        <aspectratio align="right">keep</aspectratio>
        <visible>Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="label">
        <description>high label</description>
        <posx>93</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[419] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>high value</description>
        <posx>100</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Daily.2.HighTemperature))</visible>
        <label>$INFO[Window(weather).Property(Daily.2.HighTemperature)] $INFO[System.TemperatureUnits]</label>
      </control>
      <control type="label">
        <description>low label</description>
        <posx>93</posx>
        <posy>170</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[418] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>low value</description>
        <posx>100</posx>
        <posy>170</posy>
        <height>35</height>
        <width>95</width>
        <label>$INFO[Window(weather).Property(Daily.2.LowTemperature)] $INFO[System.TemperatureUnits]</label>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Daily.2.LowTemperature))</visible>
      </control>
    </control>
  </include>
  <include name="Plus_WeatherWidgetDay3">
    <control type="group">
      <include>weatherwidgetback</include>
      <control type="label">
        <description>Day label</description>
        <posx>0</posx>
        <posy>207</posy>
        <width>189</width>
        <height>35</height>
        <font>Font_Bold20</font>
        <info>Window(weather).Property(Daily.3.LongDay)</info>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="label">
        <description>conditions label</description>
        <posx>25</posx>
        <posy>30</posy>
        <width>140</width>
        <height>20</height>
        <info>Window(weather).Property(Daily.3.Outlook)</info>
        <font>Font_Info</font>
        <scroll>true</scroll>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="image">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <info>Window(weather).Property(Daily.3.OutlookIcon)</info>
        <aspectratio align="center">keep</aspectratio>
        <visible>!Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="multiimage">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <timeperimage>75</timeperimage>
        <randomize>false</randomize>
        <fadetime>0</fadetime>
        <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window(weather).Property(Daily.3.FanartCode)]</imagepath>
        <aspectratio align="right">keep</aspectratio>
        <visible>Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="label">
        <description>high label</description>
        <posx>93</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[419] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>high value</description>
        <posx>100</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Daily.3.HighTemperature))</visible>
        <label>$INFO[Window(weather).Property(Daily.3.HighTemperature)] $INFO[System.TemperatureUnits]</label>
      </control>
      <control type="label">
        <description>low label</description>
        <posx>93</posx>
        <posy>170</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[418] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>low value</description>
        <posx>100</posx>
        <posy>170</posy>
        <height>35</height>
        <width>95</width>
        <label>$INFO[Window(weather).Property(Daily.3.LowTemperature)] $INFO[System.TemperatureUnits]</label>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Daily.3.LowTemperature))</visible>
      </control>
    </control>
  </include>
  <include name="Plus_WeatherWidgetDay4">
    <control type="group">
      <include>weatherwidgetback</include>
      <control type="label">
        <description>Day label</description>
        <posx>0</posx>
        <posy>207</posy>
        <width>189</width>
        <height>35</height>
        <font>Font_Bold20</font>
        <info>Window(weather).Property(Daily.4.LongDay)</info>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="label">
        <description>conditions label</description>
        <posx>25</posx>
        <posy>30</posy>
        <width>140</width>
        <height>20</height>
        <info>Window(weather).Property(Daily.4.Outlook)</info>
        <font>Font_Info</font>
        <scroll>true</scroll>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="image">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <info>Window(weather).Property(Daily.4.OutlookIcon)</info>
        <aspectratio align="center">keep</aspectratio>
        <visible>!Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="multiimage">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <timeperimage>75</timeperimage>
        <randomize>false</randomize>
        <fadetime>0</fadetime>
        <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window(weather).Property(Daily.4.FanartCode)]</imagepath>
        <aspectratio align="right">keep</aspectratio>
        <visible>Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="label">
        <description>high label</description>
        <posx>93</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[419] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>high value</description>
        <posx>100</posx>
        <posy>150</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Daily.4.HighTemperature))</visible>
        <label>$INFO[Window(weather).Property(Daily.4.HighTemperature)] $INFO[System.TemperatureUnits]</label>
      </control>
      <control type="label">
        <description>low label</description>
        <posx>93</posx>
        <posy>170</posy>
        <height>20</height>
        <width>95</width>
        <font>Font_Reg18</font>
        <align>right</align>
        <label>$LOCALIZE[418] :</label>
        <textcolor>grey2</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="label">
        <description>low value</description>
        <posx>100</posx>
        <posy>170</posy>
        <height>35</height>
        <width>95</width>
        <label>$INFO[Window(weather).Property(Daily.4.LowTemperature)] $INFO[System.TemperatureUnits]</label>
        <font>Font_Reg18</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Daily.4.LowTemperature))</visible>
      </control>
    </control>
  </include>
  <include name="Standard_WeatherWidgetCurrent">
    <control type="group">
      <include>weatherwidgetback</include>
      <control type="label">
        <description>Day label</description>
        <posx>0</posx>
        <posy>207</posy>
        <width>189</width>
        <height>35</height>
        <font>Font_Bold20</font>
        <label>31374</label>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="label">
        <description>conditions label</description>
        <posx>25</posx>
        <posy>30</posy>
        <width>140</width>
        <height>20</height>
        <info>Window(weather).Property(Current.Condition)</info>
        <font>Font_Info</font>
        <scroll>true</scroll>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
      </control>
      <control type="image">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <info>Window(weather).Property(Current.ConditionIcon)</info>
        <aspectratio align="center">keep</aspectratio>
        <visible>!Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="multiimage">
        <description>day icon</description>
        <posx>55</posx>
        <posy>60</posy>
        <height>80</height>
        <width>80</width>
        <timeperimage>75</timeperimage>
        <randomize>false</randomize>
        <fadetime>0</fadetime>
        <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window(weather).Property(Current.FanartCode)]</imagepath>
        <aspectratio align="right">keep</aspectratio>
        <visible>Skin.HasSetting(homepageWeatheranimated)</visible>
      </control>
      <control type="label">
        <description>high value</description>
        <posx>0</posx>
        <posy>150</posy>
        <height>20</height>
        <width>189</width>
        <font>Font_Bold35</font>
        <align>center</align>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>!IsEmpty(Window(weather).Property(Current.Temperature))</visible>
        <label>$INFO[Window(weather).Property(Current.Temperature)] $INFO[System.TemperatureUnits]</label>
      </control>
    </control>
  </include>
  <include name="Standard_Weather">
    <defaultcontrol always="true">3</defaultcontrol>
    <allowoverlay>no</allowoverlay>
    <controls>
      <include>CommonWeatherBackground</include>
      <control type="group">
        <animation type="WindowOpen" reversible="false">
          <effect type="zoom" start="80" end="100" center="640,360" easing="out" tween="back" time="300" />
          <effect type="fade" start="0" end="100" time="300" />
        </animation>
        <animation type="WindowClose" reversible="false">
          <effect type="zoom" start="100" end="80" center="640,360" easing="in" tween="back" time="300" />
          <effect type="fade" start="100" end="0" time="300" />
        </animation>
        <visible>!Window.IsVisible(script-twc-main.xml)</visible>
        <include>Animation_OpenCloseZoom</include>
        <control type="group">
          <posx>100</posx>
          <posy>50</posy>
          <control type="image">
            <posx>-7.5</posx>
            <posy>-7.5</posy>
            <width>515</width>
            <height>635</height>
            <texture border="30">osd/osd_settings_back.png</texture>
          </control>
          <control type="label">
            <description>header label</description>
            <posx>20</posx>
            <posy>18</posy>
            <width>460</width>
            <height>30</height>
            <font>Font_Bold22_Caps</font>
            <label>[UPPERCASE]$LOCALIZE[31300][/UPPERCASE]</label>
            <align>center</align>
            <aligny>center</aligny>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>weather location label</description>
            <posx>20</posx>
            <posy>60</posy>
            <width>460</width>
            <height>30</height>
            <font>Font_Bold20</font>
            <textcolor>white</textcolor>
            <scroll>false</scroll>
            <align>center</align>
            <aligny>center</aligny>
            <label>$INFO[Window(Weather).Property(Location)]</label>
          </control>
          <control type="button" id="4">
            <description>Settings button</description>
            <label>5</label>
            <onclick>ActivateWindow(MyWeatherSettings)</onclick>
            <posx>270</posx>
            <posy>120</posy>
            <width>120</width>
            <height>30</height>
            <texturefocus border="5">dialogs/context_highlight.png</texturefocus>
            <texturenofocus border="5">dialogs/context_nofocus.png</texturenofocus>
            <textcolor>80FFFFFF</textcolor>
            <focusedcolor>FFFFFFFF</focusedcolor>
            <font>Font_Reg18</font>
            <align>center</align>
            <aligny>center</aligny>
            <onleft>2</onleft>
            <onright>2</onright>
            <onup>3</onup>
            <ondown>3</ondown>
          </control>
          <control type="button" id="2">
            <description>Refresh button</description>
            <posx>110</posx>
            <posy>120</posy>
            <width>120</width>
            <height>30</height>
            <texturefocus border="5">dialogs/context_highlight.png</texturefocus>
            <texturenofocus border="5">dialogs/context_nofocus.png</texturenofocus>
            <label>103</label>
            <textcolor>80FFFFFF</textcolor>
            <focusedcolor>FFFFFFFF</focusedcolor>
            <font>Font_Reg18</font>
            <align>center</align>
            <aligny>center</aligny>
            <onleft>4</onleft>
            <onright>4</onright>
            <onup>3</onup>
            <ondown>3</ondown>
          </control>
          <control type="spincontrolex" id="3">
            <description>change location button</description>
            <posx>200</posx>
            <posy>60</posy>
            <textcolor>00bbbbbb</textcolor>
            <focusedcolor>00FFFFFF</focusedcolor>
            <textureup>settings/spin-up.png</textureup>
            <texturedown>settings/spin-down.png</texturedown>
            <textureupfocus>settings/spin-up-focus.png</textureupfocus>
            <texturedownfocus>settings/spin-down-focus.png</texturedownfocus>
            <texturenofocus>-</texturenofocus>
            <texturefocus>-</texturefocus>
            <font>-</font>
            <disabledcolor>FFFFFFFF</disabledcolor>
            <aligny>center</aligny>
            <align>-</align>
            <textoffsetx>130</textoffsetx>
            <spinposx>-2</spinposx>
            <spinwidth>40</spinwidth>
            <spinheight>65</spinheight>
            <onleft>50</onleft>
            <onright>50</onright>
            <onup>4</onup>
            <ondown>2</ondown>
          </control>
          <control type="label">
            <description>update label</description>
            <posx>20</posx>
            <posy>85</posy>
            <width>460</width>
            <height>35</height>
            <font>Font_Reg18</font>
            <label>$LOCALIZE[31301] - $INFO[Window.Property(Updated)]</label>
            <align>center</align>
            <aligny>center</aligny>
            <textcolor>grey2</textcolor>
          </control>
          <control type="label">
            <description>current temp Value</description>
            <posx>195</posx>
            <posy>155</posy>
            <width>180</width>
            <height>180</height>
            <font>Font_OSDTitle2</font>
            <align>right</align>
            <aligny>center</aligny>
            <label>$INFO[Window.Property(Current.Temperature)] $INFO[System.TemperatureUnits]</label>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="image">
            <description>current weather icon</description>
            <posx>230</posx>
            <posy>155</posy>
            <width>230</width>
            <height>180</height>
            <info>Window.Property(Current.ConditionIcon)</info>
            <aspectratio>keep</aspectratio>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>current weather icon</description>
            <posx>230</posx>
            <posy>155</posy>
            <width>230</width>
            <height>180</height>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window(weather).Property(Current.FanartCode)]</imagepath>
            <aspectratio>keep</aspectratio>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>current condition label</description>
            <posx>20</posx>
            <posy>340</posy>
            <width>460</width>
            <height>30</height>
            <info>Window.Property(Current.Condition)</info>
            <wrapmultiline>true</wrapmultiline>
            <font>Font_Reg20</font>
            <align>center</align>
            <aligny>center</aligny>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="image">
            <posx>20</posx>
            <posy>393</posy>
            <width>460</width>
            <height>1</height>
            <colordiffuse>30f0f0f0</colordiffuse>
            <texture>home/nowplaying/nowplayline.png</texture>
          </control>
          <control type="label">
            <description>current feels like label</description>
            <posx>170</posx>
            <posy>400</posy>
            <width>170</width>
            <height>35</height>
            <font>Font_Reg20</font>
            <align>right</align>
            <aligny>center</aligny>
            <label>$LOCALIZE[402] :</label>
            <textcolor>grey2</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>current dew label</description>
            <posx>170</posx>
            <posy>430</posy>
            <width>170</width>
            <height>35</height>
            <font>Font_Reg20</font>
            <align>right</align>
            <aligny>center</aligny>
            <label>$LOCALIZE[405] :</label>
            <textcolor>grey2</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>current humidity label</description>
            <posx>170</posx>
            <posy>460</posy>
            <width>170</width>
            <height>35</height>
            <font>Font_Reg20</font>
            <align>right</align>
            <aligny>center</aligny>
            <label>$LOCALIZE[406] :</label>
            <textcolor>grey2</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>current UV Index label</description>
            <posx>170</posx>
            <posy>490</posy>
            <width>170</width>
            <height>35</height>
            <font>Font_Reg20</font>
            <align>right</align>
            <aligny>center</aligny>
            <label>$LOCALIZE[403] :</label>
            <textcolor>grey2</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>current Wind label</description>
            <posx>170</posx>
            <posy>520</posy>
            <width>170</width>
            <height>35</height>
            <font>Font_Reg20</font>
            <align>right</align>
            <aligny>center</aligny>
            <label>$LOCALIZE[404] :</label>
            <textcolor>grey2</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>current feels like Value</description>
            <posx>185</posx>
            <posy>400</posy>
            <width>300</width>
            <height>35</height>
            <font>Font_Reg20</font>
            <align>left</align>
            <aligny>center</aligny>
            <label>$INFO[Window.Property(Current.FeelsLike)]$INFO[System.TemperatureUnits]</label>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>current dew Value</description>
            <posx>185</posx>
            <posy>430</posy>
            <width>300</width>
            <height>35</height>
            <font>Font_Reg20</font>
            <align>left</align>
            <aligny>center</aligny>
            <label>$INFO[Window.Property(Current.DewPoint)]$INFO[System.TemperatureUnits]</label>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>current humidity Value</description>
            <posx>185</posx>
            <posy>460</posy>
            <width>300</width>
            <height>35</height>
            <font>Font_Reg20</font>
            <align>left</align>
            <aligny>center</aligny>
            <info>Window.Property(Current.Humidity)</info>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>current UV Index Value</description>
            <posx>185</posx>
            <posy>490</posy>
            <width>300</width>
            <height>35</height>
            <font>Font_Reg20</font>
            <align>left</align>
            <aligny>center</aligny>
            <info>Window.Property(Current.UVIndex)</info>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>current Wind Value</description>
            <posx>185</posx>
            <posy>520</posy>
            <width>300</width>
            <height>35</height>
            <font>Font_Reg20</font>
            <align>left</align>
            <aligny>center</aligny>
            <info>Window.Property(Current.Wind)</info>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
        </control>
        <control type="group">
          <posx>680</posx>
          <posy>50</posy>
          <control type="image">
            <posx>-7.5</posx>
            <posy>-7.5</posy>
            <width>515</width>
            <height>635</height>
            <texture border="30">osd/osd_settings_back.png</texture>
          </control>
          <control type="label">
            <description>header label</description>
            <posx>20</posx>
            <posy>18</posy>
            <width>460</width>
            <height>30</height>
            <font>Font_Bold22_Caps</font>
            <label>[UPPERCASE]$LOCALIZE[10508][/UPPERCASE]</label>
            <align>center</align>
            <aligny>center</aligny>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="group">
            <description>day 0</description>
            <posx>20</posx>
            <posy>60</posy>
            <control type="label">
              <description>Day label</description>
              <posx>0</posx>
              <posy>0</posy>
              <width>460</width>
              <height>35</height>
              <font>Font_Bold20</font>
              <info>Window.Property(Day0.Title)</info>
              <align>center</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
            </control>
            <control type="image">
              <description>day icon</description>
              <posx>370</posx>
              <posy>40</posy>
              <height>80</height>
              <width>80</width>
              <info>Window.Property(Day0.OutlookIcon)</info>
              <aspectratio align="right">keep</aspectratio>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <description>day icon</description>
              <posx>370</posx>
              <posy>40</posy>
              <height>80</height>
              <width>80</width>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Day0.FanartCode)]</imagepath>
              <aspectratio align="right">keep</aspectratio>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>high label</description>
              <posx>40</posx>
              <posy>50</posy>
              <height>20</height>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <label>$LOCALIZE[419] :</label>
              <textcolor>grey2</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>Weather.IsFetched</visible>
            </control>
            <control type="label">
              <description>high value</description>
              <posx>110</posx>
              <posy>50</posy>
              <height>20</height>
              <label>$INFO[Window.Property(Day0.HighTemp)]$INFO[System.TemperatureUnits]</label>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>!IsEmpty(Window.Property(Day0.HighTemp))</visible>
            </control>
            <control type="label">
              <description>low label</description>
              <posx>220</posx>
              <posy>50</posy>
              <height>20</height>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <label>$LOCALIZE[418] :</label>
              <textcolor>grey2</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>Weather.IsFetched</visible>
            </control>
            <control type="label">
              <description>low value</description>
              <posx>290</posx>
              <posy>50</posy>
              <height>20</height>
              <label>$INFO[Window.Property(Day0.LowTemp)]$INFO[System.TemperatureUnits]</label>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>!IsEmpty(Window.Property(Day0.LowTemp))</visible>
            </control>
            <control type="label">
              <description>conditions label</description>
              <posx>40</posx>
              <posy>80</posy>
              <width>320</width>
              <height>20</height>
              <info>Window.Property(Day0.Outlook)</info>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
            </control>
            <control type="image">
              <posx>0</posx>
              <posy>123</posy>
              <width>460</width>
              <height>1</height>
              <colordiffuse>30f0f0f0</colordiffuse>
              <texture>home/nowplaying/nowplayline.png</texture>
            </control>
          </control>
          <control type="group">
            <description>day 1</description>
            <posx>20</posx>
            <posy>190</posy>
            <control type="label">
              <description>Day label</description>
              <posx>0</posx>
              <posy>0</posy>
              <width>460</width>
              <height>35</height>
              <font>Font_Bold20</font>
              <info>Window.Property(Day1.Title)</info>
              <align>center</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
            </control>
            <control type="image">
              <description>day icon</description>
              <posx>370</posx>
              <posy>40</posy>
              <height>80</height>
              <width>80</width>
              <info>Window.Property(Day1.OutlookIcon)</info>
              <aspectratio align="right">keep</aspectratio>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <description>day icon</description>
              <posx>370</posx>
              <posy>40</posy>
              <height>80</height>
              <width>80</width>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Day1.FanartCode)]</imagepath>
              <aspectratio align="right">keep</aspectratio>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>high label</description>
              <posx>40</posx>
              <posy>50</posy>
              <height>20</height>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <label>$LOCALIZE[419] :</label>
              <textcolor>grey2</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>Weather.IsFetched</visible>
            </control>
            <control type="label">
              <description>high value</description>
              <posx>110</posx>
              <posy>50</posy>
              <height>20</height>
              <label>$INFO[Window.Property(Day1.HighTemp)]$INFO[System.TemperatureUnits]</label>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>!IsEmpty(Window.Property(Day1.HighTemp))</visible>
            </control>
            <control type="label">
              <description>low label</description>
              <posx>220</posx>
              <posy>50</posy>
              <height>20</height>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <label>$LOCALIZE[418] :</label>
              <textcolor>grey2</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>Weather.IsFetched</visible>
            </control>
            <control type="label">
              <description>low value</description>
              <posx>290</posx>
              <posy>50</posy>
              <height>20</height>
              <label>$INFO[Window.Property(Day1.LowTemp)]$INFO[System.TemperatureUnits]</label>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>!IsEmpty(Window.Property(Day1.LowTemp))</visible>
            </control>
            <control type="label">
              <description>conditions label</description>
              <posx>40</posx>
              <posy>80</posy>
              <width>320</width>
              <height>20</height>
              <info>Window.Property(Day1.Outlook)</info>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
            </control>
            <control type="image">
              <posx>0</posx>
              <posy>123</posy>
              <width>460</width>
              <height>1</height>
              <colordiffuse>30f0f0f0</colordiffuse>
              <texture>home/nowplaying/nowplayline.png</texture>
            </control>
          </control>
          <control type="group">
            <description>day 2</description>
            <posx>20</posx>
            <posy>320</posy>
            <control type="label">
              <description>Day label</description>
              <posx>0</posx>
              <posy>0</posy>
              <width>460</width>
              <height>35</height>
              <font>Font_Bold20</font>
              <info>Window.Property(Day2.Title)</info>
              <align>center</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
            </control>
            <control type="image">
              <description>day icon</description>
              <posx>370</posx>
              <posy>40</posy>
              <height>80</height>
              <width>80</width>
              <info>Window.Property(Day2.OutlookIcon)</info>
              <aspectratio align="right">keep</aspectratio>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <description>day icon</description>
              <posx>370</posx>
              <posy>40</posy>
              <height>80</height>
              <width>80</width>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Day2.FanartCode)]</imagepath>
              <aspectratio align="right">keep</aspectratio>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>high label</description>
              <posx>40</posx>
              <posy>50</posy>
              <height>20</height>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <label>$LOCALIZE[419] :</label>
              <textcolor>grey2</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>Weather.IsFetched</visible>
            </control>
            <control type="label">
              <description>high value</description>
              <posx>110</posx>
              <posy>50</posy>
              <height>20</height>
              <label>$INFO[Window.Property(Day2.HighTemp)]$INFO[System.TemperatureUnits]</label>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>!IsEmpty(Window.Property(Day2.HighTemp))</visible>
            </control>
            <control type="label">
              <description>low label</description>
              <posx>220</posx>
              <posy>50</posy>
              <height>20</height>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <label>$LOCALIZE[418] :</label>
              <textcolor>grey2</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>Weather.IsFetched</visible>
            </control>
            <control type="label">
              <description>low value</description>
              <posx>290</posx>
              <posy>50</posy>
              <height>20</height>
              <label>$INFO[Window.Property(Day2.LowTemp)]$INFO[System.TemperatureUnits]</label>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>!IsEmpty(Window.Property(Day2.LowTemp))</visible>
            </control>
            <control type="label">
              <description>conditions label</description>
              <posx>40</posx>
              <posy>80</posy>
              <width>320</width>
              <height>20</height>
              <info>Window.Property(Day2.Outlook)</info>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <shadowcolor>black</shadowcolor>
              <textcolor>white</textcolor>
            </control>
            <control type="image">
              <posx>0</posx>
              <posy>123</posy>
              <width>460</width>
              <height>1</height>
              <colordiffuse>30f0f0f0</colordiffuse>
              <texture>home/nowplaying/nowplayline.png</texture>
            </control>
          </control>
          <control type="group">
            <description>day 3</description>
            <posx>20</posx>
            <posy>450</posy>
            <control type="label">
              <description>Day label</description>
              <posx>0</posx>
              <posy>0</posy>
              <width>460</width>
              <height>35</height>
              <font>Font_Bold20</font>
              <info>Window.Property(Day3.Title)</info>
              <align>center</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
            </control>
            <control type="image">
              <description>day icon</description>
              <posx>370</posx>
              <posy>40</posy>
              <height>80</height>
              <width>80</width>
              <info>Window.Property(Day3.OutlookIcon)</info>
              <aspectratio align="right">keep</aspectratio>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <description>day icon</description>
              <posx>370</posx>
              <posy>40</posy>
              <height>80</height>
              <width>80</width>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Day3.FanartCode)]</imagepath>
              <aspectratio align="right">keep</aspectratio>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>high label</description>
              <posx>40</posx>
              <posy>50</posy>
              <height>20</height>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <label>$LOCALIZE[419] :</label>
              <textcolor>grey2</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>Weather.IsFetched</visible>
            </control>
            <control type="label">
              <description>high value</description>
              <posx>110</posx>
              <posy>50</posy>
              <height>20</height>
              <label>$INFO[Window.Property(Day3.HighTemp)]$INFO[System.TemperatureUnits]</label>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>!IsEmpty(Window.Property(Day3.HighTemp))</visible>
            </control>
            <control type="label">
              <description>low label</description>
              <posx>220</posx>
              <posy>50</posy>
              <height>20</height>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <label>$LOCALIZE[418] :</label>
              <textcolor>grey2</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>Weather.IsFetched</visible>
            </control>
            <control type="label">
              <description>low value</description>
              <posx>290</posx>
              <posy>50</posy>
              <height>20</height>
              <label>$INFO[Window.Property(Day3.LowTemp)]$INFO[System.TemperatureUnits]</label>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
              <visible>!IsEmpty(Window.Property(Day3.LowTemp))</visible>
            </control>
            <control type="label">
              <description>conditions label</description>
              <posx>40</posx>
              <posy>80</posy>
              <width>320</width>
              <height>20</height>
              <info>Window.Property(Day3.Outlook)</info>
              <font>Font_Reg20</font>
              <align>left</align>
              <aligny>center</aligny>
              <textcolor>white</textcolor>
              <shadowcolor>black</shadowcolor>
            </control>
          </control>
        </control>
      </control>
      <include condition="Skin.HasSetting(breadcrumb)">Breadcrumbs</include>
      <include condition="Skin.HasSetting(globaltime)">Furniture_Clock</include>
      <include>Furniture_NowPlayingWidget</include>
    </controls>
  </include>
  <include name="TWC.ButtonCommon">
    <width>214</width>
    <height>64</height>
    <textoffsetx>10</textoffsetx>
    <align>left</align>
    <aligny>top</aligny>
    <textoffsety>2</textoffsety>
    <font>Font_Bold22</font>
    <textcolor>FFf5f5f5</textcolor>
    <focusedcolor>FF262728</focusedcolor>
    <disabledcolor>grey3</disabledcolor>
    <texturefocus>views/listpanel_selectbar.png</texturefocus>
    <texturenofocus border="5">-</texturenofocus>
    <pulseonselect>false</pulseonselect>
  </include>
  <include name="TWC.ButtonXLabelCommon">
    <textoffsety>3</textoffsety>
    <align>right</align>
    <font>Font_Reg20</font>
    <textcolor>FFf5f5f5</textcolor>
    <focusedcolor>FF262728</focusedcolor>
    <texturefocus>-</texturefocus>
    <texturenofocus>-</texturenofocus>
    <include>TWC.ButtonCommon</include>
  </include>
  <include name="TWC.ScrollbarCommon">
    <posx>630</posx>
    <posy>50</posy>
    <width>25</width>
    <height>465</height>
    <texturesliderbackground border="0,14,0,14">views/scrollBarV.png</texturesliderbackground>
    <texturesliderbar border="0,14,0,14">views/scrollBarV_bar.png</texturesliderbar>
    <texturesliderbarfocus border="0,14,0,14">views/scrollBarV_bar_focus.png</texturesliderbarfocus>
    <textureslidernib>views/ScrollBarNib.png</textureslidernib>
    <textureslidernibfocus>views/ScrollBarNib.png</textureslidernibfocus>
    <showonepage>true</showonepage>
    <orientation>vertical</orientation>
  </include>
  <include name="TWC.LoadingLabelCommon">
    <posx>5</posx>
    <posy>265</posy>
    <width>800</width>
    <height>80</height>
    <font>Font_Bold28</font>
    <align>center</align>
    <aligny>center</aligny>
    <label>$LOCALIZE[31970]</label>
    <textcolor>grey2</textcolor>
    <shadowcolor>black</shadowcolor>
    <wrapmultiline>true</wrapmultiline>
  </include>
  <include name="TWC.36Hour.Button">
    <control type="button" id="13201">
      <include>TWC.ButtonCommon</include>
      <label>31901</label>
      <onclick>SetProperty(Weather.CurrentView,$LOCALIZE[31901] $LOCALIZE[31911])</onclick>
      <onclick>SetProperty(Weather.CurrentViewMenu,$LOCALIZE[31901])</onclick>
    </control>
  </include>
  <include name="TWC.36Hour.ButtonXLabel">
    <control type="button">
      <include>TWC.ButtonXLabelCommon</include>
      <label>[UPPERCASE]$LOCALIZE[31911][/UPPERCASE]</label>
      <visible>!ControlGroup(2000).HasFocus(13201)</visible>
    </control>
    <control type="button">
      <textcolor>FF262728</textcolor>
      <include>TWC.ButtonXLabelCommon</include>
      <label>[UPPERCASE]$LOCALIZE[31911][/UPPERCASE]</label>
      <visible>ControlGroup(2000).HasFocus(13201)</visible>
    </control>
  </include>
  <include name="TWC.36Hour.PeriodLabelsCommon">
    <posx>0</posx>
    <posy>0</posy>
    <width>260</width>
    <height>24</height>
    <font>Font_Reg25</font>
    <textcolor>white</textcolor>
    <shadowcolor>black</shadowcolor>
    <aligny>center</aligny>
    <align>center</align>
  </include>
  <include name="TWC.36Hour.PeriodIconCommon">
    <posx>0</posx>
    <posy>55</posy>
    <width>128</width>
    <height>120</height>
    <aspectratio>keep</aspectratio>
  </include>
  <include name="TWC.36Hour.PeriodOutlookCommon">
    <posx>0</posx>
    <posy>185</posy>
    <width>128</width>
    <height>128</height>
    <font>Font_Info</font>
    <textcolor>grey</textcolor>
    <shadowcolor>black</shadowcolor>
    <aligny>top</aligny>
    <align>center</align>
    <wrapmultiline>true</wrapmultiline>
  </include>
  <include name="TWC.36Hour.PeriodTemperatureHeadingCommon">
    <posx>130</posx>
    <posy>54</posy>
    <width>130</width>
    <height>20</height>
    <font>Font_Reg20</font>
    <textcolor>grey2</textcolor>
    <shadowcolor>black</shadowcolor>
    <aligny>center</aligny>
    <align>center</align>
  </include>
  <include name="TWC.36Hour.PeriodTemperatureCommon">
    <posy>85</posy>
    <font>Font_Bold35</font>
    <include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
  </include>
  <include name="TWC.36Hour.PeriodTempUnitsCommon">
    <posx>164</posx>
    <posy>75</posy>
    <font>Font_Info</font>
    <info>System.TemperatureUnits</info>
    <include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
  </include>
  <include name="TWC.36Hour.PeriodPrecipitationHeadingCommon">
    <control type="label">
      <description>precip title</description>
      <posy>128</posy>
      <font>Font_Info</font>
      <include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
      <label>[B]$LOCALIZE[33022][/B]</label>
    </control>
  </include>
  <include name="TWC.36Hour.PeriodPrecipitationCommon">
    <posy>150</posy>
    <font>Font_Bold24</font>
    <include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
  </include>
  <include name="TWC.36Hour.PeriodPrecipUnitsCommon">
    <posx>154</posx>
    <posy>145</posy>
    <font>Font_Reg12</font>
    <label>%</label>
    <include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
  </include>
  <include name="TWC.36Hour.PeriodForecastHeadingCommon">
    <control type="label">
      <posy>238</posy>
      <font>Font_Reg20</font>
      <textcolor>grey2</textcolor>
      <align>center</align>
      <aligny>center</aligny>
      <label>[B]$LOCALIZE[31911][/B]</label>
      <include>TWC.36Hour.PeriodLabelsCommon</include>
    </control>
  </include>
  <include name="TWC.36Hour.PeriodForecastCommon">
    <posy>260</posy>
    <height>240</height>
    <font>Font_Info</font>
    <align>left</align>
    <aligny>top</aligny>
    <autoscroll time="2000" delay="6000" repeat="6000">VisibleChange</autoscroll>
    <include>TWC.36Hour.PeriodLabelsCommon</include>
  </include>
  <include name="TWC.36Hour.PeriodDaylightCommon">
    <posy>510</posy>
    <font>Font_Reg20</font>
    <textcolor>grey</textcolor>
    <include>TWC.36Hour.PeriodLabelsCommon</include>
  </include>
  <include name="TWC.36Hour.PeriodSeparator">
    <control type="image">
      <posx>264</posx>
      <posy>0</posy>
      <width>4</width>
      <height>560</height>
      <texture>views/separator_vertical.png</texture>
    </control>
  </include>
  <include name="TWC.36Hour">
    <control type="group">
      <posx>290</posx>
      <posy>60</posy>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31901] $LOCALIZE[31911])</visible>
      <animation effect="fade" reversible="true" time="300">VisibleChange</animation>
      <control type="label">
        <description>loading label</description>
        <include>TWC.LoadingLabelCommon</include>
        <visible>IsEmpty(Window.Property(36Hour.IsFetched))</visible>
      </control>
      <control type="grouplist">
        <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
        <posx>0</posx>
        <posy>40</posy>
        <width>920</width>
        <itemgap>0</itemgap>
        <orientation>horizontal</orientation>
        <control type="group">
          <width>275</width>
          <control type="label">
            <description>heading</description>
            <include>TWC.36Hour.PeriodLabelsCommon</include>
            <label>[B]$INFO[Window.Property(36Hour.1.Heading)][/B]</label>
          </control>
          <control type="image">
            <description>outlook icon</description>
            <include>TWC.36Hour.PeriodIconCommon</include>
            <info>Window.Property(36Hour.1.OutlookIcon)</info>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>outlook icon</description>
            <include>TWC.36Hour.PeriodIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(36Hour.1.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>outlook label</description>
            <include>TWC.36Hour.PeriodOutlookCommon</include>
            <info>Window.Property(36Hour.1.Outlook)</info>
          </control>
          <control type="label">
            <description>temp title</description>
            <include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
            <label>[B]$INFO[Window.Property(36Hour.1.TemperatureHeading)][/B]</label>
          </control>
          <control type="label">
            <description>temp label</description>
            <textcolor>$INFO[Window.Property(36Hour.1.TemperatureColor)]</textcolor>
            <include>TWC.36Hour.PeriodTemperatureCommon</include>
            <info>Window.Property(36Hour.1.Temperature)</info>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(36Hour.1.Temperature),-100) + !IntegerGreaterThan(Window.Property(36Hour.1.Temperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Temp label units</description>
            <textcolor>$INFO[Window.Property(36Hour.1.TemperatureColor)]</textcolor>
            <include>TWC.36Hour.PeriodTempUnitsCommon</include>
            <animation effect="slide" start="0,0" end="11,0" time="0" condition="IntegerGreaterThan(Window.Property(36Hour.1.Temperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-14,0" time="0" condition="IntegerGreaterThan(Window.Property(36Hour.1.Temperature),-10) + !IntegerGreaterThan(Window.Property(36Hour.1.Temperature),9)">Conditional</animation>
          </control>
          <include>TWC.36Hour.PeriodPrecipitationHeadingCommon</include>
          <control type="label">
            <description>precip</description>
            <include>TWC.36Hour.PeriodPrecipitationCommon</include>
            <info>Window.Property(36Hour.1.Precipitation)</info>
          </control>
          <control type="label">
            <description>precip units</description>
            <include>TWC.36Hour.PeriodPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(36Hour.1.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="9,0" time="0" condition="StringCompare(Window.Property(36Hour.1.Precipitation),100)">Conditional</animation>
          </control>
          <include>TWC.36Hour.PeriodForecastHeadingCommon</include>
          <control type="textbox">
            <description>forecast label</description>
            <include>TWC.36Hour.PeriodForecastCommon</include>
            <info>Window.Property(36Hour.1.Forecast)</info>
            <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
          </control>
          <control type="label">
            <description>daylight</description>
            <include>TWC.36Hour.PeriodDaylightCommon</include>
            <label>$INFO[Window.Property(36Hour.1.DaylightTitle)] $INFO[Window.Property(36Hour.1.DaylightTime)]</label>
          </control>
          <include>TWC.36Hour.PeriodSeparator</include>
        </control>
        <control type="group">
          <width>275</width>
          <control type="label">
            <description>heading</description>
            <include>TWC.36Hour.PeriodLabelsCommon</include>
            <label>[B]$INFO[Window.Property(36Hour.2.Heading)][/B]</label>
          </control>
          <control type="image">
            <description>outlook icon</description>
            <include>TWC.36Hour.PeriodIconCommon</include>
            <info>Window.Property(36Hour.2.OutlookIcon)</info>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>outlook icon</description>
            <include>TWC.36Hour.PeriodIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(36Hour.2.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>outlook label</description>
            <include>TWC.36Hour.PeriodOutlookCommon</include>
            <info>Window.Property(36Hour.2.Outlook)</info>
          </control>
          <control type="label">
            <description>temp title</description>
            <include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
            <label>[B]$INFO[Window.Property(36Hour.2.TemperatureHeading)][/B]</label>
          </control>
          <control type="label">
            <description>temp label</description>
            <textcolor>$INFO[Window.Property(36Hour.2.TemperatureColor)]</textcolor>
            <include>TWC.36Hour.PeriodTemperatureCommon</include>
            <info>Window.Property(36Hour.2.Temperature)</info>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(36Hour.2.Temperature),-100) + !IntegerGreaterThan(Window.Property(36Hour.2.Temperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Temp label units</description>
            <textcolor>$INFO[Window.Property(36Hour.2.TemperatureColor)]</textcolor>
            <include>TWC.36Hour.PeriodTempUnitsCommon</include>
            <animation effect="slide" start="0,0" end="11,0" time="0" condition="IntegerGreaterThan(Window.Property(36Hour.2.Temperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-14,0" time="0" condition="IntegerGreaterThan(Window.Property(36Hour.2.Temperature),-10) + !IntegerGreaterThan(Window.Property(36Hour.2.Temperature),9)">Conditional</animation>
          </control>
          <include>TWC.36Hour.PeriodPrecipitationHeadingCommon</include>
          <control type="label">
            <description>precip</description>
            <include>TWC.36Hour.PeriodPrecipitationCommon</include>
            <info>Window.Property(36Hour.2.Precipitation)</info>
          </control>
          <control type="label">
            <description>precip units</description>
            <include>TWC.36Hour.PeriodPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(36Hour.2.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="9,0" time="0" condition="StringCompare(Window.Property(36Hour.2.Precipitation),100)">Conditional</animation>
          </control>
          <include>TWC.36Hour.PeriodForecastHeadingCommon</include>
          <control type="textbox">
            <description>forecast label</description>
            <include>TWC.36Hour.PeriodForecastCommon</include>
            <info>Window.Property(36Hour.2.Forecast)</info>
            <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
          </control>
          <control type="label">
            <description>daylight</description>
            <include>TWC.36Hour.PeriodDaylightCommon</include>
            <label>$INFO[Window.Property(36Hour.2.DaylightTitle)] $INFO[Window.Property(36Hour.2.DaylightTime)]</label>
          </control>
          <include>TWC.36Hour.PeriodSeparator</include>
        </control>
        <control type="group">
          <width>275</width>
          <control type="label">
            <description>heading</description>
            <include>TWC.36Hour.PeriodLabelsCommon</include>
            <label>[B]$INFO[Window.Property(36Hour.3.Heading)][/B]</label>
          </control>
          <control type="image">
            <description>outlook icon</description>
            <include>TWC.36Hour.PeriodIconCommon</include>
            <info>Window.Property(36Hour.3.OutlookIcon)</info>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>outlook icon</description>
            <include>TWC.36Hour.PeriodIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(36Hour.3.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>outlook label</description>
            <include>TWC.36Hour.PeriodOutlookCommon</include>
            <info>Window.Property(36Hour.3.Outlook)</info>
          </control>
          <control type="label">
            <description>temp title</description>
            <include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
            <label>[B]$INFO[Window.Property(36Hour.3.TemperatureHeading)][/B]</label>
          </control>
          <control type="label">
            <description>temp label</description>
            <textcolor>$INFO[Window.Property(36Hour.3.TemperatureColor)]</textcolor>
            <include>TWC.36Hour.PeriodTemperatureCommon</include>
            <info>Window.Property(36Hour.3.Temperature)</info>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(36Hour.3.Temperature),-100) + !IntegerGreaterThan(Window.Property(36Hour.3.Temperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Temp label units</description>
            <textcolor>$INFO[Window.Property(36Hour.3.TemperatureColor)]</textcolor>
            <include>TWC.36Hour.PeriodTempUnitsCommon</include>
            <animation effect="slide" start="0,0" end="11,0" time="0" condition="IntegerGreaterThan(Window.Property(36Hour.3.Temperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-14,0" time="0" condition="IntegerGreaterThan(Window.Property(36Hour.3.Temperature),-10) + !IntegerGreaterThan(Window.Property(36Hour.3.Temperature),9)">Conditional</animation>
          </control>
          <include>TWC.36Hour.PeriodPrecipitationHeadingCommon</include>
          <control type="label">
            <description>precip</description>
            <include>TWC.36Hour.PeriodPrecipitationCommon</include>
            <info>Window.Property(36Hour.3.Precipitation)</info>
          </control>
          <control type="label">
            <description>precip units</description>
            <include>TWC.36Hour.PeriodPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(36Hour.3.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="9,0" time="0" condition="StringCompare(Window.Property(36Hour.3.Precipitation),100)">Conditional</animation>
          </control>
          <include>TWC.36Hour.PeriodForecastHeadingCommon</include>
          <control type="textbox">
            <description>forecast label</description>
            <include>TWC.36Hour.PeriodForecastCommon</include>
            <info>Window.Property(36Hour.3.Forecast)</info>
            <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
          </control>
          <control type="label">
            <description>daylight</description>
            <include>TWC.36Hour.PeriodDaylightCommon</include>
            <label>$INFO[Window.Property(36Hour.3.DaylightTitle)] $INFO[Window.Property(36Hour.3.DaylightTime)]</label>
          </control>
        </control>
      </control>
    </control>
  </include>
  <include name="TWC.Alerts.Button">
    <control type="button" id="13206">
      <include>TWC.ButtonCommon</include>
      <label>31906</label>
      <onclick>SetProperty(Weather.CurrentView,$LOCALIZE[31906] - $LOCALIZE[31913])</onclick>
      <onclick>SetProperty(Weather.CurrentViewMenu,$LOCALIZE[31906])</onclick>
      <enable>!IsEmpty(Window.Property(Alerts))</enable>
    </control>
  </include>
  <include name="TWC.Alerts.ButtonXLabel">
    <control type="button">
      <include>TWC.ButtonXLabelCommon</include>
      <label>31913</label>
      <enable>!IsEmpty(Window.Property(Alerts))</enable>
      <visible>!ControlGroup(2000).HasFocus(31206)</visible>
    </control>
    <control type="button">
      <textcolor>FF262728</textcolor>
      <include>TWC.ButtonXLabelCommon</include>
      <label>31913</label>
      <enable>!IsEmpty(Window.Property(Alerts))</enable>
      <visible>ControlGroup(2000).HasFocus(31206)</visible>
    </control>
  </include>
  <include name="TWC.Alerts.SettingsButtons">
    <control type="radiobutton" id="91206">
      <description>show alert rss</description>
      <include>Objects_MediaMenuButton</include>
      <label>31935</label>
      <onclick>Skin.ToggleSetting(TWC.ShowAlertRSS)</onclick>
      <selected>!Skin.HasSetting(TWC.ShowAlertRSS)</selected>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31906] - $LOCALIZE[31913])</visible>
    </control>
  </include>
  <include name="TWC.AlertsRSS">
    <control type="fadelabel">
      <description>alert fadelabel</description>
      <posx>300</posx>
      <posy>45</posy>
      <height>30</height>
      <width>790</width>
      <label>$INFO[Window.Property(Alerts.RSS)]</label>
      <align>left</align>
      <aligny>center</aligny>
      <font>Font_Info</font>
      <textcolor>white</textcolor>
      <shadowcolor>black</shadowcolor>
      <visible>!IsEmpty(Window.Property(Alerts))</visible>
      <scrollout>true</scrollout>
      <pauseatend>2000</pauseatend>
      <visible>!StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31906] - $LOCALIZE[31913]) + !IsEmpty(Window.Property(Alerts.RSS)) + !Skin.HasSetting(TWC.ShowAlertRSS)</visible>
    </control>
  </include>
  <include name="TWC.Alerts">
    <control type="group">
      <posx>290</posx>
      <posy>60</posy>
      <onright>8001</onright>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31906] - $LOCALIZE[31913])</visible>
      <animation effect="fade" reversible="true" time="300">VisibleChange</animation>
      <control type="textbox" id="800">
        <description>alert text</description>
        <posx>0</posx>
        <posy>40</posy>
        <width>790</width>
        <height>535</height>
        <font>Font_Reg20</font>
        <textcolor>white</textcolor>
        <pagecontrol>8001</pagecontrol>
        <scrolltime>200</scrolltime>
        <align>left</align>
        <aligny>top</aligny>
        <spinheight>-5</spinheight>
        <info>Window.Property(Alerts)</info>
        <autoscroll time="2000" delay="15000" repeat="15000">!Control.Hasfocus(8000)</autoscroll>
      </control>
      <control type="scrollbar" id="8001">
        <description>Scroll Bar</description>
        <posx>800</posx>
        <posy>40</posy>
        <height>535</height>
        <include>TWC.ScrollbarCommon</include>
        <onleft>2000</onleft>
        <onright>2000</onright>
      </control>
    </control>
  </include>
  <include name="TWC.Current.Button">
    <control type="button" id="13205">
      <include>TWC.ButtonCommon</include>
      <label>31905</label>
      <onclick>SetProperty(Weather.CurrentView,$LOCALIZE[31905] $LOCALIZE[31912])</onclick>
      <onclick>SetProperty(Weather.CurrentViewMenu,$LOCALIZE[31905])</onclick>
    </control>
  </include>
  <include name="TWC.Current.ButtonXLabel">
    <control type="button">
      <include>TWC.ButtonXLabelCommon</include>
      <label>31912</label>
      <visible>!ControlGroup(2000).HasFocus(13205)</visible>
    </control>
    <control type="button">
      <textcolor>FF262728</textcolor>
      <include>TWC.ButtonXLabelCommon</include>
      <label>31912</label>
      <visible>ControlGroup(2000).HasFocus(13205)</visible>
    </control>
  </include>
  <include name="TWC.Current.SettingsButtons">
    <control type="radiobutton" id="91205">
      <description>show hourly</description>
      <include>Objects_MediaMenuButton</include>
      <label>31936</label>
      <onclick>Skin.ToggleSetting(TWC.ShowCurrentHourly)</onclick>
      <selected>Skin.HasSetting(TWC.ShowCurrentHourly)</selected>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31905] $LOCALIZE[31912])</visible>
    </control>
  </include>
  <include name="TWC.Current.DailyWeekdayBG">
    <colordiffuse>30FFFFFF</colordiffuse>
    <texture border="10">weather.com plus/DailyWeekdayBG.png</texture>
    <include>TWC.Current.DailyWeekendBG</include>
  </include>
  <include name="TWC.Current.DailyWeekendBG">
    <posy>0</posy>
    <posx>0</posx>
    <width>114</width>
    <height>278</height>
    <colordiffuse>30FFFFFF</colordiffuse>
    <texture border="10">weather.com plus/DailyWeekendBG.png</texture>
    <aspectratio>stretch</aspectratio>
    <include>TWC.Current.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Current.DailySeperator">
    <control type="image">
      <posx>114</posx>
      <posy>5</posy>
      <width>4</width>
      <height>285</height>
      <texture>views/separator_vertical.png</texture>
    </control>
  </include>
  <include name="TWC.Current.DailyPrecipUnitsCommon">
    <posx>19</posx>
    <posy>140</posy>
    <!--245-->
    <textcolor>grey</textcolor>
    <font>Font_Reg12</font>
    <label>%</label>
    <include>TWC.Current.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Current.DailyPrecipitationCommon">
    <posy>140</posy>
    <!--245-->
    <height>30</height>
    <textcolor>grey</textcolor>
    <font>Font_Bold24</font>
    <include>TWC.Current.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Current.DailyHighLabelsCommon">
    <posy>190</posy>
    <!--160-->
    <height>30</height>
    <textcolor>white</textcolor>
    <font>Font_Bold35</font>
    <include>TWC.Current.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Current.DailyHighUnitsCommon">
    <posx>39</posx>
    <posy>187</posy>
    <!--157-->
    <textcolor>white</textcolor>
    <font>Font_Info</font>
    <info>System.TemperatureUnits</info>
    <include>TWC.Current.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Current.DailyLowUnitsCommon">
    <posx>32</posx>
    <posy>236</posy>
    <!--203-->
    <textcolor>grey2</textcolor>
    <font>Font_Reg12</font>
    <info>System.TemperatureUnits</info>
    <include>TWC.Current.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Current.DailyLowLabelsCommon">
    <posy>240</posy>
    <!--205-->
    <height>30</height>
    <textcolor>grey2</textcolor>
    <font>Font_Bold28</font>
    <include>TWC.Current.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Current.DailyIconCommon">
    <posy>60</posy>
    <height>72</height>
    <aspectratio>keep</aspectratio>
    <include>TWC.Current.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Current.DailyDayLabelsCommon">
    <posx>-5</posx>
    <posy>5</posy>
    <height>20</height>
    <width>120</width>
    <align>center</align>
    <aligny>center</aligny>
    <textcolor>grey</textcolor>
    <shadowcolor>black</shadowcolor>
    <font>Font_Reg20</font>
  </include>
  <include name="TWC.Current.DailyDateLabelsCommon">
    <posy>25</posy>
    <font>Font_Info</font>
    <include>TWC.Current.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Current.ConditionLabelsCommon">
    <posx>0</posx>
    <posy>-90</posy>
    <height>30</height>
    <width>300</width>
    <font>Font_Reg20</font>
    <align>right</align>
    <aligny>center</aligny>
    <textcolor>grey2</textcolor>
    <shadowcolor>black</shadowcolor>
    <focusedcolor>grey2</focusedcolor>
    <texturefocus>-</texturefocus>
    <texturenofocus>-</texturenofocus>
  </include>
  <include name="TWC.Current.ConditionValuesCommon">
    <align>left</align>
    <textcolor>white</textcolor>
    <shadowcolor>black</shadowcolor>
    <include>TWC.Current.ConditionLabelsCommon</include>
  </include>
  <include name="TWC.Current">
    <control type="group">
      <posx>290</posx>
      <posy>60</posy>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31905] $LOCALIZE[31912])</visible>
      <animation effect="fade" reversible="true" time="300">VisibleChange</animation>
      <control type="group">
        <posx>-30</posx>
        <posy>-20</posy>
        <control type="group">
          <posx>10</posx>
          <control type="label">
            <description>current temp value</description>
            <posx>30</posx>
            <posy>90</posy>
            <width>140</width>
            <height>40</height>
            <font>Font_MainMenu</font>
            <align>center</align>
            <aligny>center</aligny>
            <label>$INFO[Window.Property(Current.Temperature)]</label>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <animation effect="slide" start="0,0" end="-17,0" time="0" condition="IntegerGreaterThan(Window.Property(Current.Temperature),-100) + !IntegerGreaterThan(Window.Property(Current.Temperature),9)">Conditional</animation>
          </control>
          <control type="label">
            <description>current temp value units</description>
            <posx>76</posx>
            <posy>90</posy>
            <width>140</width>
            <height>20</height>
            <font>Font_Reg25</font>
            <align>center</align>
            <aligny>center</aligny>
            <info>System.TemperatureUnits</info>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <animation effect="slide" start="0,0" end="28,0" time="0" condition="IntegerGreaterThan(Window.Property(Current.Temperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-30,0" time="0" condition="IntegerGreaterThan(Window.Property(Current.Temperature),-10) + !IntegerGreaterThan(Window.Property(Current.Temperature),9)">Conditional</animation>
          </control>
          <control type="label">
            <description>current feels like label</description>
            <posx>30</posx>
            <posy>140</posy>
            <width>140</width>
            <height>40</height>
            <font>Font_Reg20</font>
            <align>center</align>
            <aligny>center</aligny>
            <label>[B]$LOCALIZE[402][/B]</label>
            <textcolor>grey2</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>current feels like value</description>
            <posx>30</posx>
            <posy>171</posy>
            <width>140</width>
            <height>40</height>
            <font>Font_Bold35</font>
            <align>center</align>
            <aligny>center</aligny>
            <label>$INFO[Window.Property(Current.FeelsLike)]</label>
            <textcolor>grey2</textcolor>
            <shadowcolor>black</shadowcolor>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Current.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Current.FeelsLike),9)">Conditional</animation>
          </control>
          <control type="label">
            <description>current feels like value units</description>
            <posx>61</posx>
            <posy>166</posy>
            <width>140</width>
            <height>30</height>
            <info>System.TemperatureUnits</info>
            <align>center</align>
            <aligny>center</aligny>
            <font>Font_Info</font>
            <textcolor>grey2</textcolor>
            <shadowcolor>black</shadowcolor>
            <animation effect="slide" start="0,0" end="11,0" time="0" condition="IntegerGreaterThan(Window.Property(Current.FeelsLike),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Current.FeelsLike),-10) + !IntegerGreaterThan(Window.Property(Current.FeelsLike),9)">Conditional</animation>
          </control>
        </control>
        <control type="image">
          <description>current weather icon</description>
          <posx>180</posx>
          <posy>35</posy>
          <width>230</width>
          <height>180</height>
          <info>Window.Property(Current.ConditionIcon)</info>
          <aspectratio>keep</aspectratio>
          <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
        </control>
        <control type="multiimage">
          <description>current weather icon</description>
          <posx>180</posx>
          <posy>35</posy>
          <width>230</width>
          <height>180</height>
          <timeperimage>75</timeperimage>
          <randomize>false</randomize>
          <fadetime>0</fadetime>
          <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Current.FanartCode)]</imagepath>
          <aspectratio>keep</aspectratio>
          <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
        </control>
        <control type="label">
          <description>current condition label</description>
          <posx>45</posx>
          <posy>240</posy>
          <width>340</width>
          <height>50</height>
          <label>$INFO[Window.Property(Current.Condition)]</label>
          <wrapmultiline>true</wrapmultiline>
          <font>Font_Reg25</font>
          <align>center</align>
          <aligny>top</aligny>
          <textcolor>white</textcolor>
          <shadowcolor>black</shadowcolor>
        </control>
        <control type="image">
          <posx>20</posx>
          <posy>310</posy>
          <width>870</width>
          <height>3</height>
          <texture>separator.png</texture>
        </control>
        <control type="image">
          <posx>415</posx>
          <posy>40</posy>
          <width>4</width>
          <height>280</height>
          <texture>views/separator_vertical.png</texture>
        </control>
      </control>
      <control type="grouplist">
        <posx>278</posx>
        <posy>20</posy>
        <width>300</width>
        <itemgap>0</itemgap>
        <orientation>vertical</orientation>
        <control type="button">
          <description>current dew label</description>
          <include>TWC.Current.ConditionLabelsCommon</include>
          <label>$LOCALIZE[405] :</label>
        </control>
        <control type="button">
          <description>current humidity label</description>
          <include>TWC.Current.ConditionLabelsCommon</include>
          <label>$LOCALIZE[406] :</label>
        </control>
        <control type="button">
          <description>current UV Index label</description>
          <include>TWC.Current.ConditionLabelsCommon</include>
          <label>$LOCALIZE[403] :</label>
        </control>
        <control type="button">
          <description>current Wind label</description>
          <include>TWC.Current.ConditionLabelsCommon</include>
          <label>$LOCALIZE[404] :</label>
        </control>
        <control type="button">
          <description>current Precipitation label</description>
          <include>TWC.Current.ConditionLabelsCommon</include>
          <label>$LOCALIZE[33021] :</label>
          <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
        </control>
        <control type="button">
          <description>barometric pressure</description>
          <include>TWC.Current.ConditionLabelsCommon</include>
          <label>$LOCALIZE[31940] :</label>
          <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
        </control>
        <control type="button">
          <description>visibility</description>
          <include>TWC.Current.ConditionLabelsCommon</include>
          <label>$LOCALIZE[31941] :</label>
          <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
        </control>
        <control type="button">
          <description>current Sunrise label</description>
          <include>TWC.Current.ConditionLabelsCommon</include>
          <label>$LOCALIZE[33027] :</label>
          <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
        </control>
        <control type="button">
          <description>current Sunset label</description>
          <include>TWC.Current.ConditionLabelsCommon</include>
          <label>$LOCALIZE[33028] :</label>
          <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
        </control>
      </control>
      <control type="grouplist">
        <posx>585</posx>
        <posy>20</posy>
        <width>300</width>
        <itemgap>0</itemgap>
        <orientation>vertical</orientation>
        <control type="label">
          <description>current dew Value</description>
          <include>TWC.Current.ConditionValuesCommon</include>
          <label>$INFO[Window.Property(Current.DewPoint)]$INFO[System.TemperatureUnits]</label>
        </control>
        <control type="label">
          <description>current humidity Value</description>
          <include>TWC.Current.ConditionValuesCommon</include>
          <label>$INFO[Window.Property(Current.Humidity)]</label>
        </control>
        <control type="label">
          <description>current UV Index Value</description>
          <include>TWC.Current.ConditionValuesCommon</include>
          <label>$INFO[Window.Property(Current.UVIndex)]</label>
        </control>
        <control type="label">
          <description>current Wind Value</description>
          <include>TWC.Current.ConditionValuesCommon</include>
          <label>$INFO[Window.Property(Current.Wind)]</label>
        </control>
        <control type="label">
          <description>current Precip Value</description>
          <include>TWC.Current.ConditionValuesCommon</include>
          <label>$INFO[Window.Property(36Hour.1.Precipitation),,%]</label>
          <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
        </control>
        <control type="label">
          <description>current Pressure Value</description>
          <include>TWC.Current.ConditionValuesCommon</include>
          <label>$INFO[Window.Property(Current.Pressure)]</label>
          <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
        </control>
        <control type="label">
          <description>current Visibilty Value</description>
          <include>TWC.Current.ConditionValuesCommon</include>
          <label>$INFO[Window.Property(Current.Visibility)]</label>
          <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
        </control>
        <control type="label">
          <description>current Sunrise Value</description>
          <include>TWC.Current.ConditionValuesCommon</include>
          <label>$INFO[Window.Property(Current.Sunrise)]</label>
          <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
        </control>
        <control type="label">
          <description>current Sunset Value</description>
          <include>TWC.Current.ConditionValuesCommon</include>
          <label>$INFO[Window.Property(Current.Sunset)]</label>
          <visible>!IsEmpty(Window.Property(36Hour.IsFetched))</visible>
        </control>
      </control>
      <control type="label">
        <description>Loading label</description>
        <posy>400</posy>
        <include>TWC.LoadingLabelCommon</include>
        <visible>[IsEmpty(Window.Property(Daily.IsFetched)) + !Skin.HasSetting(TWC.ShowCurrentHourly)] | [IsEmpty(Window.Property(Hourly.IsFetched)) + Skin.HasSetting(TWC.ShowCurrentHourly)]</visible>
      </control>
      <!-- Daily forecast -->
      <control type="grouplist">
        <posx>-11</posx>
        <posy>305</posy>
        <width>840</width>
        <itemgap>0</itemgap>
        <orientation>horizontal</orientation>
        <visible>!Skin.HasSetting(TWC.ShowCurrentHourly) + !IsEmpty(Window.Property(Daily.IsFetched))</visible>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
            <visible>!StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17]) + !StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[11])</visible>
          </control>
          <control type="image">
            <description>weekend image</description>
            <include>TWC.Current.DailyWeekendBG</include>
            <visible>StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17]) | StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[11])</visible>
          </control>
          <control type="label">
            <description>Day label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Daily.1.ShortDay)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.1.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Daily.1.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.1.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.1.HighTemperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <info>System.TemperatureUnits</info>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.1.HighTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.1.LowTemperature)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.1.LowTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Daily.1.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.1.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.1.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
            <visible>!StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="image">
            <description>weekend image</description>
            <include>TWC.Current.DailyWeekendBG</include>
            <visible>StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="label">
            <description>Day label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Daily.2.ShortDay)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.2.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Daily.2.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.2.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.2.HighTemperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.2.HighTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.2.LowTemperature)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.2.LowTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Daily.2.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.2.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.2.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
            <visible>!StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="image">
            <description>weekend image</description>
            <include>TWC.Current.DailyWeekendBG</include>
            <visible>StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="label">
            <description>Day label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Daily.3.ShortDay)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.3.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Daily.3.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.3.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.3.HighTemperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),-1000) + !IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.3.HighTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.3.LowTemperature)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),-1000) + !IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.3.LowTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Daily.3.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.3.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.3.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
            <visible>!StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="image">
            <description>weekend image</description>
            <include>TWC.Current.DailyWeekendBG</include>
            <visible>StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="label">
            <description>Day label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Daily.4.ShortDay)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.4.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Daily.4.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.4.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.4.HighTemperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.4.HighTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.4.LowTemperature)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.4.LowTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Daily.4.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.4.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.4.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
            <visible>!StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="image">
            <description>weekend image</description>
            <include>TWC.Current.DailyWeekendBG</include>
            <visible>StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="label">
            <description>Day label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Daily.5.ShortDay)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.5.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Daily.5.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.5.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.5.HighTemperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.5.HighTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.5.LowTemperature)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.5.LowTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Daily.5.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.5.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.5.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
            <visible>!StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="image">
            <description>weekend image</description>
            <include>TWC.Current.DailyWeekendBG</include>
            <visible>StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="label">
            <description>Day label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Daily.6.ShortDay)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.6.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Daily.6.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.6.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.6.HighTemperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.6.HighTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.6.LowTemperature)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.6.LowTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Daily.6.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.6.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.6.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
            <visible>!StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="image">
            <description>weekend image</description>
            <include>TWC.Current.DailyWeekendBG</include>
            <visible>StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
          </control>
          <control type="label">
            <description>Day label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Daily.7.ShortDay)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.7.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Daily.7.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.7.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.7.HighTemperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.7.HighTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Daily.7.LowTemperature)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Daily.7.LowTemperature),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Daily.7.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.7.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.7.Precipitation),100)">Conditional</animation>
          </control>
        </control>
      </control>
      <!-- Hourly forecast -->
      <control type="grouplist">
        <posx>-11</posx>
        <posy>305</posy>
        <width>840</width>
        <itemgap>0</itemgap>
        <orientation>horizontal</orientation>
        <visible>Skin.HasSetting(TWC.ShowCurrentHourly) + !IsEmpty(Window.Property(Hourly.IsFetched))</visible>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
          </control>
          <control type="label">
            <description>Time label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Hourly.1.Time)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.1.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Hourly.1.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.1.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.1.Temperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.1.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.1.Temperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <info>System.TemperatureUnits</info>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.1.Temperature),9) + !IntegerGreaterThan(Window.Property(Hourly.1.Temperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.1.Temperature),-10) + !IntegerGreaterThan(Window.Property(Hourly.1.Temperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.1.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.1.Temperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.1.Temperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.1.FeelsLike)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.1.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.1.FeelsLike),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.1.FeelsLike),9) + !IntegerGreaterThan(Window.Property(Hourly.1.FeelsLike),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.1.FeelsLike),-10) + !IntegerGreaterThan(Window.Property(Hourly.1.FeelsLike),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.1.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.1.FeelsLike),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.1.FeelsLike),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Hourly.1.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Hourly.1.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Hourly.1.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
          </control>
          <control type="label">
            <description>Time label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Hourly.2.Time)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.2.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Hourly.2.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.2.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.2.Temperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.2.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.2.Temperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <info>System.TemperatureUnits</info>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.2.Temperature),9) + !IntegerGreaterThan(Window.Property(Hourly.2.Temperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.2.Temperature),-10) + !IntegerGreaterThan(Window.Property(Hourly.2.Temperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.2.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.2.Temperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.2.Temperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.2.FeelsLike)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.2.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.2.FeelsLike),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.2.FeelsLike),9) + !IntegerGreaterThan(Window.Property(Hourly.2.FeelsLike),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.2.FeelsLike),-10) + !IntegerGreaterThan(Window.Property(Hourly.2.FeelsLike),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.2.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.2.FeelsLike),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.2.FeelsLike),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Hourly.2.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Hourly.2.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Hourly.2.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
          </control>
          <control type="label">
            <description>Time label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Hourly.3.Time)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.3.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Hourly.3.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.3.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.3.Temperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.3.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.3.Temperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <info>System.TemperatureUnits</info>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.3.Temperature),9) + !IntegerGreaterThan(Window.Property(Hourly.3.Temperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.3.Temperature),-10) + !IntegerGreaterThan(Window.Property(Hourly.3.Temperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.3.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.3.Temperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.3.Temperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.3.FeelsLike)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.3.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.3.FeelsLike),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.3.FeelsLike),9) + !IntegerGreaterThan(Window.Property(Hourly.3.FeelsLike),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.3.FeelsLike),-10) + !IntegerGreaterThan(Window.Property(Hourly.3.FeelsLike),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.3.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.3.FeelsLike),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.3.FeelsLike),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Hourly.3.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Hourly.3.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Hourly.3.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
          </control>
          <control type="label">
            <description>Time label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Hourly.4.Time)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.4.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Hourly.4.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.4.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.4.Temperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.4.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.4.Temperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <info>System.TemperatureUnits</info>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.4.Temperature),9) + !IntegerGreaterThan(Window.Property(Hourly.4.Temperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.4.Temperature),-10) + !IntegerGreaterThan(Window.Property(Hourly.4.Temperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.4.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.4.Temperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.4.Temperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.4.FeelsLike)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.4.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.4.FeelsLike),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.4.FeelsLike),9) + !IntegerGreaterThan(Window.Property(Hourly.4.FeelsLike),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.4.FeelsLike),-10) + !IntegerGreaterThan(Window.Property(Hourly.4.FeelsLike),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.4.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.4.FeelsLike),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.4.FeelsLike),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Hourly.4.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Hourly.4.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Hourly.4.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
          </control>
          <control type="label">
            <description>Time label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Hourly.5.Time)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.5.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Hourly.5.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.5.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.5.Temperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.5.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.5.Temperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <info>System.TemperatureUnits</info>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.5.Temperature),9) + !IntegerGreaterThan(Window.Property(Hourly.5.Temperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.5.Temperature),-10) + !IntegerGreaterThan(Window.Property(Hourly.5.Temperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.5.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.5.Temperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.5.Temperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.5.FeelsLike)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.5.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.5.FeelsLike),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.5.FeelsLike),9) + !IntegerGreaterThan(Window.Property(Hourly.5.FeelsLike),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.5.FeelsLike),-10) + !IntegerGreaterThan(Window.Property(Hourly.5.FeelsLike),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.5.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.5.FeelsLike),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.5.FeelsLike),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Hourly.5.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Hourly.5.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Hourly.5.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
          </control>
          <control type="label">
            <description>Time label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Hourly.6.Time)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.6.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Hourly.6.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.6.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.6.Temperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.6.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.6.Temperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <info>System.TemperatureUnits</info>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.6.Temperature),9) + !IntegerGreaterThan(Window.Property(Hourly.6.Temperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.6.Temperature),-10) + !IntegerGreaterThan(Window.Property(Hourly.6.Temperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.6.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.6.Temperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.6.Temperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.6.FeelsLike)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.6.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.6.FeelsLike),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.6.FeelsLike),9) + !IntegerGreaterThan(Window.Property(Hourly.6.FeelsLike),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.6.FeelsLike),-10) + !IntegerGreaterThan(Window.Property(Hourly.6.FeelsLike),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.6.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.6.FeelsLike),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.6.FeelsLike),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Hourly.6.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Hourly.6.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Hourly.6.Precipitation),100)">Conditional</animation>
          </control>
          <!--include>TWC.Current.DailySeperator</include-->
        </control>
        <control type="group">
          <width>120</width>
          <control type="image">
            <description>weekday image</description>
            <include>TWC.Current.DailyWeekdayBG</include>
          </control>
          <control type="label">
            <description>Time label</description>
            <include>TWC.Current.DailyDayLabelsCommon</include>
            <label>[B]$INFO[Window.Property(Hourly.7.Time)][/B]</label>
          </control>
          <control type="label">
            <description>Date label</description>
            <include>TWC.Current.DailyDateLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.7.ShortDate)]</label>
          </control>
          <control type="image">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <texture>$INFO[Window.Property(Hourly.7.OutlookIcon)]</texture>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>Weather image</description>
            <include>TWC.Current.DailyIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.7.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.7.Temperature)]</label>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.7.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.7.Temperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>High Temp label</description>
            <include>TWC.Current.DailyHighUnitsCommon</include>
            <info>System.TemperatureUnits</info>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.7.Temperature),9) + !IntegerGreaterThan(Window.Property(Hourly.7.Temperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.7.Temperature),-10) + !IntegerGreaterThan(Window.Property(Hourly.7.Temperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.7.Temperature),-100) + !IntegerGreaterThan(Window.Property(Hourly.7.Temperature),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.7.Temperature),n/a)</visible>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowLabelsCommon</include>
            <label>$INFO[Window.Property(Hourly.7.FeelsLike)]</label>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.7.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.7.FeelsLike),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Low Temp label</description>
            <include>TWC.Current.DailyLowUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.7.FeelsLike),9) + !IntegerGreaterThan(Window.Property(Hourly.7.FeelsLike),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.7.FeelsLike),-10) + !IntegerGreaterThan(Window.Property(Hourly.7.FeelsLike),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Hourly.7.FeelsLike),-100) + !IntegerGreaterThan(Window.Property(Hourly.7.FeelsLike),-10)">Conditional</animation>
            <visible>!StringCompare(Window.Property(Hourly.7.FeelsLike),n/a)</visible>
          </control>
          <control type="label">
            <description>precip label</description>
            <include>TWC.Current.DailyPrecipitationCommon</include>
            <label>$INFO[Window.Property(Hourly.7.Precipitation)]</label>
          </control>
          <control type="label">
            <description>precip units label</description>
            <include>TWC.Current.DailyPrecipUnitsCommon</include>
            <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Hourly.7.Precipitation),0)">Conditional</animation>
            <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Hourly.7.Precipitation),100)">Conditional</animation>
          </control>
        </control>
      </control>
    </control>
  </include>
  <include name="TWC.Daily.Button">
    <control type="button" id="13204">
      <include>TWC.ButtonCommon</include>
      <label>31904</label>
      <onclick>SetProperty(Weather.CurrentView,$LOCALIZE[31904] $LOCALIZE[31911])</onclick>
      <onclick>SetProperty(Weather.CurrentViewMenu,$LOCALIZE[31904])</onclick>
    </control>
  </include>
  <include name="TWC.Daily.ButtonXLabel">
    <control type="button">
      <include>TWC.ButtonXLabelCommon</include>
      <label>31911</label>
      <visible>!ControlGroup(2000).HasFocus(13204)</visible>
    </control>
    <control type="button">
      <textcolor>FF262728</textcolor>
      <include>TWC.ButtonXLabelCommon</include>
      <label>31911</label>
      <visible>ControlGroup(2000).HasFocus(13204)</visible>
    </control>
  </include>
  <include name="TWC.Daily.SettingsButtons">
    <control type="radiobutton" id="91204">
      <description>daily details</description>
      <include>Objects_MediaMenuButton</include>
      <label>31934</label>
      <onclick>Skin.ToggleSetting(TWC.ShowDailyDetails)</onclick>
      <selected>!Skin.HasSetting(TWC.ShowDailyDetails)</selected>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31904] $LOCALIZE[31911])</visible>
    </control>
  </include>
  <include name="TWC.Daily.DailyWeekdayBG">
    <colordiffuse>30FFFFFF</colordiffuse>
    <texture border="10">weather.com plus/DailyWeekdayBG.png</texture>
    <include>TWC.Daily.DailyWeekendBG</include>
  </include>
  <include name="TWC.Daily.DailyWeekendBG">
    <posx>0</posx>
    <posy>0</posy>
    <width>159</width>
    <height>270</height>
    <colordiffuse>30FFFFFF</colordiffuse>
    <texture border="10">weather.com plus/DailyWeekendBG.png</texture>
    <aspectratio>stretch</aspectratio>
    <include>TWC.Daily.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Daily.DailySeperator">
    <control type="image">
      <posx>162</posx>
      <posy>5</posy>
      <width>4</width>
      <height>265</height>
      <texture>views/separator_vertical.png</texture>
    </control>
  </include>
  <include name="TWC.Daily.DailyHorizontalSeperator">
    <control type="image">
      <posx>-20</posx>
      <posy>268</posy>
      <width>880</width>
      <height>4</height>
      <texture>separator.png</texture>
    </control>
  </include>
  <include name="TWC.Daily.DailyPrecipitationLabel">
    <control type="label">
      <description>precip label</description>
      <posx>40</posx>
      <posy>63</posy>
      <!--245-->
      <align>center</align>
      <aligny>center</aligny>
      <textcolor>grey</textcolor>
      <shadowcolor>black</shadowcolor>
      <font>Font_Info</font>
      <include>TWC.Daily.DailyDayLabelsCommon</include>
      <label>[B]$LOCALIZE[33022][/B]</label>
    </control>
  </include>
  <include name="TWC.Daily.DailyPrecipUnitsCommon">
    <posx>64</posx>
    <posy>80</posy>
    <!--245-->
    <textcolor>grey</textcolor>
    <font>Font_Reg12</font>
    <label>%</label>
    <include>TWC.Daily.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Daily.DailyPrecipitationCommon">
    <posx>40</posx>
    <posy>80</posy>
    <!--245-->
    <height>30</height>
    <textcolor>grey</textcolor>
    <font>Font_Bold24</font>
    <include>TWC.Daily.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Daily.DailyHighLabelsCommon">
    <posy>185</posy>
    <!--160-->
    <height>30</height>
    <textcolor>white</textcolor>
    <font>Font_Bold35</font>
    <include>TWC.Daily.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Daily.DailyHighUnitsCommon">
    <posx>44</posx>
    <posy>182</posy>
    <!--157-->
    <textcolor>white</textcolor>
    <font>Font_Info</font>
    <info>System.TemperatureUnits</info>
    <include>TWC.Daily.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Daily.DailyLowUnitsCommon">
    <posx>37</posx>
    <posy>226</posy>
    <!--203-->
    <textcolor>grey2</textcolor>
    <font>Font_Reg12</font>
    <info>System.TemperatureUnits</info>
    <include>TWC.Daily.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Daily.DailyLowLabelsCommon">
    <posy>230</posy>
    <!--205-->
    <height>30</height>
    <textcolor>grey2</textcolor>
    <font>Font_Bold28</font>
    <include>TWC.Daily.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Daily.DailyIconCommon">
    <posx>-5</posx>
    <posy>60</posy>
    <width>100</width>
    <height>72</height>
    <aspectratio>keep</aspectratio>
    <include>TWC.Daily.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Daily.DailyOutlook">
    <posx>5</posx>
    <posy>135</posy>
    <width>149</width>
    <height>45</height>
    <aligny>top</aligny>
    <font>Font_Info</font>
    <include>TWC.Daily.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Daily.DailyDayLabelsCommon">
    <posx>0</posx>
    <posy>5</posy>
    <height>20</height>
    <width>159</width>
    <align>center</align>
    <aligny>center</aligny>
    <textcolor>grey</textcolor>
    <shadowcolor>black</shadowcolor>
    <font>Font_Reg20</font>
    <wrapmultiline>true</wrapmultiline>
  </include>
  <include name="TWC.Daily.DailyDateLabelsCommon">
    <posy>25</posy>
    <font>Font_Info</font>
    <include>TWC.Daily.DailyDayLabelsCommon</include>
  </include>
  <include name="TWC.Daily.HeadingCommon">
    <posx>0</posx>
    <posy>-10</posy>
    <width>110</width>
    <height>40</height>
    <font>Font_Info</font>
    <textcolor>grey2</textcolor>
    <shadowcolor>black</shadowcolor>
    <align>center</align>
    <aligny>top</aligny>
    <wrapmultiline>true</wrapmultiline>
  </include>
  <include name="TWC.Daily.ListDay">
    <posx>0</posx>
    <posy>0</posy>
    <width>110</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <shadowcolor>black</shadowcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
  </include>
  <include name="TWC.Daily.ListNoFocusTexture">
    <control type="image">
      <posx>0</posx>
      <posy>0</posy>
      <width>785</width>
      <height>80</height>
      <texture border="5">MenuItemNF.png</texture>
    </control>
  </include>
  <include name="TWC.Daily.ListConditionTexture">
    <posx>120</posx>
    <posy>0</posy>
    <width>220</width>
    <height>80</height>
    <colordiffuse>33FFFFFF</colordiffuse>
    <texture border="5">StackFO.png</texture>
  </include>
  <include name="TWC.Daily.ListConditionWeekendTexture">
    <texture border="5">weather.com plus/DailyWeekendListBG.png</texture>
    <include>TWC.Daily.ListConditionTexture</include>
  </include>
  <include name="TWC.Daily.ListOutlookIcon">
    <posx>130</posx>
    <posy>0</posy>
    <width>64</width>
    <height>80</height>
    <align>center</align>
    <aligny>center</aligny>
    <aspectratio>keep</aspectratio>
  </include>
  <include name="TWC.Daily.ListOutlook">
    <posx>210</posx>
    <posy>0</posy>
    <width>120</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
    <wrapmultiline>true</wrapmultiline>
  </include>
  <include name="TWC.Daily.ListHighTemp">
    <posx>340</posx>
    <posy>0</posy>
    <width>90</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
  </include>
  <include name="TWC.Daily.ListLowTempTexture">
    <colordiffuse>33FFFFFF</colordiffuse>
    <texture border="5">StackFO.png</texture>
    <include>TWC.Daily.ListLowTemp</include>
  </include>
  <include name="TWC.Daily.ListLowTempWeekendTexture">
    <texture border="5">weather.com plus/DailyWeekendListBG.png</texture>
    <include>TWC.Daily.ListLowTempTexture</include>
  </include>
  <include name="TWC.Daily.ListLowTemp">
    <posx>430</posx>
    <posy>0</posy>
    <width>90</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
  </include>
  <include name="TWC.Daily.ListPrecipitation">
    <posx>520</posx>
    <posy>0</posy>
    <width>90</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
  </include>
  <include name="TWC.Daily.ListWindTexture">
    <posx>615</posx>
    <posy>0</posy>
    <width>175</width>
    <height>80</height>
    <colordiffuse>33FFFFFF</colordiffuse>
    <texture border="5">StackFO.png</texture>
  </include>
  <include name="TWC.Daily.ListWindWeekendTexture">
    <texture border="5">weather.com plus/DailyWeekendListBG.png</texture>
    <include>TWC.Daily.ListWindTexture</include>
  </include>
  <include name="TWC.Daily.ListWind">
    <posx>620</posx>
    <posy>0</posy>
    <width>165</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
    <wrapmultiline>true</wrapmultiline>
  </include>
  <include name="TWC.Daily">
    <control type="group">
      <posx>290</posx>
      <posy>60</posy>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31904] $LOCALIZE[31911])</visible>
      <animation effect="fade" reversible="true" time="300">VisibleChange</animation>
      <control type="label">
        <description>loading label</description>
        <include>TWC.LoadingLabelCommon</include>
        <visible>IsEmpty(Window.Property(Daily.IsFetched))</visible>
      </control>
      <!-- brief view -->
      <control type="group">
        <posx>-5</posx>
        <posy>35</posy>
        <visible>Skin.HasSetting(TWC.ShowDailyDetails) + !IsEmpty(Window.Property(Daily.IsFetched))</visible>
        <!--include>TWC.Daily.DailyHorizontalSeperator</include-->
        <control type="grouplist">
          <posx>0</posx>
          <posy>0</posy>
          <width>840</width>
          <itemgap>0</itemgap>
          <orientation>horizontal</orientation>
          <control type="group">
            <width>165</width>
            <control type="image">
              <description>weekday image</description>
              <include>TWC.Daily.DailyWeekdayBG</include>
              <visible>!StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17]) + !StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[11])</visible>
            </control>
            <control type="image">
              <description>weekend image</description>
              <include>TWC.Daily.DailyWeekendBG</include>
              <visible>StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17]) | StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[11])</visible>
            </control>
            <control type="label">
              <description>Day label</description>
              <include>TWC.Daily.DailyDayLabelsCommon</include>
              <label>[B]$INFO[Window.Property(Daily.1.LongDay)][/B]</label>
            </control>
            <control type="label">
              <description>Date label</description>
              <include>TWC.Daily.DailyDateLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.1.ShortDate)]</label>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <texture>$INFO[Window.Property(Daily.1.OutlookIcon)]</texture>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.1.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>Outlook</description>
              <include>TWC.Daily.DailyOutlook</include>
              <label>$INFO[Window.Property(Daily.1.Outlook)]</label>
            </control>
            <include>TWC.Daily.DailyPrecipitationLabel</include>
            <control type="label">
              <description>precip label</description>
              <include>TWC.Daily.DailyPrecipitationCommon</include>
              <label>$INFO[Window.Property(Daily.1.Precipitation)]</label>
            </control>
            <control type="label">
              <description>precip units label</description>
              <include>TWC.Daily.DailyPrecipUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.1.Precipitation),0)">Conditional</animation>
              <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.1.Precipitation),100)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.1.HighTemperature)]</label>
              <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighUnitsCommon</include>
              <info>System.TemperatureUnits</info>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.1.HighTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.1.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.1.LowTemperature)]</label>
              <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.1.LowTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.1.LowTemperature),n/a)</visible>
            </control>
            <!--include>TWC.Daily.DailySeperator</include-->
          </control>
          <control type="group">
            <width>165</width>
            <control type="image">
              <description>weekday image</description>
              <include>TWC.Daily.DailyWeekdayBG</include>
              <visible>!StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <description>weekend image</description>
              <include>TWC.Daily.DailyWeekendBG</include>
              <visible>StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <description>Day label</description>
              <include>TWC.Daily.DailyDayLabelsCommon</include>
              <label>[B]$INFO[Window.Property(Daily.2.LongDay)][/B]</label>
            </control>
            <control type="label">
              <description>Date label</description>
              <include>TWC.Daily.DailyDateLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.2.ShortDate)]</label>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <texture>$INFO[Window.Property(Daily.2.OutlookIcon)]</texture>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.2.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>Outlook</description>
              <include>TWC.Daily.DailyOutlook</include>
              <label>$INFO[Window.Property(Daily.2.Outlook)]</label>
            </control>
            <include>TWC.Daily.DailyPrecipitationLabel</include>
            <control type="label">
              <description>precip label</description>
              <include>TWC.Daily.DailyPrecipitationCommon</include>
              <label>$INFO[Window.Property(Daily.2.Precipitation)]</label>
            </control>
            <control type="label">
              <description>precip units label</description>
              <include>TWC.Daily.DailyPrecipUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.2.Precipitation),0)">Conditional</animation>
              <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.2.Precipitation),100)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.2.HighTemperature)]</label>
              <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighUnitsCommon</include>
              <info>System.TemperatureUnits</info>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.2.HighTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.2.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.2.LowTemperature)]</label>
              <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.2.LowTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.2.LowTemperature),n/a)</visible>
            </control>
            <!--include>TWC.Daily.DailySeperator</include-->
          </control>
          <control type="group">
            <width>165</width>
            <control type="image">
              <description>weekday image</description>
              <include>TWC.Daily.DailyWeekdayBG</include>
              <visible>!StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <description>weekend image</description>
              <include>TWC.Daily.DailyWeekendBG</include>
              <visible>StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <description>Day label</description>
              <include>TWC.Daily.DailyDayLabelsCommon</include>
              <label>[B]$INFO[Window.Property(Daily.3.LongDay)][/B]</label>
            </control>
            <control type="label">
              <description>Date label</description>
              <include>TWC.Daily.DailyDateLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.3.ShortDate)]</label>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <texture>$INFO[Window.Property(Daily.3.OutlookIcon)]</texture>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.3.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>Outlook</description>
              <include>TWC.Daily.DailyOutlook</include>
              <label>$INFO[Window.Property(Daily.3.Outlook)]</label>
            </control>
            <include>TWC.Daily.DailyPrecipitationLabel</include>
            <control type="label">
              <description>precip label</description>
              <include>TWC.Daily.DailyPrecipitationCommon</include>
              <label>$INFO[Window.Property(Daily.3.Precipitation)]</label>
            </control>
            <control type="label">
              <description>precip units label</description>
              <include>TWC.Daily.DailyPrecipUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.3.Precipitation),0)">Conditional</animation>
              <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.3.Precipitation),100)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.3.HighTemperature)]</label>
              <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighUnitsCommon</include>
              <info>System.TemperatureUnits</info>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.3.HighTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.3.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.3.LowTemperature)]</label>
              <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.3.LowTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.3.LowTemperature),n/a)</visible>
            </control>
            <!--include>TWC.Daily.DailySeperator</include-->
          </control>
          <control type="group">
            <width>165</width>
            <control type="image">
              <description>weekday image</description>
              <include>TWC.Daily.DailyWeekdayBG</include>
              <visible>!StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <description>weekend image</description>
              <include>TWC.Daily.DailyWeekendBG</include>
              <visible>StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <description>Day label</description>
              <include>TWC.Daily.DailyDayLabelsCommon</include>
              <label>[B]$INFO[Window.Property(Daily.4.LongDay)][/B]</label>
            </control>
            <control type="label">
              <description>Date label</description>
              <include>TWC.Daily.DailyDateLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.4.ShortDate)]</label>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <texture>$INFO[Window.Property(Daily.4.OutlookIcon)]</texture>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.4.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>Outlook</description>
              <include>TWC.Daily.DailyOutlook</include>
              <label>$INFO[Window.Property(Daily.4.Outlook)]</label>
            </control>
            <include>TWC.Daily.DailyPrecipitationLabel</include>
            <control type="label">
              <description>precip label</description>
              <include>TWC.Daily.DailyPrecipitationCommon</include>
              <label>$INFO[Window.Property(Daily.4.Precipitation)]</label>
            </control>
            <control type="label">
              <description>precip units label</description>
              <include>TWC.Daily.DailyPrecipUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.4.Precipitation),0)">Conditional</animation>
              <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.4.Precipitation),100)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.4.HighTemperature)]</label>
              <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighUnitsCommon</include>
              <info>System.TemperatureUnits</info>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.4.HighTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.4.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.4.LowTemperature)]</label>
              <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.4.LowTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.4.LowTemperature),n/a)</visible>
            </control>
            <!--include>TWC.Daily.DailySeperator</include-->
          </control>
          <control type="group">
            <width>165</width>
            <control type="image">
              <description>weekday image</description>
              <include>TWC.Daily.DailyWeekdayBG</include>
              <visible>!StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <description>weekend image</description>
              <include>TWC.Daily.DailyWeekendBG</include>
              <visible>StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <description>Day label</description>
              <include>TWC.Daily.DailyDayLabelsCommon</include>
              <label>[B]$INFO[Window.Property(Daily.5.LongDay)][/B]</label>
            </control>
            <control type="label">
              <description>Date label</description>
              <include>TWC.Daily.DailyDateLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.5.ShortDate)]</label>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <texture>$INFO[Window.Property(Daily.5.OutlookIcon)]</texture>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.5.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>Outlook</description>
              <include>TWC.Daily.DailyOutlook</include>
              <label>$INFO[Window.Property(Daily.5.Outlook)]</label>
            </control>
            <include>TWC.Daily.DailyPrecipitationLabel</include>
            <control type="label">
              <description>precip label</description>
              <include>TWC.Daily.DailyPrecipitationCommon</include>
              <label>$INFO[Window.Property(Daily.5.Precipitation)]</label>
            </control>
            <control type="label">
              <description>precip units label</description>
              <include>TWC.Daily.DailyPrecipUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.5.Precipitation),0)">Conditional</animation>
              <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.5.Precipitation),100)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.5.HighTemperature)]</label>
              <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighUnitsCommon</include>
              <info>System.TemperatureUnits</info>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.5.HighTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.5.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.5.LowTemperature)]</label>
              <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.5.LowTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.5.LowTemperature),n/a)</visible>
            </control>
          </control>
        </control>
      </control>
      <control type="group">
        <posx>-5</posx>
        <posy>312</posy>
        <visible>Skin.HasSetting(TWC.ShowDailyDetails) + !IsEmpty(Window.Property(Daily.IsFetched))</visible>
        <control type="grouplist">
          <posx>0</posx>
          <posy>0</posy>
          <width>840</width>
          <itemgap>0</itemgap>
          <orientation>horizontal</orientation>
          <control type="group">
            <width>165</width>
            <control type="image">
              <description>weekday image</description>
              <include>TWC.Daily.DailyWeekdayBG</include>
              <visible>!StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <description>weekend image</description>
              <include>TWC.Daily.DailyWeekendBG</include>
              <visible>StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <description>Day label</description>
              <include>TWC.Daily.DailyDayLabelsCommon</include>
              <label>[B]$INFO[Window.Property(Daily.6.LongDay)][/B]</label>
            </control>
            <control type="label">
              <description>Date label</description>
              <include>TWC.Daily.DailyDateLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.6.ShortDate)]</label>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <texture>$INFO[Window.Property(Daily.6.OutlookIcon)]</texture>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.6.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>Outlook</description>
              <include>TWC.Daily.DailyOutlook</include>
              <label>$INFO[Window.Property(Daily.6.Outlook)]</label>
            </control>
            <include>TWC.Daily.DailyPrecipitationLabel</include>
            <control type="label">
              <description>precip label</description>
              <include>TWC.Daily.DailyPrecipitationCommon</include>
              <label>$INFO[Window.Property(Daily.6.Precipitation)]</label>
            </control>
            <control type="label">
              <description>precip units label</description>
              <include>TWC.Daily.DailyPrecipUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.6.Precipitation),0)">Conditional</animation>
              <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.6.Precipitation),100)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.6.HighTemperature)]</label>
              <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighUnitsCommon</include>
              <info>System.TemperatureUnits</info>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.6.HighTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.6.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.6.LowTemperature)]</label>
              <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.6.LowTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.6.LowTemperature),n/a)</visible>
            </control>
            <!--include>TWC.Daily.DailySeperator</include-->
          </control>
          <control type="group">
            <width>165</width>
            <control type="image">
              <description>weekday image</description>
              <include>TWC.Daily.DailyWeekdayBG</include>
              <visible>!StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <description>weekend image</description>
              <include>TWC.Daily.DailyWeekendBG</include>
              <visible>StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <description>Day label</description>
              <include>TWC.Daily.DailyDayLabelsCommon</include>
              <label>[B]$INFO[Window.Property(Daily.7.LongDay)][/B]</label>
            </control>
            <control type="label">
              <description>Date label</description>
              <include>TWC.Daily.DailyDateLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.7.ShortDate)]</label>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <texture>$INFO[Window.Property(Daily.7.OutlookIcon)]</texture>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.7.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>Outlook</description>
              <include>TWC.Daily.DailyOutlook</include>
              <label>$INFO[Window.Property(Daily.7.Outlook)]</label>
            </control>
            <include>TWC.Daily.DailyPrecipitationLabel</include>
            <control type="label">
              <description>precip label</description>
              <include>TWC.Daily.DailyPrecipitationCommon</include>
              <label>$INFO[Window.Property(Daily.7.Precipitation)]</label>
            </control>
            <control type="label">
              <description>precip units label</description>
              <include>TWC.Daily.DailyPrecipUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.7.Precipitation),0)">Conditional</animation>
              <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.7.Precipitation),100)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.7.HighTemperature)]</label>
              <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighUnitsCommon</include>
              <info>System.TemperatureUnits</info>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.7.HighTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.7.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.7.LowTemperature)]</label>
              <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.7.LowTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.7.LowTemperature),n/a)</visible>
            </control>
            <!--include>TWC.Daily.DailySeperator</include-->
          </control>
          <control type="group">
            <width>165</width>
            <control type="image">
              <description>weekday image</description>
              <include>TWC.Daily.DailyWeekdayBG</include>
              <visible>!StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <description>weekend image</description>
              <include>TWC.Daily.DailyWeekendBG</include>
              <visible>StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <description>Day label</description>
              <include>TWC.Daily.DailyDayLabelsCommon</include>
              <label>[B]$INFO[Window.Property(Daily.8.LongDay)][/B]</label>
            </control>
            <control type="label">
              <description>Date label</description>
              <include>TWC.Daily.DailyDateLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.8.ShortDate)]</label>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <texture>$INFO[Window.Property(Daily.8.OutlookIcon)]</texture>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.8.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>Outlook</description>
              <include>TWC.Daily.DailyOutlook</include>
              <label>$INFO[Window.Property(Daily.8.Outlook)]</label>
            </control>
            <include>TWC.Daily.DailyPrecipitationLabel</include>
            <control type="label">
              <description>precip label</description>
              <include>TWC.Daily.DailyPrecipitationCommon</include>
              <label>$INFO[Window.Property(Daily.8.Precipitation)]</label>
            </control>
            <control type="label">
              <description>precip units label</description>
              <include>TWC.Daily.DailyPrecipUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.8.Precipitation),0)">Conditional</animation>
              <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.8.Precipitation),100)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.8.HighTemperature)]</label>
              <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.8.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.8.HighTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighUnitsCommon</include>
              <info>System.TemperatureUnits</info>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.8.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.8.HighTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.8.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.8.HighTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.8.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.8.HighTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.8.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.8.LowTemperature)]</label>
              <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.8.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.8.LowTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.8.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.8.LowTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.8.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.8.LowTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.8.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.8.LowTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.8.LowTemperature),n/a)</visible>
            </control>
            <!--include>TWC.Daily.DailySeperator</include-->
          </control>
          <control type="group">
            <width>165</width>
            <control type="image">
              <description>weekday image</description>
              <include>TWC.Daily.DailyWeekdayBG</include>
              <visible>!StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <description>weekend image</description>
              <include>TWC.Daily.DailyWeekendBG</include>
              <visible>StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <description>Day label</description>
              <include>TWC.Daily.DailyDayLabelsCommon</include>
              <label>[B]$INFO[Window.Property(Daily.9.LongDay)][/B]</label>
            </control>
            <control type="label">
              <description>Date label</description>
              <include>TWC.Daily.DailyDateLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.9.ShortDate)]</label>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <texture>$INFO[Window.Property(Daily.9.OutlookIcon)]</texture>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.9.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>Outlook</description>
              <include>TWC.Daily.DailyOutlook</include>
              <label>$INFO[Window.Property(Daily.9.Outlook)]</label>
            </control>
            <include>TWC.Daily.DailyPrecipitationLabel</include>
            <control type="label">
              <description>precip label</description>
              <include>TWC.Daily.DailyPrecipitationCommon</include>
              <label>$INFO[Window.Property(Daily.9.Precipitation)]</label>
            </control>
            <control type="label">
              <description>precip units label</description>
              <include>TWC.Daily.DailyPrecipUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.9.Precipitation),0)">Conditional</animation>
              <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.9.Precipitation),100)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.9.HighTemperature)]</label>
              <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.9.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.9.HighTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighUnitsCommon</include>
              <info>System.TemperatureUnits</info>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.9.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.9.HighTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.9.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.9.HighTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.9.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.9.HighTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.9.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.9.LowTemperature)]</label>
              <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.9.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.9.LowTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.9.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.9.LowTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.9.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.9.LowTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.9.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.9.LowTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.9.LowTemperature),n/a)</visible>
            </control>
            <!--include>TWC.Daily.DailySeperator</include-->
          </control>
          <control type="group">
            <width>165</width>
            <visible>!IsEmpty(Window.Property(Daily.10.LongDay))</visible>
            <control type="image">
              <description>weekday image</description>
              <include>TWC.Daily.DailyWeekdayBG</include>
              <visible>!StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <description>weekend image</description>
              <include>TWC.Daily.DailyWeekendBG</include>
              <visible>StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <description>Day label</description>
              <include>TWC.Daily.DailyDayLabelsCommon</include>
              <label>[B]$INFO[Window.Property(Daily.10.LongDay)][/B]</label>
            </control>
            <control type="label">
              <description>Date label</description>
              <include>TWC.Daily.DailyDateLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.10.ShortDate)]</label>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <texture>$INFO[Window.Property(Daily.10.OutlookIcon)]</texture>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="image">
              <description>Weather image</description>
              <include>TWC.Daily.DailyIconCommon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.10.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <description>Outlook</description>
              <include>TWC.Daily.DailyOutlook</include>
              <label>$INFO[Window.Property(Daily.10.Outlook)]</label>
            </control>
            <include>TWC.Daily.DailyPrecipitationLabel</include>
            <control type="label">
              <description>precip label</description>
              <include>TWC.Daily.DailyPrecipitationCommon</include>
              <label>$INFO[Window.Property(Daily.10.Precipitation)]</label>
            </control>
            <control type="label">
              <description>precip units label</description>
              <include>TWC.Daily.DailyPrecipUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-9,0" time="0" condition="StringCompare(Window.Property(Daily.10.Precipitation),0)">Conditional</animation>
              <animation effect="slide" start="0,0" end="8,0" time="0" condition="StringCompare(Window.Property(Daily.10.Precipitation),100)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.10.HighTemperature)]</label>
              <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.10.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.10.HighTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>High Temp label</description>
              <include>TWC.Daily.DailyHighUnitsCommon</include>
              <info>System.TemperatureUnits</info>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.10.HighTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.10.HighTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-24,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.10.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.10.HighTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.10.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.10.HighTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.10.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowLabelsCommon</include>
              <label>$INFO[Window.Property(Daily.10.LowTemperature)]</label>
              <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.10.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.10.LowTemperature),-1)">Conditional</animation>
            </control>
            <control type="label">
              <description>Low Temp label</description>
              <include>TWC.Daily.DailyLowUnitsCommon</include>
              <animation effect="slide" start="0,0" end="-10,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.10.LowTemperature),9) + !IntegerGreaterThan(Window.Property(Daily.10.LowTemperature),99)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-21,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.10.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Daily.10.LowTemperature),9)">Conditional</animation>
              <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Daily.10.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Daily.10.LowTemperature),-10)">Conditional</animation>
              <visible>!StringCompare(Window.Property(Daily.10.LowTemperature),n/a)</visible>
            </control>
          </control>
        </control>
      </control>
      <!-- details view -->
      <control type="group">
        <posy>35</posy>
        <visible>!Skin.HasSetting(TWC.ShowDailyDetails) + !IsEmpty(Window.Property(Daily.IsFetched))</visible>
        <!-- List Headings -->
        <control type="group">
          <control type="label">
            <include>TWC.Daily.HeadingCommon</include>
            <label>[CR]$LOCALIZE[552]</label>
          </control>
          <control type="label">
            <posx>120</posx>
            <width>220</width>
            <include>TWC.Daily.HeadingCommon</include>
            <label>[CR]$LOCALIZE[33020]</label>
          </control>
          <control type="label">
            <posx>340</posx>
            <width>90</width>
            <include>TWC.Daily.HeadingCommon</include>
            <label>$LOCALIZE[393][CR]$LOCALIZE[401]</label>
          </control>
          <control type="label">
            <posx>430</posx>
            <width>90</width>
            <include>TWC.Daily.HeadingCommon</include>
            <label>$LOCALIZE[391][CR]$LOCALIZE[401]</label>
          </control>
          <control type="label">
            <posx>520</posx>
            <width>90</width>
            <include>TWC.Daily.HeadingCommon</include>
            <label>31948</label>
          </control>
          <control type="label">
            <posx>610</posx>
            <width>175</width>
            <include>TWC.Daily.HeadingCommon</include>
            <label>[CR]$LOCALIZE[404]</label>
          </control>
        </control>
        <!-- Forecast list -->
        <control type="grouplist" id="700">
          <posx>0</posx>
          <posy>45</posy>
          <width>795</width>
          <height>492</height>
          <itemgap>0</itemgap>
          <orientation>vertical</orientation>
          <onleft>2000</onleft>
          <onright>7000</onright>
          <onup>700</onup>
          <ondown>700</ondown>
          <pagecontrol>7000</pagecontrol>
          <scrolltime>200</scrolltime>
          <!-- Day 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Daily.1.ShortDay))</visible>
            <height>82</height>
            <include>TWC.Daily.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Daily.ListDay</include>
              <label>[B]$INFO[Window.Property(Daily.1.ShortDay)][/B][CR][COLOR=grey2]$INFO[Window.Property(Daily.1.ShortDate)][/COLOR]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionTexture</include>
              <visible>!StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) + !StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) | StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListOutlookIcon</include>
              <info>Window.Property(Daily.1.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Daily.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.1.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListOutlook</include>
              <label>$INFO[Window.Property(Daily.1.Outlook)]</label>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.1.HighTemperature)]$INFO[System.TemperatureUnits][/B]</label>
              <visible>!StringCompare(Window.Property(Daily.1.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.1.HighTemperature)][/B]</label>
              <visible>StringCompare(Window.Property(Daily.1.HighTemperature),n/a)</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempTexture</include>
              <visible>!StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) + !StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) | StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.1.LowTemperature)]$INFO[System.TemperatureUnits]</label>
              <visible>!StringCompare(Window.Property(Daily.1.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.1.LowTemperature)]</label>
              <visible>StringCompare(Window.Property(Daily.1.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListPrecipitation</include>
              <label>$INFO[Window.Property(Daily.1.Precipitation),,%]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindTexture</include>
              <visible>!StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) + !StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) | StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListWind</include>
              <label>$INFO[Window.Property(Daily.1.WindDirection)][CR]$INFO[Window.Property(Daily.1.WindSpeed)]</label>
            </control>
          </control>
          <!-- Day 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Daily.2.ShortDay))</visible>
            <height>82</height>
            <include>TWC.Daily.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Daily.ListDay</include>
              <label>[B]$INFO[Window.Property(Daily.2.ShortDay)][/B][CR][COLOR=grey2]$INFO[Window.Property(Daily.2.ShortDate)][/COLOR]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionTexture</include>
              <visible>!StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListOutlookIcon</include>
              <info>Window.Property(Daily.2.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Daily.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.2.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListOutlook</include>
              <label>$INFO[Window.Property(Daily.2.Outlook)]</label>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.2.HighTemperature)]$INFO[System.TemperatureUnits][/B]</label>
              <visible>!StringCompare(Window.Property(Daily.2.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.2.HighTemperature)][/B]</label>
              <visible>StringCompare(Window.Property(Daily.2.HighTemperature),n/a)</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempTexture</include>
              <visible>!StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.2.LowTemperature)]$INFO[System.TemperatureUnits]</label>
              <visible>!StringCompare(Window.Property(Daily.2.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.2.LowTemperature)]</label>
              <visible>StringCompare(Window.Property(Daily.2.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListPrecipitation</include>
              <label>$INFO[Window.Property(Daily.2.Precipitation),,%]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindTexture</include>
              <visible>!StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListWind</include>
              <label>$INFO[Window.Property(Daily.2.WindDirection)][CR]$INFO[Window.Property(Daily.2.WindSpeed)]</label>
            </control>
          </control>
          <!-- Day 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Daily.3.ShortDay))</visible>
            <height>82</height>
            <include>TWC.Daily.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Daily.ListDay</include>
              <label>[B]$INFO[Window.Property(Daily.3.ShortDay)][/B][CR][COLOR=grey2]$INFO[Window.Property(Daily.3.ShortDate)][/COLOR]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionTexture</include>
              <visible>!StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListOutlookIcon</include>
              <info>Window.Property(Daily.3.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Daily.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.3.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListOutlook</include>
              <label>$INFO[Window.Property(Daily.3.Outlook)]</label>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.3.HighTemperature)]$INFO[System.TemperatureUnits][/B]</label>
              <visible>!StringCompare(Window.Property(Daily.3.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.3.HighTemperature)][/B]</label>
              <visible>StringCompare(Window.Property(Daily.3.HighTemperature),n/a)</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempTexture</include>
              <visible>!StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.3.LowTemperature)]$INFO[System.TemperatureUnits]</label>
              <visible>!StringCompare(Window.Property(Daily.3.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.3.LowTemperature)]</label>
              <visible>StringCompare(Window.Property(Daily.3.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListPrecipitation</include>
              <label>$INFO[Window.Property(Daily.3.Precipitation),,%]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindTexture</include>
              <visible>!StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListWind</include>
              <label>$INFO[Window.Property(Daily.3.WindDirection)][CR]$INFO[Window.Property(Daily.3.WindSpeed)]</label>
            </control>
          </control>
          <!-- Day 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Daily.4.ShortDay))</visible>
            <height>82</height>
            <include>TWC.Daily.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Daily.ListDay</include>
              <label>[B]$INFO[Window.Property(Daily.4.ShortDay)][/B][CR][COLOR=grey2]$INFO[Window.Property(Daily.4.ShortDate)][/COLOR]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionTexture</include>
              <visible>!StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListOutlookIcon</include>
              <info>Window.Property(Daily.4.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Daily.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.4.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListOutlook</include>
              <label>$INFO[Window.Property(Daily.4.Outlook)]</label>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.4.HighTemperature)]$INFO[System.TemperatureUnits][/B]</label>
              <visible>!StringCompare(Window.Property(Daily.4.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.4.HighTemperature)][/B]</label>
              <visible>StringCompare(Window.Property(Daily.4.HighTemperature),n/a)</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempTexture</include>
              <visible>!StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.4.LowTemperature)]$INFO[System.TemperatureUnits]</label>
              <visible>!StringCompare(Window.Property(Daily.4.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.4.LowTemperature)]</label>
              <visible>StringCompare(Window.Property(Daily.4.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListPrecipitation</include>
              <label>$INFO[Window.Property(Daily.4.Precipitation),,%]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindTexture</include>
              <visible>!StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListWind</include>
              <label>$INFO[Window.Property(Daily.4.WindDirection)][CR]$INFO[Window.Property(Daily.4.WindSpeed)]</label>
            </control>
          </control>
          <!-- Day 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Daily.5.ShortDay))</visible>
            <height>82</height>
            <include>TWC.Daily.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Daily.ListDay</include>
              <label>[B]$INFO[Window.Property(Daily.5.ShortDay)][/B][CR][COLOR=grey2]$INFO[Window.Property(Daily.5.ShortDate)][/COLOR]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionTexture</include>
              <visible>!StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListOutlookIcon</include>
              <info>Window.Property(Daily.5.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Daily.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.5.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListOutlook</include>
              <label>$INFO[Window.Property(Daily.5.Outlook)]</label>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.5.HighTemperature)]$INFO[System.TemperatureUnits][/B]</label>
              <visible>!StringCompare(Window.Property(Daily.5.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.5.HighTemperature)][/B]</label>
              <visible>StringCompare(Window.Property(Daily.5.HighTemperature),n/a)</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempTexture</include>
              <visible>!StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.5.LowTemperature)]$INFO[System.TemperatureUnits]</label>
              <visible>!StringCompare(Window.Property(Daily.5.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.5.LowTemperature)]</label>
              <visible>StringCompare(Window.Property(Daily.5.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListPrecipitation</include>
              <label>$INFO[Window.Property(Daily.5.Precipitation),,%]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindTexture</include>
              <visible>!StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListWind</include>
              <label>$INFO[Window.Property(Daily.5.WindDirection)][CR]$INFO[Window.Property(Daily.5.WindSpeed)]</label>
            </control>
          </control>
          <!-- Day 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Daily.6.ShortDay))</visible>
            <height>82</height>
            <include>TWC.Daily.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Daily.ListDay</include>
              <label>[B]$INFO[Window.Property(Daily.6.ShortDay)][/B][CR][COLOR=grey2]$INFO[Window.Property(Daily.6.ShortDate)][/COLOR]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionTexture</include>
              <visible>!StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListOutlookIcon</include>
              <info>Window.Property(Daily.6.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Daily.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.6.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListOutlook</include>
              <label>$INFO[Window.Property(Daily.6.Outlook)]</label>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.6.HighTemperature)]$INFO[System.TemperatureUnits][/B]</label>
              <visible>!StringCompare(Window.Property(Daily.6.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.6.HighTemperature)][/B]</label>
              <visible>StringCompare(Window.Property(Daily.6.HighTemperature),n/a)</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempTexture</include>
              <visible>!StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.6.LowTemperature)]$INFO[System.TemperatureUnits]</label>
              <visible>!StringCompare(Window.Property(Daily.6.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.6.LowTemperature)]</label>
              <visible>StringCompare(Window.Property(Daily.6.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListPrecipitation</include>
              <label>$INFO[Window.Property(Daily.6.Precipitation),,%]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindTexture</include>
              <visible>!StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListWind</include>
              <label>$INFO[Window.Property(Daily.6.WindDirection)][CR]$INFO[Window.Property(Daily.6.WindSpeed)]</label>
            </control>
          </control>
          <!-- Day 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Daily.7.ShortDay))</visible>
            <height>82</height>
            <include>TWC.Daily.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Daily.ListDay</include>
              <label>[B]$INFO[Window.Property(Daily.7.ShortDay)][/B][CR][COLOR=grey2]$INFO[Window.Property(Daily.7.ShortDate)][/COLOR]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionTexture</include>
              <visible>!StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListOutlookIcon</include>
              <info>Window.Property(Daily.7.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Daily.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.7.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListOutlook</include>
              <label>$INFO[Window.Property(Daily.7.Outlook)]</label>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.7.HighTemperature)]$INFO[System.TemperatureUnits][/B]</label>
              <visible>!StringCompare(Window.Property(Daily.7.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.7.HighTemperature)][/B]</label>
              <visible>StringCompare(Window.Property(Daily.7.HighTemperature),n/a)</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempTexture</include>
              <visible>!StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.7.LowTemperature)]$INFO[System.TemperatureUnits]</label>
              <visible>!StringCompare(Window.Property(Daily.7.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.7.LowTemperature)]</label>
              <visible>StringCompare(Window.Property(Daily.7.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListPrecipitation</include>
              <label>$INFO[Window.Property(Daily.7.Precipitation),,%]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindTexture</include>
              <visible>!StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListWind</include>
              <label>$INFO[Window.Property(Daily.7.WindDirection)][CR]$INFO[Window.Property(Daily.7.WindSpeed)]</label>
            </control>
          </control>
          <!-- Day 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Daily.8.ShortDay))</visible>
            <height>82</height>
            <include>TWC.Daily.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Daily.ListDay</include>
              <label>[B]$INFO[Window.Property(Daily.8.ShortDay)][/B][CR][COLOR=grey2]$INFO[Window.Property(Daily.8.ShortDate)][/COLOR]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionTexture</include>
              <visible>!StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListOutlookIcon</include>
              <info>Window.Property(Daily.8.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Daily.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.8.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListOutlook</include>
              <label>$INFO[Window.Property(Daily.8.Outlook)]</label>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.8.HighTemperature)]$INFO[System.TemperatureUnits][/B]</label>
              <visible>!StringCompare(Window.Property(Daily.8.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.8.HighTemperature)][/B]</label>
              <visible>StringCompare(Window.Property(Daily.8.HighTemperature),n/a)</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempTexture</include>
              <visible>!StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.8.LowTemperature)]$INFO[System.TemperatureUnits]</label>
              <visible>!StringCompare(Window.Property(Daily.8.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.8.LowTemperature)]</label>
              <visible>StringCompare(Window.Property(Daily.8.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListPrecipitation</include>
              <label>$INFO[Window.Property(Daily.8.Precipitation),,%]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindTexture</include>
              <visible>!StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListWind</include>
              <label>$INFO[Window.Property(Daily.8.WindDirection)][CR]$INFO[Window.Property(Daily.8.WindSpeed)]</label>
            </control>
          </control>
          <!-- Day 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Daily.9.ShortDay))</visible>
            <height>82</height>
            <include>TWC.Daily.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Daily.ListDay</include>
              <label>[B]$INFO[Window.Property(Daily.9.ShortDay)][/B][CR][COLOR=grey2]$INFO[Window.Property(Daily.9.ShortDate)][/COLOR]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionTexture</include>
              <visible>!StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListOutlookIcon</include>
              <info>Window.Property(Daily.9.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Daily.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.9.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListOutlook</include>
              <label>$INFO[Window.Property(Daily.9.Outlook)]</label>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.9.HighTemperature)]$INFO[System.TemperatureUnits][/B]</label>
              <visible>!StringCompare(Window.Property(Daily.9.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.9.HighTemperature)][/B]</label>
              <visible>StringCompare(Window.Property(Daily.9.HighTemperature),n/a)</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempTexture</include>
              <visible>!StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.9.LowTemperature)]$INFO[System.TemperatureUnits]</label>
              <visible>!StringCompare(Window.Property(Daily.9.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.9.LowTemperature)]</label>
              <visible>StringCompare(Window.Property(Daily.9.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListPrecipitation</include>
              <label>$INFO[Window.Property(Daily.9.Precipitation),,%]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindTexture</include>
              <visible>!StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListWind</include>
              <label>$INFO[Window.Property(Daily.9.WindDirection)][CR]$INFO[Window.Property(Daily.9.WindSpeed)]</label>
            </control>
          </control>
          <!-- Day 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Daily.10.ShortDay))</visible>
            <height>82</height>
            <include>TWC.Daily.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Daily.ListDay</include>
              <label>[B]$INFO[Window.Property(Daily.10.ShortDay)][/B][CR][COLOR=grey2]$INFO[Window.Property(Daily.10.ShortDate)][/COLOR]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionTexture</include>
              <visible>!StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListConditionWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListOutlookIcon</include>
              <info>Window.Property(Daily.10.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Daily.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Daily.10.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListOutlook</include>
              <label>$INFO[Window.Property(Daily.10.Outlook)]</label>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.10.HighTemperature)]$INFO[System.TemperatureUnits][/B]</label>
              <visible>!StringCompare(Window.Property(Daily.10.HighTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListHighTemp</include>
              <label>[B]$INFO[Window.Property(Daily.10.HighTemperature)][/B]</label>
              <visible>StringCompare(Window.Property(Daily.10.HighTemperature),n/a)</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempTexture</include>
              <visible>!StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListLowTempWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.10.LowTemperature)]$INFO[System.TemperatureUnits]</label>
              <visible>!StringCompare(Window.Property(Daily.10.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListLowTemp</include>
              <label>$INFO[Window.Property(Daily.10.LowTemperature)]</label>
              <visible>StringCompare(Window.Property(Daily.10.LowTemperature),n/a)</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListPrecipitation</include>
              <label>$INFO[Window.Property(Daily.10.Precipitation),,%]</label>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindTexture</include>
              <visible>!StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) + !StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="image">
              <include>TWC.Daily.ListWindWeekendTexture</include>
              <visible>StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) | StringCompare(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
            </control>
            <control type="label">
              <include>TWC.Daily.ListWind</include>
              <label>$INFO[Window.Property(Daily.10.WindDirection)][CR]$INFO[Window.Property(Daily.10.WindSpeed)]</label>
            </control>
          </control>
        </control>
        <!-- Scrollbar for forecast list -->
        <control type="scrollbar" id="7000">
          <description>Scroll Bar</description>
          <posx>800</posx>
          <posy>45</posy>
          <height>492</height>
          <include>TWC.ScrollbarCommon</include>
          <onleft>2000</onleft>
          <onright>2000</onright>
        </control>
      </control>
    </control>
  </include>
  <include name="TWC.Hourly.Button">
    <control type="button" id="13202">
      <include>TWC.ButtonCommon</include>
      <label>31902</label>
      <onclick>SetProperty(Weather.CurrentView,$LOCALIZE[31902] $LOCALIZE[31911])</onclick>
      <onclick>SetProperty(Weather.CurrentViewMenu,$LOCALIZE[31902])</onclick>
    </control>
  </include>
  <include name="TWC.Hourly.ButtonXLabel">
    <control type="button">
      <include>TWC.ButtonXLabelCommon</include>
      <label>31911</label>
      <visible>!ControlGroup(2000).HasFocus(13202)</visible>
    </control>
    <control type="button">
      <textcolor>FF262728</textcolor>
      <include>TWC.ButtonXLabelCommon</include>
      <label>31911</label>
      <visible>ControlGroup(2000).HasFocus(13202)</visible>
    </control>
  </include>
  <!--include name="TWC.Hourly.SettingsButtons">
        <control type="radiobutton" id="91202">
            <description>hourly details</description>
            <include>Objects_MediaMenuButton</include>
            <label>31934</label>
            <onclick>Skin.ToggleSetting(TWC.ShowHourlyDetails)</onclick>
            <selected>!Skin.HasSetting(TWC.ShowHourlyDetails)</selected>
            <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31902] $LOCALIZE[31911])</visible>
        </control>
    </include-->
  <include name="TWC.Hourly.HeadingCommon">
    <posx>0</posx>
    <posy>-10</posy>
    <width>110</width>
    <height>40</height>
    <font>Font_Info</font>
    <textcolor>grey2</textcolor>
    <shadowcolor>black</shadowcolor>
    <align>center</align>
    <aligny>top</aligny>
    <wrapmultiline>true</wrapmultiline>
  </include>
  <include name="TWC.Hourly.ListNoFocusTexture">
    <control type="image">
      <posx>0</posx>
      <posy>0</posy>
      <width>785</width>
      <height>80</height>
      <texture border="5">MenuItemNF.png</texture>
    </control>
  </include>
  <include name="TWC.Hourly.ListTime">
    <posx>0</posx>
    <posy>0</posy>
    <width>110</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <shadowcolor>black</shadowcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
  </include>
  <include name="TWC.Hourly.ListConditionTexture">
    <control type="image">
      <posx>120</posx>
      <posy>0</posy>
      <width>220</width>
      <height>80</height>
      <colordiffuse>33FFFFFF</colordiffuse>
      <texture border="5">StackFO.png</texture>
    </control>
  </include>
  <include name="TWC.Hourly.ListOutlookIcon">
    <posx>130</posx>
    <posy>0</posy>
    <width>64</width>
    <height>80</height>
    <align>center</align>
    <aligny>center</aligny>
    <aspectratio>keep</aspectratio>
  </include>
  <include name="TWC.Hourly.ListOutlook">
    <posx>200</posx>
    <posy>0</posy>
    <width>140</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
    <wrapmultiline>true</wrapmultiline>
  </include>
  <include name="TWC.Hourly.ListTempFeelsLike">
    <posx>340</posx>
    <posy>0</posy>
    <width>90</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
  </include>
  <include name="TWC.Hourly.ListHumidityTexture">
    <control type="image">
      <colordiffuse>33FFFFFF</colordiffuse>
      <texture border="5">StackFO.png</texture>
      <include>TWC.Hourly.ListHumidity</include>
    </control>
  </include>
  <include name="TWC.Hourly.ListPrecipitation">
    <posx>520</posx>
    <posy>0</posy>
    <width>90</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
  </include>
  <include name="TWC.Hourly.ListHumidity">
    <posx>430</posx>
    <posy>0</posy>
    <width>90</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
  </include>
  <include name="TWC.Hourly.ListWindTexture">
    <control type="image">
      <colordiffuse>33FFFFFF</colordiffuse>
      <texture border="5">StackFO.png</texture>
      <include>TWC.Hourly.ListWind</include>
    </control>
  </include>
  <include name="TWC.Hourly.ListWind">
    <posx>615</posx>
    <posy>0</posy>
    <width>175</width>
    <height>80</height>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <selectedcolor>selected</selectedcolor>
    <align>center</align>
    <aligny>center</aligny>
    <wrapmultiline>true</wrapmultiline>
  </include>
  <include name="TWC.Hourly">
    <control type="group">
      <posx>290</posx>
      <posy>60</posy>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31902] $LOCALIZE[31911])</visible>
      <animation effect="fade" reversible="true" time="300">VisibleChange</animation>
      <control type="label">
        <description>loading label</description>
        <include>TWC.LoadingLabelCommon</include>
        <visible>IsEmpty(Window.Property(Hourly.IsFetched))</visible>
      </control>
      <!-- details view -->
      <control type="group">
        <posy>35</posy>
        <visible>!IsEmpty(Window.Property(Hourly.IsFetched))</visible>
        <!-- List Headings -->
        <control type="group">
          <control type="label">
            <include>TWC.Hourly.HeadingCommon</include>
            <label>[CR]$LOCALIZE[555]</label>
          </control>
          <control type="label">
            <posx>120</posx>
            <width>220</width>
            <include>TWC.Hourly.HeadingCommon</include>
            <label>[CR]$LOCALIZE[33020]</label>
          </control>
          <control type="label">
            <posx>340</posx>
            <width>90</width>
            <include>TWC.Hourly.HeadingCommon</include>
            <label>$LOCALIZE[401][CR]$LOCALIZE[402]</label>
          </control>
          <control type="label">
            <posx>430</posx>
            <width>90</width>
            <include>TWC.Hourly.HeadingCommon</include>
            <label>[CR]$LOCALIZE[406]</label>
          </control>
          <control type="label">
            <posx>520</posx>
            <width>90</width>
            <include>TWC.Hourly.HeadingCommon</include>
            <label>31948</label>
          </control>
          <control type="label">
            <posx>610</posx>
            <width>175</width>
            <include>TWC.Hourly.HeadingCommon</include>
            <label>[CR]$LOCALIZE[404]</label>
          </control>
        </control>
        <!-- Forecast list -->
        <control type="grouplist" id="600">
          <posx>0</posx>
          <posy>45</posy>
          <width>795</width>
          <height>492</height>
          <itemgap>0</itemgap>
          <orientation>vertical</orientation>
          <onleft>2000</onleft>
          <onright>6000</onright>
          <onup>600</onup>
          <ondown>600</ondown>
          <pagecontrol>6000</pagecontrol>
          <scrolltime>200</scrolltime>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.1.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.1.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.1.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.1.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.1.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.1.Outlook)]$INFO[Window.Property(Hourly.1.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.1.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.1.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.1.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.1.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.1.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.1.WindDirection)][CR]$INFO[Window.Property(Hourly.1.WindSpeed)]</label>
            </control>
          </control>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.2.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.2.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.2.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.2.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.2.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.2.Outlook)]$INFO[Window.Property(Hourly.2.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.2.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.2.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.2.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.2.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.2.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.2.WindDirection)][CR]$INFO[Window.Property(Hourly.2.WindSpeed)]</label>
            </control>
          </control>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.3.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.3.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.3.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.3.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.3.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.3.Outlook)]$INFO[Window.Property(Hourly.3.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.3.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.3.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.3.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.3.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.3.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.3.WindDirection)][CR]$INFO[Window.Property(Hourly.3.WindSpeed)]</label>
            </control>
          </control>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.4.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.4.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.4.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.4.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.4.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.4.Outlook)]$INFO[Window.Property(Hourly.4.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.4.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.4.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.4.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.4.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.4.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.4.WindDirection)][CR]$INFO[Window.Property(Hourly.4.WindSpeed)]</label>
            </control>
          </control>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.5.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.5.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.5.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.5.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.5.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.5.Outlook)]$INFO[Window.Property(Hourly.5.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.5.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.5.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.5.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.5.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.5.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.5.WindDirection)][CR]$INFO[Window.Property(Hourly.5.WindSpeed)]</label>
            </control>
          </control>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.6.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.6.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.6.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.6.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.6.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.6.Outlook)]$INFO[Window.Property(Hourly.6.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.6.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.6.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.6.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.6.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.6.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.6.WindDirection)][CR]$INFO[Window.Property(Hourly.6.WindSpeed)]</label>
            </control>
          </control>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.7.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.7.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.7.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.7.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.7.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.7.Outlook)]$INFO[Window.Property(Hourly.7.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.7.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.7.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.7.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.7.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.7.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.7.WindDirection)][CR]$INFO[Window.Property(Hourly.7.WindSpeed)]</label>
            </control>
          </control>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.8.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.8.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.8.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.8.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.8.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.8.Outlook)]$INFO[Window.Property(Hourly.8.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.8.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.8.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.8.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.8.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.8.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.8.WindDirection)][CR]$INFO[Window.Property(Hourly.8.WindSpeed)]</label>
            </control>
          </control>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.9.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.9.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.9.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.9.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.9.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.9.Outlook)]$INFO[Window.Property(Hourly.9.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.9.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.9.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.9.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.9.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.9.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.9.WindDirection)][CR]$INFO[Window.Property(Hourly.9.WindSpeed)]</label>
            </control>
          </control>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.10.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.10.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.10.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.10.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.10.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.10.Outlook)]$INFO[Window.Property(Hourly.10.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.10.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.10.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.10.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.10.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.10.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.10.WindDirection)][CR]$INFO[Window.Property(Hourly.10.WindSpeed)]</label>
            </control>
          </control>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.11.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.11.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.11.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.11.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.11.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.11.Outlook)]$INFO[Window.Property(Hourly.11.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.11.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.11.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.11.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.11.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.11.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.11.WindDirection)][CR]$INFO[Window.Property(Hourly.11.WindSpeed)]</label>
            </control>
          </control>
          <!-- Hour 1 -->
          <control type="group">
            <visible>!IsEmpty(Window.Property(Hourly.12.Time))</visible>
            <height>82</height>
            <include>TWC.Hourly.ListNoFocusTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListTime</include>
              <label>[B]$INFO[Window.Property(Hourly.12.Time)][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.12.ShortDate)][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListConditionTexture</include>
            <control type="image">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <info>Window.Property(Hourly.12.OutlookIcon)</info>
              <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="multiimage">
              <include>TWC.Hourly.ListOutlookIcon</include>
              <timeperimage>75</timeperimage>
              <randomize>false</randomize>
              <fadetime>0</fadetime>
              <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Hourly.12.FanartCode)]</imagepath>
              <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListOutlook</include>
              <label>$INFO[Window.Property(Hourly.12.Outlook)]$INFO[Window.Property(Hourly.12.Sunrise),[CR][COLOR=grey2]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.12.Sunset),[CR][COLOR=grey2]$LOCALIZE[33028]: ,[/COLOR]]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListTempFeelsLike</include>
              <label>[B]$INFO[Window.Property(Hourly.12.Temperature)]$INFO[System.TemperatureUnits][/B][CR][COLOR=grey2]$INFO[Window.Property(Hourly.12.FeelsLike)]$INFO[System.TemperatureUnits][/COLOR]</label>
            </control>
            <include>TWC.Hourly.ListHumidityTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListHumidity</include>
              <label>$INFO[Window.Property(Hourly.12.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Hourly.ListPrecipitation</include>
              <label>$INFO[Window.Property(Hourly.12.Precipitation),,%]</label>
            </control>
            <include>TWC.Hourly.ListWindTexture</include>
            <control type="label">
              <include>TWC.Hourly.ListWind</include>
              <label>$INFO[Window.Property(Hourly.12.WindDirection)][CR]$INFO[Window.Property(Hourly.12.WindSpeed)]</label>
            </control>
          </control>
        </control>
        <!-- Scrollbar for forecast list -->
        <control type="scrollbar" id="6000">
          <description>Scroll Bar</description>
          <posx>800</posx>
          <posy>45</posy>
          <height>492</height>
          <include>TWC.ScrollbarCommon</include>
          <onleft>2000</onleft>
          <onright>2000</onright>
        </control>
      </control>
    </control>
  </include>
  <include name="TWC.Maps.Button">
    <control type="button" id="13200">
      <include>TWC.ButtonCommon</include>
      <label>31900</label>
      <onclick>SetProperty(Weather.CurrentView,$LOCALIZE[31900] - $LOCALIZE[31910])</onclick>
      <onclick>SetProperty(Weather.CurrentViewMenu,$LOCALIZE[31900])</onclick>
    </control>
  </include>
  <include name="TWC.Maps.ButtonXLabel">
    <control type="button">
      <include>TWC.ButtonXLabelCommon</include>
      <label>31910</label>
      <visible>!ControlGroup(2000).HasFocus(13200)</visible>
    </control>
    <control type="button">
      <textcolor>FF262728</textcolor>
      <include>TWC.ButtonXLabelCommon</include>
      <label>31910</label>
      <visible>ControlGroup(2000).HasFocus(13200)</visible>
    </control>
  </include>
  <include name="TWC.Maps.DummyButtons">
    <!-- dummy buttons for defaultmap -->
    <control type="button" id="90200">
      <posy>-1000</posy>
      <onfocus>SetFocus(9010)</onfocus>
      <onfocus>Skin.Reset(TWC.DefaultMap)</onfocus>
      <visible>StringCompare(Window.Property(Weather.CurrentMap),Skin.String(TWC.DefaultMap))</visible>
    </control>
    <control type="button" id="90200">
      <posy>-1000</posy>
      <onfocus>SetFocus(9010)</onfocus>
      <onfocus>Skin.SetString(TWC.DefaultMap,$INFO[Window.Property(Weather.CurrentMap)])</onfocus>
      <visible>!StringCompare(Window.Property(Weather.CurrentMap),Skin.String(TWC.DefaultMap))</visible>
    </control>
  </include>
  <include name="TWC.Maps.SettingsButtons">
    <control type="radiobutton" id="91200">
      <description>Default Map Toggle</description>
      <include>Objects_MediaMenuButton</include>
      <label>31931</label>
      <onclick>SetFocus(90200)</onclick>
      <selected>StringCompare(Window.Property(Weather.CurrentMap),Skin.String(TWC.DefaultMap))</selected>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31900] - $LOCALIZE[31910])</visible>
    </control>
    <control type="radiobutton" id="92200">
      <description>zoom map</description>
      <include>Objects_MediaMenuButton</include>
      <label>31932</label>
      <onclick>Skin.ToggleSetting(TWC.ZoomWeatherMap)</onclick>
      <selected>Skin.HasSetting(TWC.ZoomWeatherMap)</selected>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31900] - $LOCALIZE[31910])</visible>
    </control>
    <control type="button" id="93200">
      <description>Search</description>
      <include>Objects_MediaMenuButton</include>
      <label>31933</label>
      <onclick>Skin.SetPath(TWC.MapIconPath)</onclick>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31900] - $LOCALIZE[31910])</visible>
    </control>
  </include>
  <include name="TWC.Maps.ListCommon">
    <posx>-80</posx>
    <posy>50</posy>
    <width>705</width>
    <height>465</height>
    <onleft>2000</onleft>
    <viewtype label="536">icon</viewtype>
    <scrolltime>200</scrolltime>
    <preloaditems>2</preloaditems>
    <itemlayout width="235" height="155">
      <control type="image">
        <posx>0</posx>
        <posy>0</posy>
        <width>230</width>
        <height>155</height>
        <aspectratio>stretch</aspectratio>
        <bordertexture border="10">ThumbShadow.png</bordertexture>
        <bordersize>8</bordersize>
        <fadetime>200</fadetime>
        <texture border="2">ThumbBG.png</texture>
      </control>
      <control type="image">
        <posx>10</posx>
        <posy>10</posy>
        <width>210</width>
        <height>135</height>
        <aspectratio>keep</aspectratio>
        <texture background="true" fallback="weather.com plus/na.jpg">$INFO[ListItem.Icon]</texture>
      </control>
    </itemlayout>
    <focusedlayout height="230" width="155">
      <control type="image">
        <posx>0</posx>
        <posy>0</posy>
        <width>230</width>
        <height>155</height>
        <aspectratio>stretch</aspectratio>
        <bordertexture border="10">folder-Focus.png</bordertexture>
        <bordersize>8</bordersize>
        <fadetime>200</fadetime>
        <texture border="2">ThumbBG.png</texture>
      </control>
      <control type="image">
        <posx>10</posx>
        <posy>10</posy>
        <width>210</width>
        <height>135</height>
        <aspectratio>keep</aspectratio>
        <texture background="true" fallback="weather.com plus/na.jpg">$INFO[ListItem.Icon]</texture>
      </control>
    </focusedlayout>
  </include>
  <include name="TWC.Maps.ListTitleCommon">
    <posx>-70</posx>
    <posy>515</posy>
    <width>720</width>
    <height>30</height>
    <font>Font_Reg20caps</font>
    <textcolor>grey2</textcolor>
    <shadowcolor>black</shadowcolor>
    <align>center</align>
    <aligny>center</aligny>
  </include>
  <include name="TWC.Maps.ListButtonsCommon">
    <posy>-10</posy>
    <width>240</width>
    <height>50</height>
    <align>left</align>
    <aligny>center</aligny>
    <font>Font_Info_title</font>
    <textcolor>white</textcolor>
    <disabledcolor>grey3</disabledcolor>
    <pulseonselect>false</pulseonselect>
    <texturenofocus border="5">MenuItemNF.png</texturenofocus>
    <texturefocus border="5">button-focus.png</texturefocus>
    <textoffsetx>20</textoffsetx>
  </include>
  <include name="TWC.Maps">
    <control type="group">
      <posx>290</posx>
      <posy>60</posy>
      <onright>5200</onright>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31900] - $LOCALIZE[31910])</visible>
      <animation effect="fade" reversible="true" time="300">VisibleChange</animation>
      <!-- Category buttons and other controls -->
      <control type="group" id="5200">
        <posx>120</posx>
        <posy>40</posy>
        <control type="image">
          <posx>-90</posx>
          <posy>-10</posy>
          <width>760</width>
          <height>550</height>
          <texture>black-back.png</texture>
        </control>
        <control type="radiobutton" id="5201">
          <description>Map List Button</description>
          <include>TWC.Maps.ListButtonsCommon</include>
          <posx>-80</posx>
          <label>$INFO[Window.Property(MapList.1.ShortTitle)]</label>
          <onleft>2000</onleft>
          <onright>5202</onright>
          <onup>5100</onup>
          <ondown>5100</ondown>
          <visible>!IsEmpty(Window.Property(MapList.1.ShortTitle))</visible>
          <onfocus>SetProperty(CurrentMapList,1)</onfocus>
          <selected>StringCompare(Window.Property(CurrentMapList),1)</selected>
        </control>
        <control type="radiobutton" id="5202">
          <description>Map List Button</description>
          <include>TWC.Maps.ListButtonsCommon</include>
          <posx>170</posx>
          <label>$INFO[Window.Property(MapList.2.ShortTitle)]</label>
          <onleft>5201</onleft>
          <onright>5203</onright>
          <onup>5100</onup>
          <ondown>5100</ondown>
          <visible>!IsEmpty(Window.Property(MapList.2.ShortTitle))</visible>
          <onfocus>SetProperty(CurrentMapList,2)</onfocus>
          <selected>StringCompare(Window.Property(CurrentMapList),2)</selected>
        </control>
        <control type="radiobutton" id="5203">
          <description>Map List Button</description>
          <include>TWC.Maps.ListButtonsCommon</include>
          <posx>420</posx>
          <label>$INFO[Window.Property(MapList.3.ShortTitle)]</label>
          <onleft>5202</onleft>
          <onright>5201</onright>
          <onup>5100</onup>
          <ondown>5100</ondown>
          <visible>!IsEmpty(Window.Property(MapList.3.ShortTitle))</visible>
          <onfocus>SetProperty(CurrentMapList,3)</onfocus>
          <selected>StringCompare(Window.Property(CurrentMapList),3)</selected>
        </control>
        <control type="image">
          <posx>165</posx>
          <posy>-10</posy>
          <width>4</width>
          <height>50</height>
          <texture>views/separator_vertical.png</texture>
          <visible>!IsEmpty(Window.Property(MapList.2.ShortTitle))</visible>
        </control>
        <control type="image">
          <posx>415</posx>
          <posy>-10</posy>
          <width>4</width>
          <height>50</height>
          <texture>views/separator_vertical.png</texture>
          <visible>!IsEmpty(Window.Property(MapList.3.ShortTitle))</visible>
        </control>
        <control type="multiimage">
          <description>maps multiimage</description>
          <posx>-70</posx>
          <posy>40</posy>
          <width>720</width>
          <height>486</height>
          <imagepath>$INFO[Window.Property(MapPath)]</imagepath>
          <timeperimage>500</timeperimage>
          <pauseatend>1000</pauseatend>
          <fadetime>0</fadetime>
          <randomize>false</randomize>
          <loop>yes</loop>
          <aspectratio>keep</aspectratio>
          <aligny>center</aligny>
          <animation effect="fade" time="200" start="100" end="15" condition="Control.HasFocus(5201) | Control.HasFocus(5202) | Control.HasFocus(5203) | ControlGroup(5100).HasFocus">Conditional</animation>
          <animation effect="zoom" reversible="true" center="325,360" start="100" end="117" time="100" condition="Skin.HasSetting(TWC.ZoomWeatherMap)">Conditional</animation>
        </control>
        <control type="image">
          <description>legend image</description>
          <posx>205</posx>
          <posy>470</posy>
          <width>400</width>
          <height>50</height>
          <texture>$INFO[Window.Property(LegendPath)]</texture>
          <align>right</align>
          <aligny>top</aligny>
          <aspectratio>keep</aspectratio>
          <colordiffuse>BFFFFFFF</colordiffuse>
          <animation effect="fade" time="200" start="100" end="15" condition="Control.HasFocus(5201) | Control.HasFocus(5202) | Control.HasFocus(5203) | ControlGroup(5100).HasFocus">Conditional</animation>
          <animation effect="zoom" reversible="true" center="325,360" start="100" end="117" time="100" condition="Skin.HasSetting(TWC.ZoomWeatherMap)">Conditional</animation>
        </control>
      </control>
      <!-- Category Lists  -->
      <control type="group" id="5100">
        <posx>120</posx>
        <posy>35</posy>
        <visible>Control.HasFocus(5201) | Control.HasFocus(5202) | Control.HasFocus(5203) | ControlGroup(5100).HasFocus</visible>
        <!-- Maps List #1 -->
        <control type="group">
          <visible>StringCompare(Window.Property(CurrentMapList),1)</visible>
          <control type="label">
            <include>TWC.Maps.ListTitleCommon</include>
            <label>$INFO[Container(501).ListItem.Label]</label>
          </control>
          <control type="panel" id="501">
            <include>MapsList1.Content</include>
            <include>TWC.Maps.ListCommon</include>
            <onright>5001</onright>
            <onup>5200</onup>
            <ondown>501</ondown>
            <pagecontrol>5001</pagecontrol>
          </control>
          <control type="scrollbar" id="5001">
            <description>Scroll Bar</description>
            <include>TWC.ScrollbarCommon</include>
            <onleft>501</onleft>
            <onright>501</onright>
          </control>
        </control>
        <!-- Maps List #2 -->
        <control type="group">
          <visible>StringCompare(Window.Property(CurrentMapList),2)</visible>
          <control type="label">
            <include>TWC.Maps.ListTitleCommon</include>
            <label>$INFO[Container(502).ListItem.Label]</label>
          </control>
          <control type="panel" id="502">
            <include>MapsList2.Content</include>
            <include>TWC.Maps.ListCommon</include>
            <onright>5020</onright>
            <onup>5200</onup>
            <ondown>502</ondown>
            <pagecontrol>5020</pagecontrol>
          </control>
          <control type="scrollbar" id="5020">
            <description>Scroll Bar</description>
            <include>TWC.ScrollbarCommon</include>
            <onleft>502</onleft>
            <onright>502</onright>
          </control>
        </control>
        <!-- Maps List #3 -->
        <control type="group">
          <visible>StringCompare(Window.Property(CurrentMapList),3)</visible>
          <control type="label">
            <include>TWC.Maps.ListTitleCommon</include>
            <label>$INFO[Container(503).ListItem.Label]</label>
          </control>
          <control type="panel" id="503">
            <include>MapsList3.Content</include>
            <include>TWC.Maps.ListCommon</include>
            <onright>5030</onright>
            <onup>5200</onup>
            <ondown>503</ondown>
            <pagecontrol>5030</pagecontrol>
          </control>
          <control type="scrollbar" id="5030">
            <description>Scroll Bar</description>
            <include>TWC.ScrollbarCommon</include>
            <onleft>503</onleft>
            <onright>503</onright>
          </control>
        </control>
      </control>
    </control>
  </include>
  <include name="MapsList1.Content">
    <content>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.1)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.1)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.1)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.1)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.1)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.1))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.2)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.2)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.2)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.2)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.2)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.2))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.3)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.3)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.3)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.3)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.3)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.3))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.4)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.4)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.4)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.4)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.4)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.4))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.5)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.5)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.5)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.5)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.5)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.5))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.6)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.6)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.6)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.6)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.6)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.6))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.7)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.7)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.7)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.7)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.7)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.7))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.8)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.8)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.8)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.8)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.8)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.8))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.9)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.9)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.9)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.9)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.9)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.9))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.10)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.10)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.10)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.10)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.10)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.10))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.11)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.11)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.11)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.11)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.11)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.11))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.12)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.12)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.12)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.12)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.12)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.12))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.13)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.13)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.13)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.13)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.13)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.13))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.14)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.14)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.14)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.14)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.14)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.14))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.15)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.15)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.15)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.15)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.15)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.15))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.16)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.16)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.16)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.16)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.16)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.16))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.17)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.17)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.17)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.17)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.17)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.17))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.18)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.18)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.18)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.18)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.18)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.18))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.19)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.19)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.19)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.19)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.19)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.19))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.20)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.20)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.20)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.20)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.20)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.20))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.21)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.21)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.21)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.21)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.21)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.21))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.22)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.22)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.22)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.22)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.22)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.22))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.23)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.23)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.23)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.23)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.23)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.23))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.24)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.24)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.24)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.24)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.24)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.24))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.25)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.25)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.25)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.25)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.25)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.25))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.26)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.26)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.26)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.26)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.26)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.26))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.27)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.27)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.27)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.27)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.27)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.27))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.28)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.28)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.28)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.28)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.28)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.28))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.29)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.29)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.29)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.29)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.29)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.29))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.1.MapLabel.30)]</label>
        <label2>$INFO[Window.Property(MapList.1.MapLabel2.30)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.30)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.30)])</onclick>
        <onclick>$INFO[Window.Property(MapList.1.MapOnclick.30)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.1.MapLabel.30))</visible>
      </item>
    </content>
  </include>
  <include name="MapsList2.Content">
    <content>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.1)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.1)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.1)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.1)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.1)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.1))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.2)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.2)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.2)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.2)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.2)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.2))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.3)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.3)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.3)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.3)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.3)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.3))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.4)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.4)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.4)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.4)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.4)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.4))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.5)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.5)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.5)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.5)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.5)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.5))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.6)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.6)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.6)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.6)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.6)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.6))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.7)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.7)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.7)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.7)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.7)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.7))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.8)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.8)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.8)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.8)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.8)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.8))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.9)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.9)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.9)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.9)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.9)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.9))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.10)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.10)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.10)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.10)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.10)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.10))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.11)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.11)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.11)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.11)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.11)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.11))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.12)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.12)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.12)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.12)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.12)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.12))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.13)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.13)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.13)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.13)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.13)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.13))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.14)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.14)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.14)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.14)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.14)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.14))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.15)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.15)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.15)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.15)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.15)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.15))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.16)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.16)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.16)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.16)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.16)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.16))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.17)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.17)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.17)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.17)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.17)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.17))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.18)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.18)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.18)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.18)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.18)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.18))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.19)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.19)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.19)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.19)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.19)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.19))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.20)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.20)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.20)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.20)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.20)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.20))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.21)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.21)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.21)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.21)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.21)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.21))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.22)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.22)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.22)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.22)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.22)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.22))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.23)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.23)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.23)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.23)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.23)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.23))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.24)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.24)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.24)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.24)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.24)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.24))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.25)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.25)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.25)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.25)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.25)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.25))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.26)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.26)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.26)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.26)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.26)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.26))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.27)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.27)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.27)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.27)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.27)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.27))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.28)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.28)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.28)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.28)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.28)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.28))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.29)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.29)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.29)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.29)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.29)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.29))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.2.MapLabel.30)]</label>
        <label2>$INFO[Window.Property(MapList.2.MapLabel2.30)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.30)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.30)])</onclick>
        <onclick>$INFO[Window.Property(MapList.2.MapOnclick.30)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.2.MapLabel.30))</visible>
      </item>
    </content>
  </include>
  <include name="MapsList3.Content">
    <content>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.1)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.1)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.1)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.1)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.1)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.1))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.2)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.2)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.2)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.2)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.2)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.2))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.3)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.3)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.3)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.3)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.3)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.3))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.4)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.4)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.4)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.4)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.4)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.4))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.5)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.5)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.5)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.5)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.5)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.5))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.6)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.6)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.6)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.6)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.6)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.6))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.7)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.7)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.7)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.7)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.7)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.7))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.8)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.8)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.8)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.8)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.8)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.8))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.9)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.9)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.9)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.9)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.9)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.9))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.10)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.10)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.10)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.10)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.10)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.10))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.11)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.11)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.11)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.11)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.11)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.11))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.12)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.12)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.12)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.12)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.12)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.12))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.13)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.13)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.13)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.13)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.13)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.13))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.14)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.14)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.14)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.14)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.14)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.14))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.15)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.15)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.15)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.15)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.15)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.15))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.16)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.16)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.16)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.16)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.16)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.16))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.17)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.17)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.17)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.17)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.17)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.17))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.18)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.18)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.18)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.18)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.18)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.18))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.19)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.19)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.19)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.19)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.19)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.19))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.20)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.20)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.20)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.20)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.20)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.20))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.21)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.21)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.21)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.21)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.21)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.21))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.22)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.22)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.22)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.22)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.22)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.22))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.23)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.23)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.23)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.23)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.23)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.23))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.24)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.24)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.24)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.24)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.24)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.24))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.25)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.25)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.25)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.25)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.25)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.25))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.26)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.26)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.26)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.26)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.26)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.26))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.27)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.27)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.27)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.27)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.27)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.27))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.28)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.28)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.28)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.28)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.28)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.28))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.29)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.29)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.29)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.29)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.29)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.29))</visible>
      </item>
      <item>
        <label>$INFO[Window.Property(MapList.3.MapLabel.30)]</label>
        <label2>$INFO[Window.Property(MapList.3.MapLabel2.30)]</label2>
        <icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.30)]</icon>
        <onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.30)])</onclick>
        <onclick>$INFO[Window.Property(MapList.3.MapOnclick.30)]</onclick>
        <onclick>SetFocus(2000)</onclick>
        <visible>!IsEmpty(Window.Property(MapList.3.MapLabel.30))</visible>
      </item>
    </content>
  </include>
  <include name="TWC.Video.Button">
    <control type="button" id="13207">
      <include>TWC.ButtonCommon</include>
      <label>31907</label>
      <onclick>SetProperty(Weather.CurrentView,$LOCALIZE[31907] - $LOCALIZE[31914])</onclick>
      <onclick>SetProperty(Weather.CurrentViewMenu,$LOCALIZE[31907])</onclick>
      <onclick>SetFocus(14207)</onclick>
      <enable>!IsEmpty(Window.Property(Video))</enable>
    </control>
  </include>
  <include name="TWC.Video.ButtonXLabel">
    <control type="button">
      <include>TWC.ButtonXLabelCommon</include>
      <label>31914</label>
      <enable>!IsEmpty(Window.Property(Video))</enable>
      <visible>!ControlGroup(2000).HasFocus(13207)</visible>
    </control>
    <control type="button">
      <textcolor>FF262728</textcolor>
      <include>TWC.ButtonXLabelCommon</include>
      <label>31914</label>
      <enable>!IsEmpty(Window.Property(Video))</enable>
      <visible>ControlGroup(2000).HasFocus(13207)</visible>
    </control>
  </include>
  <include name="TWC.Video.FakeButtons">
    <control type="button" id="14207">
      <posy>-1000</posy>
      <onfocus>SetFocus(2000)</onfocus>
      <onfocus>PlayMedia($INFO[Window.Property(Video)],1,noresume)</onfocus>
      <visible>!Player.HasVideo</visible>
    </control>
    <control type="button" id="14207">
      <posy>-1000</posy>
      <onfocus>SetFocus(2000)</onfocus>
      <visible>Player.HasVideo</visible>
    </control>
  </include>
  <include name="TWC.Video.VideoWindowDimensions">
    <posx>-20</posx>
    <posy>80</posy>
    <width>840</width>
    <height>472</height>
  </include>
  <include name="TWC.Video">
    <control type="group">
      <posx>290</posx>
      <posy>60</posy>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31907] - $LOCALIZE[31914])</visible>
      <animation effect="fade" reversible="true" time="300">VisibleChange</animation>
      <control type="image">
        <description>Border</description>
        <posx>40</posx>
        <posy>35</posy>
        <width>730</width>
        <height>550</height>
        <texture border="5">button-nofocus.png</texture>
      </control>
      <control type="image">
        <description>background</description>
        <include>TWC.Video.VideoWindowDimensions</include>
        <texture>black-back.png</texture>
      </control>
      <control type="label">
        <description>no video label</description>
        <label>$LOCALIZE[31971][CR][CR]$LOCALIZE[31914]</label>
        <include>TWC.LoadingLabelCommon</include>
      </control>
      <control type="videowindow">
        <include>TWC.Video.VideoWindowDimensions</include>
        <visible>Player.HasVideo</visible>
      </control>
    </control>
  </include>
  <include name="TWC.Weekend.Button">
    <control type="button" id="13203">
      <include>TWC.ButtonCommon</include>
      <label>31903</label>
      <onclick>SetProperty(Weather.CurrentView,$LOCALIZE[31903] $LOCALIZE[31911])</onclick>
      <onclick>SetProperty(Weather.CurrentViewMenu,$LOCALIZE[31903])</onclick>
    </control>
  </include>
  <include name="TWC.Weekend.ButtonXLabel">
    <control type="button">
      <include>TWC.ButtonXLabelCommon</include>
      <label>31911</label>
      <visible>!ControlGroup(2000).HasFocus(13203)</visible>
    </control>
    <control type="button">
      <textcolor>FF262728</textcolor>
      <include>TWC.ButtonXLabelCommon</include>
      <label>31911</label>
      <visible>ControlGroup(2000).HasFocus(13203)</visible>
    </control>
  </include>
  <include name="TWC.Weekend.SettingsButtons">
    <control type="radiobutton" id="91203">
      <description>weekend details</description>
      <include>Objects_MediaMenuButton</include>
      <label>31934</label>
      <onclick>Skin.ToggleSetting(TWC.ShowWeekendDetails)</onclick>
      <selected>!Skin.HasSetting(TWC.ShowWeekendDetails)</selected>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31903] $LOCALIZE[31911])</visible>
    </control>
  </include>
  <include name="TWC.Weekend.DayCommon">
    <posx>0</posx>
    <posy>15</posy>
    <width>260</width>
    <height>24</height>
    <font>Font_Reg25</font>
    <textcolor>white</textcolor>
    <shadowcolor>black</shadowcolor>
    <aligny>center</aligny>
    <align>center</align>
  </include>
  <include name="TWC.Weekend.DateCommon">
    <posx>250</posx>
    <posy>0</posy>
    <width>260</width>
    <height>15</height>
    <font>Font_Info</font>
    <textcolor>grey2</textcolor>
    <shadowcolor>black</shadowcolor>
    <aligny>center</aligny>
    <align>right</align>
  </include>
  <include name="TWC.Weekend.DayIconCommon">
    <posx>0</posx>
    <posy>70</posy>
    <width>128</width>
    <height>120</height>
    <aspectratio>keep</aspectratio>
  </include>
  <include name="TWC.Weekend.DayOutlookCommon">
    <posx>0</posx>
    <posy>200</posy>
    <width>128</width>
    <height>128</height>
    <font>Font_Info</font>
    <textcolor>grey</textcolor>
    <shadowcolor>black</shadowcolor>
    <aligny>top</aligny>
    <align>center</align>
    <wrapmultiline>true</wrapmultiline>
  </include>
  <include name="TWC.Weekend.HighTemperatureHeadingCommon">
    <posx>130</posx>
    <posy>69</posy>
    <width>130</width>
    <height>20</height>
    <font>Font_Reg20</font>
    <textcolor>grey2</textcolor>
    <shadowcolor>black</shadowcolor>
    <aligny>center</aligny>
    <align>center</align>
  </include>
  <include name="TWC.Weekend.HighTemperatureCommon">
    <posy>99</posy>
    <font>Font_Bold35</font>
    <textcolor>white</textcolor>
    <include>TWC.Weekend.HighTemperatureHeadingCommon</include>
  </include>
  <include name="TWC.Weekend.HighTempUnitsCommon">
    <posx>162</posx>
    <posy>91</posy>
    <font>Font_Info</font>
    <textcolor>white</textcolor>
    <info>System.TemperatureUnits</info>
    <include>TWC.Weekend.HighTemperatureHeadingCommon</include>
  </include>
  <include name="TWC.Weekend.LowTempHeadingCommon">
    <control type="label">
      <description>high temp title</description>
      <posy>143</posy>
      <label>[B]$LOCALIZE[391][/B]</label>
      <include>TWC.Weekend.HighTemperatureHeadingCommon</include>
    </control>
  </include>
  <include name="TWC.Weekend.LowTempCommon">
    <posy>170</posy>
    <font>Font_Bold28</font>
    <textcolor>grey</textcolor>
    <include>TWC.Weekend.HighTemperatureHeadingCommon</include>
  </include>
  <include name="TWC.Weekend.LowTempUnitsCommon">
    <posx>159</posx>
    <posy>163</posy>
    <font>Font_Info</font>
    <textcolor>grey</textcolor>
    <info>System.TemperatureUnits</info>
    <include>TWC.Weekend.HighTemperatureHeadingCommon</include>
  </include>
  <include name="TWC.Weekend.ForecastHeadingCommon">
    <posy>410</posy>
    <font>Font_Reg20</font>
    <textcolor>grey2</textcolor>
    <align>center</align>
    <aligny>center</aligny>
    <label>[B]$LOCALIZE[31911][/B]</label>
    <include>TWC.Weekend.DayCommon</include>
  </include>
  <include name="TWC.Weekend.ForecastCommon">
    <posy>430</posy>
    <height>120</height>
    <font>Font_Info</font>
    <align>left</align>
    <aligny>top</aligny>
    <autoscroll time="2000" delay="6000" repeat="6000">VisibleChange</autoscroll>
    <include>TWC.Weekend.DayCommon</include>
  </include>
  <include name="TWC.Weekend.DaySeparator">
    <control type="image">
      <posx>264</posx>
      <posy>0</posy>
      <width>4</width>
      <height>580</height>
      <texture>views/separator_vertical.png</texture>
    </control>
  </include>
  <include name="TWC.Weekend.DetailsHeadingCommon">
    <posy>252</posy>
    <font>Font_Reg20</font>
    <textcolor>grey2</textcolor>
    <align>center</align>
    <aligny>center</aligny>
    <include>TWC.Weekend.DayCommon</include>
  </include>
  <include name="TWC.Weekend.DetailsValuesCommon">
    <posx>128</posx>
    <align>left</align>
    <textcolor>white</textcolor>
    <include>TWC.Weekend.DetailsLabelsCommon</include>
  </include>
  <include name="TWC.Weekend.DetailsLabelsCommon">
    <posx>0</posx>
    <posy>277</posy>
    <width>150</width>
    <height>20</height>
    <font>Font_Info</font>
    <align>right</align>
    <aligny>center</aligny>
    <textoffsetx>17</textoffsetx>
    <textcolor>grey2</textcolor>
    <shadowcolor>black</shadowcolor>
    <focusedcolor>grey2</focusedcolor>
    <texturefocus>-</texturefocus>
    <texturenofocus>-</texturenofocus>
  </include>
  <include name="TWC.Weekend.DetailsLabels">
    <posy>277</posy>
    <width>130</width>
    <height>150</height>
    <itemgap>0</itemgap>
    <orientation>vertical</orientation>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[406]:</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[403]:</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[383]:</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[33021]:</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[33027]:</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[33028]:</label>
    </control>
  </include>
  <include name="TWC.Weekend.ObservedLabels">
    <posy>277</posy>
    <width>130</width>
    <height>170</height>
    <itemgap>0</itemgap>
    <orientation>vertical</orientation>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[31923]:</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[31924]:</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>-</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[31927]:</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[31928]:</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>-</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[31925]:</label>
    </control>
    <control type="button">
      <include>TWC.Weekend.DetailsLabelsCommon</include>
      <label>$LOCALIZE[31926]:</label>
    </control>
  </include>
  <include name="TWC.Weekend">
    <control type="group">
      <posx>290</posx>
      <posy>60</posy>
      <visible>StringCompare(Window.Property(Weather.CurrentView),$LOCALIZE[31903] $LOCALIZE[31911])</visible>
      <animation effect="fade" reversible="true" time="300">VisibleChange</animation>
      <control type="label">
        <description>loading label</description>
        <include>TWC.LoadingLabelCommon</include>
        <visible>IsEmpty(Window.Property(Weekend.IsFetched))</visible>
      </control>
      <control type="grouplist">
        <visible>!IsEmpty(Window.Property(Weekend.IsFetched))</visible>
        <posx>0</posx>
        <posy>25</posy>
        <width>920</width>
        <itemgap>0</itemgap>
        <orientation>horizontal</orientation>
        <!-- friday -->
        <control type="group">
          <width>275</width>
          <control type="label">
            <description>heading</description>
            <include>TWC.Weekend.DateCommon</include>
            <label>$INFO[Window.Property(Weekend.1.Date)]</label>
          </control>
          <control type="label">
            <description>heading</description>
            <include>TWC.Weekend.DayCommon</include>
            <label>[B]$LOCALIZE[15][/B]</label>
          </control>
          <control type="image">
            <description>forecast icon</description>
            <include>TWC.Weekend.DayIconCommon</include>
            <info>Window.Property(Weekend.1.OutlookIcon)</info>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>forecast icon</description>
            <include>TWC.Weekend.DayIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Weekend.1.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>outlook label</description>
            <include>TWC.Weekend.DayOutlookCommon</include>
            <info>Window.Property(Weekend.1.Outlook)</info>
          </control>
          <control type="label">
            <description>high temp label</description>
            <label>[B]$LOCALIZE[393][/B]</label>
            <include>TWC.Weekend.HighTemperatureHeadingCommon</include>
          </control>
          <control type="label">
            <description>temp label</description>
            <label fallback="N/A">$INFO[Window.Property(Weekend.1.HighTemperature)]</label>
            <include>TWC.Weekend.HighTemperatureCommon</include>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.1.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Weekend.1.HighTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Temp label units</description>
            <include>TWC.Weekend.HighTempUnitsCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.1.HighTemperature))</visible>
            <animation effect="slide" start="0,0" end="12,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.1.HighTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.1.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Weekend.1.HighTemperature),9)">Conditional</animation>
          </control>
          <include>TWC.Weekend.LowTempHeadingCommon</include>
          <control type="label">
            <description>low temp</description>
            <info>Window.Property(Weekend.1.LowTemperature)</info>
            <include>TWC.Weekend.LowTempCommon</include>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.1.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Weekend.1.LowTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>temp units</description>
            <include>TWC.Weekend.LowTempUnitsCommon</include>
            <visible>!StringCompare(Window.Property(Weekend.1.LowTemperature),N/A)</visible>
            <animation effect="slide" start="0,0" end="10,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.1.LowTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-11,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.1.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Weekend.1.LowTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-1,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.1.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Weekend.1.LowTemperature),-10)">Conditional</animation>
          </control>
          <control type="label">
            <label>[B]$LOCALIZE[33029][/B]</label>
            <include>TWC.Weekend.DetailsHeadingCommon</include>
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.1.Observed))</visible>
          </control>
          <control type="label">
            <description>precip</description>
            <label>$INFO[Window.Property(Weekend.1.ObservedPrecipitation),$LOCALIZE[33021] ,]</label>
            <posx>130</posx>
            <include>TWC.Weekend.DayOutlookCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.1.Observed))</visible>
          </control>
          <control type="label">
            <label>[B]$LOCALIZE[31943][/B]</label>
            <include>TWC.Weekend.DetailsHeadingCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.1.Observed))</visible>
          </control>
          <control type="label">
            <description>observed</description>
            <posy>525</posy>
            <font>Font_Reg20</font>
            <label>[I][B]($LOCALIZE[33025])[/B][/I]</label>
            <include>TWC.Weekend.DetailsHeadingCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.1.Observed))</visible>
          </control>
          <!-- details -->
          <control type="grouplist">
            <description>details labels</description>
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.1.Observed))</visible>
            <include>TWC.Weekend.DetailsLabels</include>
          </control>
          <control type="grouplist">
            <description>details values</description>
            <itemgap>0</itemgap>
            <orientation>vertical</orientation>
            <height>150</height>
            <include>TWC.Weekend.DetailsValuesCommon</include>
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.1.Observed))</visible>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.UV)]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.Wind)]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.Precipitation),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.Sunrise)]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.Sunset)]</label>
            </control>
          </control>
          <!-- observed -->
          <control type="grouplist">
            <description>observed labels</description>
            <visible>!IsEmpty(Window.Property(Weekend.1.Observed))</visible>
            <include>TWC.Weekend.ObservedLabels</include>
          </control>
          <control type="grouplist">
            <description>observed</description>
            <height>170</height>
            <itemgap>0</itemgap>
            <orientation>vertical</orientation>
            <include>TWC.Weekend.DetailsValuesCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.1.Observed))</visible>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.ObservedAvgHighTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.ObservedAvgLowTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsLabelsCommon</include>
              <label>-</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.HighTemperature)]$INFO[System.TemperatureUnits]  ($INFO[Window.Property(Weekend.1.DepartureHigh)]$INFO[System.TemperatureUnits])</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.LowTemperature)]$INFO[System.TemperatureUnits]  ($INFO[Window.Property(Weekend.1.DepartureLow)]$INFO[System.TemperatureUnits])</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsLabelsCommon</include>
              <label>-</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.ObservedRecordHighTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.1.ObservedRecordLowTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
          </control>
          <!-- forecast no details-->
          <control type="group">
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.1.Observed))</visible>
            <control type="label">
              <description>forecast label</description>
              <include>TWC.Weekend.ForecastHeadingCommon</include>
            </control>
            <control type="textbox">
              <description>forecast</description>
              <include>TWC.Weekend.ForecastCommon</include>
              <info>Window.Property(Weekend.1.Forecast)</info>
              <visible>!IsEmpty(Window.Property(Weekend.IsFetched))</visible>
            </control>
          </control>
          <!-- forecast w/ details-->
          <control type="group">
            <visible>Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.1.Observed))</visible>
            <control type="label">
              <description>forecast label</description>
              <posy>253</posy>
              <include>TWC.Weekend.ForecastHeadingCommon</include>
            </control>
            <control type="textbox">
              <description>forecast</description>
              <posy>274</posy>
              <height>236</height>
              <include>TWC.Weekend.ForecastCommon</include>
              <info>Window.Property(Weekend.1.Forecast)</info>
              <visible>!IsEmpty(Window.Property(Weekend.IsFetched))</visible>
            </control>
            <control type="label">
              <description>precip</description>
              <posy>525</posy>
              <font>Font_Reg20</font>
              <textcolor>grey</textcolor>
              <label>$INFO[Window.Property(Weekend.1.Precipitation),$LOCALIZE[33021] ,%]</label>
              <include>TWC.Weekend.ForecastHeadingCommon</include>
            </control>
          </control>
          <include>TWC.Weekend.DaySeparator</include>
        </control>
        <!-- saturday -->
        <control type="group">
          <width>275</width>
          <control type="label">
            <description>heading</description>
            <include>TWC.Weekend.DateCommon</include>
            <label>$INFO[Window.Property(Weekend.2.Date)]</label>
          </control>
          <control type="label">
            <description>heading</description>
            <include>TWC.Weekend.DayCommon</include>
            <label>[B]$LOCALIZE[16][/B]</label>
          </control>
          <control type="image">
            <description>forecast icon</description>
            <include>TWC.Weekend.DayIconCommon</include>
            <info>Window.Property(Weekend.2.OutlookIcon)</info>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>forecast icon</description>
            <include>TWC.Weekend.DayIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Weekend.2.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>outlook label</description>
            <include>TWC.Weekend.DayOutlookCommon</include>
            <info>Window.Property(Weekend.2.Outlook)</info>
          </control>
          <control type="label">
            <description>high temp label</description>
            <label>[B]$LOCALIZE[393][/B]</label>
            <include>TWC.Weekend.HighTemperatureHeadingCommon</include>
          </control>
          <control type="label">
            <description>temp label</description>
            <label fallback="N/A">$INFO[Window.Property(Weekend.2.HighTemperature)]</label>
            <include>TWC.Weekend.HighTemperatureCommon</include>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.2.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Weekend.2.HighTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Temp label units</description>
            <include>TWC.Weekend.HighTempUnitsCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.2.HighTemperature))</visible>
            <animation effect="slide" start="0,0" end="12,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.2.HighTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.2.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Weekend.2.HighTemperature),9)">Conditional</animation>
          </control>
          <include>TWC.Weekend.LowTempHeadingCommon</include>
          <control type="label">
            <description>low temp</description>
            <info>Window.Property(Weekend.2.LowTemperature)</info>
            <include>TWC.Weekend.LowTempCommon</include>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.2.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Weekend.2.LowTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>temp units</description>
            <include>TWC.Weekend.LowTempUnitsCommon</include>
            <visible>!StringCompare(Window.Property(Weekend.2.LowTemperature),N/A)</visible>
            <animation effect="slide" start="0,0" end="10,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.2.LowTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-11,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.2.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Weekend.2.LowTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-1,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.2.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Weekend.2.LowTemperature),-10)">Conditional</animation>
          </control>
          <control type="label">
            <label>[B]$LOCALIZE[33029][/B]</label>
            <include>TWC.Weekend.DetailsHeadingCommon</include>
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.2.Observed))</visible>
          </control>
          <control type="label">
            <description>precip</description>
            <label>$INFO[Window.Property(Weekend.2.ObservedPrecipitation),$LOCALIZE[33021] ,]</label>
            <posx>130</posx>
            <include>TWC.Weekend.DayOutlookCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.2.Observed))</visible>
          </control>
          <control type="label">
            <label>[B]$LOCALIZE[31943][/B]</label>
            <include>TWC.Weekend.DetailsHeadingCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.2.Observed))</visible>
          </control>
          <control type="label">
            <description>observed</description>
            <posy>525</posy>
            <font>Font_Reg20</font>
            <label>[I][B]($LOCALIZE[33025])[/B][/I]</label>
            <include>TWC.Weekend.DetailsHeadingCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.2.Observed))</visible>
          </control>
          <!-- details -->
          <control type="grouplist">
            <description>details labels</description>
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.2.Observed))</visible>
            <include>TWC.Weekend.DetailsLabels</include>
          </control>
          <control type="grouplist">
            <description>details values</description>
            <itemgap>0</itemgap>
            <orientation>vertical</orientation>
            <height>150</height>
            <include>TWC.Weekend.DetailsValuesCommon</include>
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.2.Observed))</visible>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.UV)]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.Wind)]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.Precipitation),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.Sunrise)]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.Sunset)]</label>
            </control>
          </control>
          <!-- observed -->
          <control type="grouplist">
            <description>observed labels</description>
            <visible>!IsEmpty(Window.Property(Weekend.2.Observed))</visible>
            <include>TWC.Weekend.ObservedLabels</include>
          </control>
          <control type="grouplist">
            <description>observed</description>
            <height>170</height>
            <itemgap>0</itemgap>
            <orientation>vertical</orientation>
            <include>TWC.Weekend.DetailsValuesCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.2.Observed))</visible>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.ObservedAvgHighTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.ObservedAvgLowTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsLabelsCommon</include>
              <label>-</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.HighTemperature)]$INFO[System.TemperatureUnits]  ($INFO[Window.Property(Weekend.2.DepartureHigh)]$INFO[System.TemperatureUnits])</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.LowTemperature)]$INFO[System.TemperatureUnits]  ($INFO[Window.Property(Weekend.2.DepartureLow)]$INFO[System.TemperatureUnits])</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsLabelsCommon</include>
              <label>-</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.ObservedRecordHighTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.2.ObservedRecordLowTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
          </control>
          <!-- forecast no details-->
          <control type="group">
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.2.Observed))</visible>
            <control type="label">
              <description>forecast label</description>
              <include>TWC.Weekend.ForecastHeadingCommon</include>
            </control>
            <control type="textbox">
              <description>forecast</description>
              <include>TWC.Weekend.ForecastCommon</include>
              <info>Window.Property(Weekend.2.Forecast)</info>
              <visible>!IsEmpty(Window.Property(Weekend.IsFetched))</visible>
            </control>
          </control>
          <!-- forecast w/ details-->
          <control type="group">
            <visible>Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.2.Observed))</visible>
            <control type="label">
              <description>forecast label</description>
              <posy>253</posy>
              <include>TWC.Weekend.ForecastHeadingCommon</include>
            </control>
            <control type="textbox">
              <description>forecast</description>
              <posy>274</posy>
              <height>236</height>
              <include>TWC.Weekend.ForecastCommon</include>
              <info>Window.Property(Weekend.2.Forecast)</info>
              <visible>!IsEmpty(Window.Property(Weekend.IsFetched))</visible>
            </control>
            <control type="label">
              <description>precip</description>
              <posy>525</posy>
              <font>Font_Reg20</font>
              <textcolor>grey</textcolor>
              <label>$INFO[Window.Property(Weekend.2.Precipitation),$LOCALIZE[33021] ,%]</label>
              <include>TWC.Weekend.ForecastHeadingCommon</include>
            </control>
          </control>
          <include>TWC.Weekend.DaySeparator</include>
        </control>
        <!-- sunday -->
        <control type="group">
          <width>275</width>
          <control type="label">
            <description>heading</description>
            <include>TWC.Weekend.DateCommon</include>
            <label>$INFO[Window.Property(Weekend.3.Date)]</label>
          </control>
          <control type="label">
            <description>heading</description>
            <include>TWC.Weekend.DayCommon</include>
            <label>[B]$LOCALIZE[17][/B]</label>
          </control>
          <control type="image">
            <description>forecast icon</description>
            <include>TWC.Weekend.DayIconCommon</include>
            <info>Window.Property(Weekend.3.OutlookIcon)</info>
            <visible>!Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="multiimage">
            <description>forecast icon</description>
            <include>TWC.Weekend.DayIconCommon</include>
            <timeperimage>75</timeperimage>
            <randomize>false</randomize>
            <fadetime>0</fadetime>
            <imagepath>$INFO[Skin.String(AnimatedWeatherIconsDir)]$INFO[Window.Property(Weekend.3.FanartCode)]</imagepath>
            <visible>Skin.HasSetting(AnimatedWeatherIcons)</visible>
          </control>
          <control type="label">
            <description>outlook label</description>
            <include>TWC.Weekend.DayOutlookCommon</include>
            <info>Window.Property(Weekend.3.Outlook)</info>
          </control>
          <control type="label">
            <description>high temp label</description>
            <label>[B]$LOCALIZE[393][/B]</label>
            <include>TWC.Weekend.HighTemperatureHeadingCommon</include>
          </control>
          <control type="label">
            <description>temp label</description>
            <label fallback="N/A">$INFO[Window.Property(Weekend.3.HighTemperature)]</label>
            <include>TWC.Weekend.HighTemperatureCommon</include>
            <animation effect="slide" start="0,0" end="-7,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.3.HighTemperature),-100) + !IntegerGreaterThan(Window.Property(Weekend.3.HighTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>Temp label units</description>
            <include>TWC.Weekend.HighTempUnitsCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.3.HighTemperature))</visible>
            <animation effect="slide" start="0,0" end="12,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.3.HighTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-12,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.3.HighTemperature),-10) + !IntegerGreaterThan(Window.Property(Weekend.3.HighTemperature),9)">Conditional</animation>
          </control>
          <include>TWC.Weekend.LowTempHeadingCommon</include>
          <control type="label">
            <description>low temp</description>
            <info>Window.Property(Weekend.3.LowTemperature)</info>
            <include>TWC.Weekend.LowTempCommon</include>
            <animation effect="slide" start="0,0" end="-6,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.3.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Weekend.3.LowTemperature),-1)">Conditional</animation>
          </control>
          <control type="label">
            <description>temp units</description>
            <include>TWC.Weekend.LowTempUnitsCommon</include>
            <visible>!StringCompare(Window.Property(Weekend.3.LowTemperature),N/A)</visible>
            <animation effect="slide" start="0,0" end="10,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.3.LowTemperature),99)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-11,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.3.LowTemperature),-10) + !IntegerGreaterThan(Window.Property(Weekend.3.LowTemperature),9)">Conditional</animation>
            <animation effect="slide" start="0,0" end="-1,0" time="0" condition="IntegerGreaterThan(Window.Property(Weekend.3.LowTemperature),-100) + !IntegerGreaterThan(Window.Property(Weekend.3.LowTemperature),-10)">Conditional</animation>
          </control>
          <control type="label">
            <label>[B]$LOCALIZE[33029][/B]</label>
            <include>TWC.Weekend.DetailsHeadingCommon</include>
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.3.Observed))</visible>
          </control>
          <control type="label">
            <description>precip</description>
            <label>$INFO[Window.Property(Weekend.3.ObservedPrecipitation),$LOCALIZE[33021] ,]</label>
            <posx>130</posx>
            <include>TWC.Weekend.DayOutlookCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.3.Observed))</visible>
          </control>
          <control type="label">
            <label>[B]$LOCALIZE[31943][/B]</label>
            <include>TWC.Weekend.DetailsHeadingCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.3.Observed))</visible>
          </control>
          <control type="label">
            <description>observed</description>
            <posy>525</posy>
            <font>Font_Reg20</font>
            <label>[I][B]($LOCALIZE[33025])[/B][/I]</label>
            <include>TWC.Weekend.DetailsHeadingCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.3.Observed))</visible>
          </control>
          <!-- details -->
          <control type="grouplist">
            <description>details labels</description>
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.3.Observed))</visible>
            <include>TWC.Weekend.DetailsLabels</include>
          </control>
          <control type="grouplist">
            <description>details values</description>
            <itemgap>0</itemgap>
            <orientation>vertical</orientation>
            <height>150</height>
            <include>TWC.Weekend.DetailsValuesCommon</include>
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.3.Observed))</visible>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.Humidity),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.UV)]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.Wind)]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.Precipitation),,%]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.Sunrise)]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.Sunset)]</label>
            </control>
          </control>
          <!-- observed -->
          <control type="grouplist">
            <description>observed labels</description>
            <visible>!IsEmpty(Window.Property(Weekend.3.Observed))</visible>
            <include>TWC.Weekend.ObservedLabels</include>
          </control>
          <control type="grouplist">
            <description>observed</description>
            <height>170</height>
            <itemgap>0</itemgap>
            <orientation>vertical</orientation>
            <include>TWC.Weekend.DetailsValuesCommon</include>
            <visible>!IsEmpty(Window.Property(Weekend.3.Observed))</visible>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.ObservedAvgHighTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.ObservedAvgLowTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsLabelsCommon</include>
              <label>-</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.HighTemperature)]$INFO[System.TemperatureUnits]  ($INFO[Window.Property(Weekend.3.DepartureHigh)]$INFO[System.TemperatureUnits])</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.LowTemperature)]$INFO[System.TemperatureUnits]  ($INFO[Window.Property(Weekend.3.DepartureLow)]$INFO[System.TemperatureUnits])</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsLabelsCommon</include>
              <label>-</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.ObservedRecordHighTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
            <control type="label">
              <include>TWC.Weekend.DetailsValuesCommon</include>
              <label>$INFO[Window.Property(Weekend.3.ObservedRecordLowTemperature)]$INFO[System.TemperatureUnits]</label>
            </control>
          </control>
          <!-- forecast no details-->
          <control type="group">
            <visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.3.Observed))</visible>
            <control type="label">
              <description>forecast label</description>
              <include>TWC.Weekend.ForecastHeadingCommon</include>
            </control>
            <control type="textbox">
              <description>forecast</description>
              <include>TWC.Weekend.ForecastCommon</include>
              <info>Window.Property(Weekend.3.Forecast)</info>
              <visible>!IsEmpty(Window.Property(Weekend.IsFetched))</visible>
            </control>
          </control>
          <!-- forecast w/ details-->
          <control type="group">
            <visible>Skin.HasSetting(TWC.ShowWeekendDetails) + IsEmpty(Window.Property(Weekend.3.Observed))</visible>
            <control type="label">
              <description>forecast label</description>
              <posy>253</posy>
              <include>TWC.Weekend.ForecastHeadingCommon</include>
            </control>
            <control type="textbox">
              <description>forecast</description>
              <posy>274</posy>
              <height>236</height>
              <include>TWC.Weekend.ForecastCommon</include>
              <info>Window.Property(Weekend.3.Forecast)</info>
              <visible>!IsEmpty(Window.Property(Weekend.IsFetched))</visible>
            </control>
            <control type="label">
              <description>precip</description>
              <posy>525</posy>
              <font>Font_Reg20</font>
              <textcolor>grey</textcolor>
              <label>$INFO[Window.Property(Weekend.3.Precipitation),$LOCALIZE[33021] ,%]</label>
              <include>TWC.Weekend.ForecastHeadingCommon</include>
            </control>
          </control>
        </control>
      </control>
    </control>
  </include>
  <include name="Weather_Plus">
    <defaultcontrol always="true">20000</defaultcontrol>
    <allowoverlay>no</allowoverlay>
    <controls>
      <include>CommonWeatherBackground</include>
      <!--include>TWC.Video.BGVideoWindow</include-->
      <control type="group">
        <include>Animation_OpenCloseZoom</include>
        <control type="button" id="20000">
          <!-- current conditions view -->
          <description>dummy button to set initial view</description>
          <posx>0</posx>
          <posy>0</posy>
          <width>0</width>
          <height>0</height>
          <texturenofocus>-</texturenofocus>
          <texturefocus>-</texturefocus>
          <onfocus>SetFocus(2000)</onfocus>
          <onfocus>SetProperty(Weather.CurrentView,$LOCALIZE[31905] $LOCALIZE[31912])</onfocus>
          <onfocus>SetProperty(Weather.CurrentViewMenu,$LOCALIZE[31905])</onfocus>
          <onfocus>Skin.Reset(TWC.ZoomWeatherMap)</onfocus>
          <visible>IsEmpty(Window.Property(Weather.CurrentView)) + IsEmpty(Skin.String(TWC.DefaultView)) + IsEmpty(Window.Property(Alerts))</visible>
        </control>
        <control type="button" id="20000">
          <!-- user selected default view -->
          <description>dummy button to set initial view</description>
          <posx>0</posx>
          <posy>0</posy>
          <width>0</width>
          <height>0</height>
          <texturenofocus>-</texturenofocus>
          <texturefocus>-</texturefocus>
          <onfocus>SetFocus(2000)</onfocus>
          <onfocus>SetProperty(Weather.CurrentView,$INFO[Skin.String(TWC.DefaultView)])</onfocus>
          <onfocus>SetProperty(Weather.CurrentViewMenu,$INFO[Skin.String(TWC.DefaultViewMenu)])</onfocus>
          <onfocus>Skin.Reset(TWC.ZoomWeatherMap)</onfocus>
          <visible>IsEmpty(Window.Property(Weather.CurrentView)) + !IsEmpty(Skin.String(TWC.DefaultView)) + IsEmpty(Window.Property(Alerts))</visible>
        </control>
        <control type="button" id="20000">
          <!-- alerts view -->
          <description>dummy button to set initial view</description>
          <posx>0</posx>
          <posy>0</posy>
          <width>0</width>
          <height>0</height>
          <texturenofocus>-</texturenofocus>
          <texturefocus>-</texturefocus>
          <onfocus>SetFocus(2000)</onfocus>
          <onfocus>SetProperty(Weather.CurrentView,$LOCALIZE[31906] - $LOCALIZE[31913])</onfocus>
          <onfocus>SetProperty(Weather.CurrentViewMenu,$LOCALIZE[31906])</onfocus>
          <onfocus>Skin.Reset(TWC.ZoomWeatherMap)</onfocus>
          <visible>IsEmpty(Window.Property(Weather.CurrentView)) + !IsEmpty(Window.Property(Alerts))</visible>
        </control>
        <control type="button" id="20000">
          <!-- previous view -->
          <description>dummy button to set initial view</description>
          <posx>0</posx>
          <posy>0</posy>
          <width>0</width>
          <height>0</height>
          <texturenofocus>-</texturenofocus>
          <texturefocus>-</texturefocus>
          <onfocus>SetFocus(2000)</onfocus>
          <onfocus>Skin.Reset(TWC.ZoomWeatherMap)</onfocus>
          <visible>!IsEmpty(Window.Property(Weather.CurrentView))</visible>
        </control>
        <include>Furniture_SettingsBackPanel</include>
        <control type="group">
          <posx>60</posx>
          <posy>40</posy>
          <animation effect="fade" time="200">WindowOpen</animation>
          <animation effect="fade" time="300">WindowClose</animation>
          <control type="label">
            <description>header label</description>
            <posx>210</posx>
            <posy>10</posy>
            <width>760</width>
            <height>30</height>
            <font>Font_Reg25</font>
            <label>$INFO[Window.Property(Weather.CurrentView)]</label>
            <align>left</align>
            <aligny>center</aligny>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <control type="label">
            <description>last updated value</description>
            <posx>210</posx>
            <posy>33</posy>
            <width>760</width>
            <height>30</height>
            <font>Font_Reg12</font>
            <align>left</align>
            <aligny>center</aligny>
            <textcolor>grey2</textcolor>
            <shadowcolor>black</shadowcolor>
            <label>$INFO[Window.Property(Updated),$LOCALIZE[31301]: ,]</label>
          </control>
          <!--include>TWC.AlertsRSS</include-->
          <control type="image">
            <posx>60</posx>
            <posy>15</posy>
            <width>60</width>
            <height>60</height>
            <texture>twc-logo.png</texture>
          </control>
          <control type="label">
            <description>plugin name</description>
            <posx>1120</posx>
            <posy>16</posy>
            <width>300</width>
            <height>20</height>
            <label>[B]$INFO[Window.Property(PluginName)][/B]</label>
            <align>right</align>
            <aligny>center</aligny>
            <font>Font_Reg20</font>
            <textcolor>grey3</textcolor>
            <shadowcolor>black</shadowcolor>
          </control>
          <!-- dummy buttons for video playback and navigation -->
          <include>TWC.Video.FakeButtons</include>
          <!-- views -->
          <control type="group" id="3000">
            <posy>-40</posy>
            <include>TWC.Current</include>
            <include>TWC.36Hour</include>
            <include>TWC.Hourly</include>
            <include>TWC.Weekend</include>
            <include>TWC.Daily</include>
            <include>TWC.Maps</include>
            <include>TWC.Alerts</include>
            <include>TWC.Video</include>
          </control>
          <!-- Main Menu Buttons -->
          <control type="grouplist" id="2000">
            <description>control area</description>
            <posx>-16</posx>
            <posy>80</posy>
            <width>260</width>
            <height>546</height>
            <itemgap>-1</itemgap>
            <onleft>3</onleft>
            <onright>3</onright>
            <onup>2000</onup>
            <ondown>2000</ondown>
            <pagecontrol>-</pagecontrol>
            <include>TWC.Current.Button</include>
            <include>TWC.36Hour.Button</include>
            <include>TWC.Hourly.Button</include>
            <include>TWC.Weekend.Button</include>
            <include>TWC.Daily.Button</include>
            <include>TWC.Maps.Button</include>
            <include>TWC.Alerts.Button</include>
            <include>TWC.Video.Button</include>
          </control>
          <!-- The Extra Labels for the above buttons button -->
          <control type="grouplist">
            <description>control area</description>
            <posx>-16</posx>
            <posy>110</posy>
            <width>260</width>
            <height>546</height>
            <itemgap>-1</itemgap>
            <onleft>2000</onleft>
            <onright>3000</onright>
            <onup>2000</onup>
            <ondown>2000</ondown>
            <pagecontrol>-</pagecontrol>
            <include>TWC.Current.ButtonXLabel</include>
            <include>TWC.36Hour.ButtonXLabel</include>
            <include>TWC.Hourly.ButtonXLabel</include>
            <include>TWC.Weekend.ButtonXLabel</include>
            <include>TWC.Daily.ButtonXLabel</include>
            <include>TWC.Maps.ButtonXLabel</include>
            <include>TWC.Alerts.ButtonXLabel</include>
            <include>TWC.Video.ButtonXLabel</include>
          </control>
        </control>
      </control>
      <control type="group">
        <control type="group" id="9001">
          <posx>-220</posx>
          <posy>0</posy>
          <control type="button">
            <description>Fake button for mouse control</description>
            <posx>-15</posx>
            <posy>0</posy>
            <width>245</width>
            <height>720</height>
            <label>-</label>
            <font>-</font>
            <texturenofocus>-</texturenofocus>
            <texturefocus>-</texturefocus>
            <visible>true</visible>
          </control>
          <!-- dummy buttons for defaultview -->
          <control type="button" id="91199">
            <posy>-1000</posy>
            <onfocus>SetFocus(90199)</onfocus>
            <onfocus>Skin.Reset(TWC.DefaultView)</onfocus>
            <onfocus>Skin.Reset(TWC.DefaultViewMenu)</onfocus>
            <visible>StringCompare(Window.Property(Weather.CurrentView),Skin.String(TWC.DefaultView))</visible>
          </control>
          <control type="button" id="91199">
            <posy>-1000</posy>
            <onfocus>SetFocus(90199)</onfocus>
            <onfocus>Skin.SetString(TWC.DefaultView,$INFO[Window.Property(Weather.CurrentView)])</onfocus>
            <onfocus>Skin.SetString(TWC.DefaultViewMenu,$INFO[Window.Property(Weather.CurrentViewMenu)])</onfocus>
            <visible>!StringCompare(Window.Property(Weather.CurrentView),Skin.String(TWC.DefaultView))</visible>
          </control>
          <!-- dummy buttons for defaultmap -->
          <include>TWC.Maps.DummyButtons</include>
        </control>
        <control type="button" id="8999">
          <description>Fake button for mouse control</description>
          <posx>-250</posx>
          <posy>0</posy>
          <width>265</width>
          <height>720</height>
          <label>-</label>
          <font>-</font>
          <texturenofocus>-</texturenofocus>
          <texturefocus>-</texturefocus>
          <visible>true</visible>
        </control>
      </control>
      <control type="group">
        <posx>450</posx>
        <posy>-15</posy>
        <include>Animation_OpenCloseZoom</include>
        <control type="label">
          <description>weather location label</description>
          <posx>420</posx>
          <posy>65</posy>
          <width>460</width>
          <height>30</height>
          <font>Font_Reg18</font>
          <textcolor>white</textcolor>
          <scroll>false</scroll>
          <align>right</align>
          <aligny>center</aligny>
          <label>$INFO[Window(Weather).Property(Location)]</label>
        </control>
        <control type="spincontrolex" id="3">
          <description>change location button</description>
          <posx>200</posx>
          <posy>60</posy>
          <textcolor>00bbbbbb</textcolor>
          <focusedcolor>00FFFFFF</focusedcolor>
          <textureup>settings/spin-up.png</textureup>
          <texturedown>settings/spin-down.png</texturedown>
          <textureupfocus>settings/spin-up-focus.png</textureupfocus>
          <texturedownfocus>settings/spin-down-focus.png</texturedownfocus>
          <texturenofocus>-</texturenofocus>
          <texturefocus>-</texturefocus>
          <font>-</font>
          <disabledcolor>FFFFFFFF</disabledcolor>
          <aligny>center</aligny>
          <align>-</align>
          <textoffsetx>130</textoffsetx>
          <spinposx>-2</spinposx>
          <spinwidth>40</spinwidth>
          <spinheight>65</spinheight>
          <onleft>2000</onleft>
          <onright>4</onright>
          <onup>2000</onup>
          <ondown>3000</ondown>
        </control>
      </control>
      <control type="group">
        <posx>900</posx>
        <posy>-590</posy>
        <include>Animation_OpenCloseZoom</include>
        <control type="button" id="4">
          <description>Settings button</description>
          <label>5</label>
          <onclick>ActivateWindow(MyWeatherSettings)</onclick>
          <posx>50</posx>
          <posy>640</posy>
          <width>120</width>
          <height>30</height>
          <texturefocus border="5">dialogs/context_highlight.png</texturefocus>
          <texturenofocus border="5">dialogs/context_nofocus.png</texturenofocus>
          <textcolor>80FFFFFF</textcolor>
          <focusedcolor>FFFFFFFF</focusedcolor>
          <font>Font_Reg18</font>
          <align>center</align>
          <aligny>center</aligny>
          <onleft>3</onleft>
          <onright>2</onright>
          <onup>3</onup>
          <ondown>3000</ondown>
        </control>
        <control type="button" id="2">
          <description>Refresh button</description>
          <posx>170</posx>
          <posy>640</posy>
          <width>120</width>
          <height>30</height>
          <texturefocus border="5">dialogs/context_highlight.png</texturefocus>
          <texturenofocus border="5">dialogs/context_nofocus.png</texturenofocus>
          <label>103</label>
          <textcolor>80FFFFFF</textcolor>
          <focusedcolor>FFFFFFFF</focusedcolor>
          <font>Font_Reg18</font>
          <align>center</align>
          <aligny>center</aligny>
          <onleft>4</onleft>
          <onright>2000</onright>
          <onup>3</onup>
          <ondown>3000</ondown>
        </control>
      </control>
      <control type="image">
        <!--background image-->
        <description>background image</description>
        <posx>42</posx>
        <posy>28</posy>
        <width>1196</width>
        <height>651</height>
        <texture>settings/settings_panelfront.png</texture>
        <include>Animation_OpenCloseZoom</include>
      </control>
      <include condition="Skin.HasSetting(breadcrumb)">Breadcrumbs</include>
      <include condition="Skin.HasSetting(globaltime)">Furniture_Clock</include>
      <include>Furniture_NowPlayingWidget</include>
    </controls>
  </include>
</includes>